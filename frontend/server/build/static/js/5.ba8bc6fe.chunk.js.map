{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","get","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","type","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","slice","call","arguments","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","process","__webpack_exports__","Doughnut","Pie","Bar","HorizontalBar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","_tooltipBodyItemValue","positionY","offsetTop","positionX","positionLeft","positionTop","customTooltips"],"mappings":"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","file":"static/js/5.ba8bc6fe.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global['custom-tooltips'] = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var position = this._chart.canvas.getBoundingClientRect();\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft;\n    var positionLeft = positionX + tooltipModel.caretX;\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\n\n    var halfWidth = tooltipModel.width / 2;\n\n    if (positionLeft + halfWidth > position.width) {\n      positionLeft -= halfWidth;\n    } else if (positionLeft < halfWidth) {\n      positionLeft += halfWidth;\n    } // Display, position, and set styles for font\n\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionLeft + \"px\";\n    tooltip.style.top = positionTop + \"px\";\n  }\n\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}