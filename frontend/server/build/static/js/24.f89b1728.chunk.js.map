{"version":3,"sources":["components/TestCasesAll/moodEditor.js","components/TestCasesAll/moodRenderer.js","components/TestCasesAll/numericEditor.js","components/TestCasesAll/selectionEditor.js","components/TestCasesAll/datePickerEditor.js","../node_modules/reactstrap/es/Collapse.js","../node_modules/reactstrap/es/Table.js","../node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.js","components/CustomerBugs/ReleaseStatusGraphs.js","views/Release/ReleaseStatus/ReleaseStatus.js"],"names":["MoodEditor","props","_this","Object","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","checkAndToggleMoodIfLeftRight","event","indexOf","keyCode","toggleMood","stopPropagation","onHappyClick","bind","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onSadClick","state","happy","setHappy","value","refs","container","addEventListener","focus","removeEventListener","_this2","window","setTimeout","ReactDOM","findDOMNode","setState","_this3","api","stopEditing","_this4","unselected","paddingLeft","paddingRight","border","padding","selected","happyStyle","sadStyle","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","ref","style","borderRadius","background","textAlign","display","tabIndex","src","onClick","Component","MoodRenderer","setMood","params","mood","imgForMood","react__WEBPACK_IMPORTED_MODULE_5___default","width","KEY_BACKSPACE","KEY_DELETE","NumericEditor","cancelBeforeStart","charPress","createInitialState","onKeyDown","handleChange","startValue","highlightAllOnFocus","keyPress","input","eInput","select","length","setSelectionRange","isLeftOrRight","deleteOrBackspace","isKeyPressedNumeric","preventDefault","target","which","charStr","test","charCode","getCharCodeFromEvent","key","String","fromCharCode","isCharNumeric","onChange","SelectionEditor","item","values","i","options","push","multiple","reactstrap__WEBPACK_IMPORTED_MODULE_8__","type","e","onMultiSelect","map","onSelect","pattern","_transitionStatusToCl","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","n","prop_types__WEBPACK_IMPORTED_MODULE_6__","prop_types__WEBPACK_IMPORTED_MODULE_6___default","classnames__WEBPACK_IMPORTED_MODULE_7__","classnames__WEBPACK_IMPORTED_MODULE_7___default","react_transition_group__WEBPACK_IMPORTED_MODULE_8__","_utils__WEBPACK_IMPORTED_MODULE_9__","propTypes","isOpen","bool","children","oneOfType","arrayOf","node","tag","className","navbar","cssModule","object","innerRef","func","string","defaultProps","appear","enter","exit","timeout","Collapse","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","height","forEach","name","_proto","prototype","onEntering","isAppearing","onEntered","onExit","onExiting","offsetHeight","onExited","render","_this$props","Tag","otherProps","transitionProps","childProps","in","status","collapseClass","getTransitionClass","classes","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","size","bordered","borderless","striped","dark","hover","responsive","responsiveTag","Table","ResponsiveTag","attributes","table","responsiveClassName","module","exports","Chart","helpers","hasOwnProperty","devicePixelRatio","screen","deviceXDPI","logicalXDPI","utils","toTextLines","inputs","lines","concat","pop","unshift","apply","split","Array","isArray","isNullOrUndef","toFontString","font","family","weight","textSize","ctx","items","ilen","prev","Math","max","measureText","lineHeight","parseFont","global","defaults","valueOrDefault","defaultFontSize","defaultFontFamily","toLineHeight","defaultFontStyle","bound","min","arrayDiff","a0","a1","j","v","slice","updates","splice","rasterize","round","orient","point","origin","x0","x","y0","y","dx","dy","ln","sqrt","R_INSIDE","R_LEFT","R_RIGHT","R_BOTTOM","R_TOP","region","rect","res","left","right","top","bottom","compute","range","config","anchor","segment","clamp","area","r","x1","y1","r0","r1","clipped","vx","vy","align","PI","cos","sin","aligned","positioners","arc","vm","angle","startAngle","endAngle","innerRadius","outerRadius","rx","radius","ry","sx","sy","horizontal","base","abs","fallback","helpers$1","getScaleOrigin","el","_model","scale","_scale","_xScale","_yScale","undefined","xCenter","yCenter","pixel","getBasePixel","drawTextLine","text","cfg","shadow","shadowBlur","stroked","w","strokeText","filled","fillText","Label","index","me","_config","_index","_rects","_ctx","_el","extend","_modelize","context","resolve","color","defaultFontColor","chart","chartArea","backgroundColor","borderColor","borderWidth","clip","offset","opacity","toPadding","positioner","elements","Arc","Point","Rectangle","rotation","textShadowBlur","textShadowColor","textStrokeColor","textStrokeWidth","update","label","model","rects","dataset","data","callback","formatter","th","tw","tx","ty","frame","h","boundingRects","geometry","visible","draw","center","save","beginPath","globalAlpha","translate","rotate","bgColor","canvas","roundedRect","closePath","fillStyle","fill","strokeStyle","lineWidth","lineJoin","stroke","drawFrame","strokeColor","strokeWidth","textGeometry","textBaseline","shadowColor","drawText","restore","helpers$2","MIN_INTEGER","Number","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","rotated","cx","cy","projected","points","axis","pt","dp","toAxis","p0","p1","HitBox","_rotation","_rect","coordinates","view","vs","contains","margin","intersects","other","pr0","pr1","_points","axes","layout","prepare","datasets","jlen","labels","$layout","_box","_hidable","_visible","_set","_idx","sort","b","sa","sb","dirty","collider","s0","s1","collide","h0","h1","compute$1","lookup","_view","helpers$3","keys","klen","k","isObject","listeners","helpers$4","EXPANDO_KEY","dispatchEvent","$context","_dirty","handleMoveEvents","previous","expando","_listeners","leave","_labels","_hovered","dispatchMoveEvents","plugins","datalabels","plugin","id","beforeInit","_actives","beforeUpdate","_listened","_datasets","afterDatasetUpdate","args","datasetIndex","isDatasetVisible","override","merge","configure","meta","hidden","skip","active","dataIndex","merger","source","afterUpdate","afterDatasetsDraw","beforeEvent","handlers","click","handleClickEvents","afterEvent","actives","lastActive","animating","register","factory","ReleaseStatusGraphs","classCallCheck","possibleConstructorReturn","getPrototypeOf","isApiUnderProgress","allTCsToShow","allClosedDefectsToShow","lineweek","filedWeeklyData","closedWeeklyData","newOptions","cloOptions","xcord","lastWeek","lastMonth","buList","relNum","modules","AllCommunityModules","frameworkComponents","moodRenderer","moodEditor","numericEditor","selectionEditor","datePicker","DatePickerEditor","selectedRelease","QAEndDate","QAStartDate","BuList","fixVersion","cusDateStart","cusDateEnd","date","days","result","Date","setDate","getDate","toISOString","currentdate","addDays","getTime","poped","dlabel","toLocaleDateString","month","day","enable","loading","sdate","edate","cusgridOperations","promises1","alert","axios","get","bu","then","all","MaxResult","total","startAt","toConsumableArray","issues","catch","err","Promise","getClosedDefects","promises3","outerPromise","_loop","templist","getDefectsToShow","dtime","console","log","getDatee","array","num","week","Filed","Closed","filedWeekly","SEVP1","SEVP2+","Blocker","closedWeekly","calculateWeek","some","toLowerCase","includes","_loop2","lineTension","lineweekNew","filedWeeklyLine","closedWeeklyLine","_this5","react_default","Row","Col","xs","sm","md","lg","margin-left","cursor","tcOpen","allPendingDefectsToShow","calXCoordinate","getTcs","class","marginBottom","marginTop","marginLeft","react_chartjs_2_es","connect","ownProps","getCurrentRelease","release","current","ReleaseStatus","CustomTooltips","BlockedBugList","list","list2","url","_i","_Object$entries","entries","_ref3","_ref2","slicedToArray","bug_no","sortBugList","blockedBugList","list3","list4","totalBugList","bug","fields","summary","priority","idx","promises","error","renderTableData","href","checkSelectedBug","eachBug","BugsList","trim","epicLink","handleSubmit","formData","post","response","reset","document","getElementById","addTC","open","availWidth","featureOpen","buildOpen","bugOpen","graphsOpen","blockedBugOpen","releaseInfo","singleFeature","feature","getFeatureDetails","self","statusPage","objectSpread","tempRelease","ReleaseNumber","totalCount","totalBugs","maxResults","parseInt","response1","saveBugs","resolved","initialize","newProps","history","dws","issuesArray","res1","subtasks","saveSingleFeature","featuresCount","featuresStatusDict","Open","Resolved","Others","statusScenarios","currentUser","isExe","bugCount","toUpperCase","marginRight","overflowY","maxHeight","scroll","overflow","UpgradeMetrics","Input","readOnly","rows","placeholder","RedFlagsRisks","created","updated","progress","CustomerBugs_ReleaseStatusGraphs","margin-top","auth","selectedTC","testcase","single","app"],"mappings":"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","file":"static/js/24.f89b1728.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport default class MoodEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.onHappyClick = this.onHappyClick.bind(this);\n        this.onSadClick = this.onSadClick.bind(this);\n\n        this.state = {\n            happy: false\n        }\n    }\n\n    componentWillMount() {\n        this.setHappy(this.props.value === \"Happy\");\n    }\n\n    componentDidMount() {\n        this.refs.container.addEventListener('keydown', this.checkAndToggleMoodIfLeftRight);\n        this.focus();\n    }\n\n    componentWillUnmount() {\n        this.refs.container.removeEventListener('keydown', this.checkAndToggleMoodIfLeftRight);\n    }\n\n    checkAndToggleMoodIfLeftRight = (event) => {\n        if ([37, 39].indexOf(event.keyCode) > -1) { // left and right\n            this.toggleMood();\n            event.stopPropagation();\n        }\n    }\n\n    componentDidUpdate() {\n        this.focus();\n    }\n\n    focus() {\n        window.setTimeout(() => {\n            let container = ReactDOM.findDOMNode(this.refs.container);\n            if (container) {\n                container.focus();\n            }\n        })\n    }\n\n    getValue() {\n        return this.state.happy ? \"Happy\" : \"Sad\";\n    }\n\n    isPopup() {\n        return true;\n    }\n\n    setHappy(happy) {\n        this.setState({\n            happy\n        });\n    }\n\n    onHappyClick() {\n        this.setState({\n            happy: true\n        },\n            () => this.props.api.stopEditing()\n        );\n    }\n\n    onSadClick() {\n        this.setState({\n            happy: false\n        },\n            () => this.props.api.stopEditing()\n        );\n    }\n\n    toggleMood() {\n        this.setHappy(!this.state.happy);\n    }\n\n    render() {\n        let mood = {\n            borderRadius: 15,\n            border: \"1px solid grey\",\n            background: \"#e6e6e6\",\n            padding: 15,\n            textAlign: \"center\",\n            display: \"inline-block\"\n        };\n\n        let unselected = {\n            paddingLeft: 10,\n            paddingRight: 10,\n            border: \"1px solid transparent\",\n            padding: 4\n        };\n\n        let selected = {\n            paddingLeft: 10,\n            paddingRight: 10,\n            border: \"1px solid lightgreen\",\n            padding: 4\n        };\n\n        let happyStyle = this.state.happy ? selected : unselected;\n        let sadStyle = !this.state.happy ? selected : unselected;\n\n        return (\n            <div ref=\"container\"\n                style={mood}\n                tabIndex={1} // important - without this the keypresses wont be caught\n            >\n                {\n\n                }\n                <img src=\"https://www.ag-grid.com/images/smiley.png\" onClick={this.onHappyClick} style={happyStyle} />\n                <img src=\"https://www.ag-grid.com/images/smiley-sad.png\" onClick={this.onSadClick} style={sadStyle} />\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n\nexport default class MoodRenderer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setMood(this.props.value)\n    }\n\n    refresh(params) {\n        this.setMood(params.value);\n    }\n\n    setMood(mood) {\n        this.setState({\n            imgForMood: mood === 'Happy' ? 'https://www.ag-grid.com/images/smiley.png' : 'https://www.ag-grid.com/images/smiley-sad.png'\n        })\n    };\n\n    render() {\n        return (\n            <img width=\"20px\" src={this.state.imgForMood} />\n        );\n    }\n}","import React, { Component } from \"react\";\n\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_F2 = 113;\n\nexport default class NumericEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.cancelBeforeStart = this.props.charPress && ('1234567890'.indexOf(this.props.charPress) < 0);\n\n        this.state = this.createInitialState(props);\n\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    createInitialState(props) {\n        let startValue;\n        let highlightAllOnFocus = true;\n\n        if (props.keyPress === KEY_BACKSPACE || props.keyPress === KEY_DELETE) {\n            // if backspace or delete pressed, we clear the cell\n            startValue = '';\n        } else if (props.charPress) {\n            // if a letter was pressed, we start with the letter\n            startValue = props.charPress;\n            highlightAllOnFocus = false;\n        } else {\n            // otherwise we start with the current value\n            startValue = props.value;\n            if (props.keyPress === KEY_F2) {\n                highlightAllOnFocus = false;\n            }\n        }\n\n        return {\n            value: startValue,\n            highlightAllOnFocus\n        }\n    }\n\n    componentDidMount() {\n        this.refs.input.addEventListener('keydown', this.onKeyDown);\n\n    }\n\n    componentWillUnmount() {\n        this.refs.input.removeEventListener('keydown', this.onKeyDown);\n    }\n\n    afterGuiAttached() {\n        // get ref from React component\n        const eInput = this.refs.input;\n        eInput.focus();\n        if (this.state.highlightAllOnFocus) {\n            eInput.select();\n\n            this.setState({\n                highlightAllOnFocus: false\n            })\n        } else {\n            // when we started editing, we want the carot at the end, not the start.\n            // this comes into play in two scenarios: a) when user hits F2 and b)\n            // when user hits a printable character, then on IE (and only IE) the carot\n            // was placed after the first character, thus 'apply' would end up as 'pplea'\n            const length = eInput.value ? eInput.value.length : 0;\n            if (length > 0) {\n                eInput.setSelectionRange(length, length);\n            }\n        }\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    isCancelBeforeStart() {\n        return this.cancelBeforeStart;\n    }\n\n    // will reject the number if it greater than 1,000,000\n    // not very practical, but demonstrates the method.\n    isCancelAfterEnd() {\n        return this.state.value > 1000000;\n    };\n\n    onKeyDown(event) {\n        if (this.isLeftOrRight(event) || this.deleteOrBackspace(event)) {\n            event.stopPropagation();\n            return;\n        }\n\n        if (!this.isKeyPressedNumeric(event)) {\n            if (event.preventDefault) event.preventDefault();\n        }\n    }\n\n    isLeftOrRight(event) {\n        return [37, 39].indexOf(event.keyCode) > -1;\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    getCharCodeFromEvent(event) {\n        event = event || window.event;\n        return (typeof event.which === \"undefined\") ? event.keyCode : event.which;\n    }\n\n    isCharNumeric(charStr) {\n        return !!/\\d/.test(charStr);\n    }\n\n    isKeyPressedNumeric(event) {\n        const charCode = this.getCharCodeFromEvent(event);\n        const charStr = event.key ? event.key : String.fromCharCode(charCode);\n        return this.isCharNumeric(charStr);\n    }\n\n    render() {\n        return (\n            <input ref=\"input\"\n                value={this.state.value}\n                onChange={this.handleChange}\n                style={{ width: \"100%\" }}\n            />\n        );\n    }\n\n    deleteOrBackspace(event) {\n        return [KEY_DELETE, KEY_BACKSPACE].indexOf(event.keyCode) > -1;\n    }\n}","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './selectionEditor.scss';\nimport { Input } from 'reactstrap';\n\nexport default class SelectionEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.value\n        }\n    }\n\n  \n    componentDidMount() {\n        this.focus();\n    }\n\n    componentDidUpdate() {\n        this.focus();\n    }\n\n    focus() {\n        window.setTimeout(() => {\n            let container = ReactDOM.findDOMNode(this.refs.container);\n            if (container) {\n                container.focus();\n            }\n        })\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    isPopup() {\n        return true;\n    }\n\n    onSelect(item) {\n        this.setState({\n            value: item\n        },\n            () => this.props.api.stopEditing()\n        );\n    }\n    onMultiSelect(event) {\n        let values = [];\n        for (let i = 0; i < event.target.options.length; i++) {\n\n            if (event.target.options[i].selected) {\n                values.push(event.target.options[i].value);\n            }\n        }\n        this.setState({\n            value: values\n        });\n    }\n\n    render() {\n        let mood = {\n            maxHeight: '20rem',\n            overflow: 'scroll',\n            width: '10rem'\n        };\n\n        let unselected = {\n            paddingLeft: 10,\n            paddingRight: 10,\n            border: \"1px solid transparent\",\n            padding: 4\n        };\n\n        let selected = {\n            paddingLeft: 10,\n            paddingRight: 10,\n            border: \"1px solid lightgreen\",\n            padding: 4\n        };\n\n        let happyStyle = this.state.happy ? selected : unselected;\n        let sadStyle = !this.state.happy ? selected : unselected;\n        return (\n\n            this.props.multiple ?\n                <Input type='select' multiple onKeyDown={(e) => {\n                    if (e.target.value === 'Enter') {\n                        this.setState(() => this.props.api.stopEditing())\n                    }\n                }} onChange={(e) => this.onMultiSelect(e)}>\n                    {\n                        this.props.values.map(item => <option value={item}>{item}</option>)\n                    }\n                </Input> :\n                <Input type='select' onChange={(e) => this.onSelect(e.target.value)}>\n                    {\n                        this.props.values.map(item => <option value={item}>{item}</option>)\n                    }\n                </Input>\n\n\n\n            // </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './selectionEditor.scss';\n\nexport default class SelectionEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n    componentDidMount() {\n        this.focus();\n    }\n\n    componentDidUpdate() {\n        this.focus();\n    }\n\n    focus() {\n        window.setTimeout(() => {\n            let container = ReactDOM.findDOMNode(this.refs.container);\n            if (container) {\n                container.focus();\n            }\n        })\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    isPopup() {\n        return true;\n    }\n\n    onSelect(item) {\n        this.setState({\n            value: item\n        },\n            () => this.props.api.stopEditing()\n        );\n    }\n\n    render() {\n        let mood = {\n            maxHeight: '20rem',\n            overflow: 'scroll',\n            width: '10rem'\n        };\n\n        return (\n            <div ref=\"container\">\n                <input value={this.state.value} type='date' pattern=\"\\d{2}-\\d{2}-\\d{2}\" onChange={(e) => this.setState({ value: e.target.value })} />\n            </div>\n        );\n    }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread({}, childProps.style, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","/*!\n * @license\n * chartjs-plugin-datalabels\n * http://chartjs.org/\n * Version: 0.5.0\n *\n * Copyright 2018 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-plugin-datalabels/blob/master/LICENSE.md\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('chart.js')) : typeof define === 'function' && define.amd ? define(['chart.js'], factory) : global.ChartDataLabels = factory(global.Chart);\n})(this, function (Chart) {\n  'use strict';\n\n  Chart = Chart && Chart.hasOwnProperty('default') ? Chart['default'] : Chart;\n  var helpers = Chart.helpers;\n\n  var devicePixelRatio = function () {\n    if (typeof window !== 'undefined') {\n      if (window.devicePixelRatio) {\n        return window.devicePixelRatio;\n      } // devicePixelRatio is undefined on IE10\n      // https://stackoverflow.com/a/20204180/8837887\n      // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n\n\n      var screen = window.screen;\n\n      if (screen) {\n        return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n      }\n    }\n\n    return 1;\n  }();\n\n  var utils = {\n    // @todo move this in Chart.helpers.toTextLines\n    toTextLines: function toTextLines(inputs) {\n      var lines = [];\n      var input;\n      inputs = [].concat(inputs);\n\n      while (inputs.length) {\n        input = inputs.pop();\n\n        if (typeof input === 'string') {\n          lines.unshift.apply(lines, input.split('\\n'));\n        } else if (Array.isArray(input)) {\n          inputs.push.apply(inputs, input);\n        } else if (!helpers.isNullOrUndef(inputs)) {\n          lines.unshift('' + input);\n        }\n      }\n\n      return lines;\n    },\n    // @todo move this method in Chart.helpers.canvas.toFont (deprecates helpers.fontString)\n    // @see https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    toFontString: function toFontString(font) {\n      if (!font || helpers.isNullOrUndef(font.size) || helpers.isNullOrUndef(font.family)) {\n        return null;\n      }\n\n      return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n    },\n    // @todo move this in Chart.helpers.canvas.textSize\n    // @todo cache calls of measureText if font doesn't change?!\n    textSize: function textSize(ctx, lines, font) {\n      var items = [].concat(lines);\n      var ilen = items.length;\n      var prev = ctx.font;\n      var width = 0;\n      var i;\n      ctx.font = font.string;\n\n      for (i = 0; i < ilen; ++i) {\n        width = Math.max(ctx.measureText(items[i]).width, width);\n      }\n\n      ctx.font = prev;\n      return {\n        height: ilen * font.lineHeight,\n        width: width\n      };\n    },\n    // @todo move this method in Chart.helpers.options.toFont\n    parseFont: function parseFont(value) {\n      var global = Chart.defaults.global;\n      var size = helpers.valueOrDefault(value.size, global.defaultFontSize);\n      var font = {\n        family: helpers.valueOrDefault(value.family, global.defaultFontFamily),\n        lineHeight: helpers.options.toLineHeight(value.lineHeight, size),\n        size: size,\n        style: helpers.valueOrDefault(value.style, global.defaultFontStyle),\n        weight: helpers.valueOrDefault(value.weight, null),\n        string: ''\n      };\n      font.string = utils.toFontString(font);\n      return font;\n    },\n\n    /**\n     * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n     * @todo move this method in Chart.helpers.bound\n     * https://doc.qt.io/qt-5/qtglobal.html#qBound\n     */\n    bound: function bound(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    /**\n     * Returns an array of pair [value, state] where state is:\n     * * -1: value is only in a0 (removed)\n     * *  1: value is only in a1 (added)\n     */\n    arrayDiff: function arrayDiff(a0, a1) {\n      var prev = a0.slice();\n      var updates = [];\n      var i, j, ilen, v;\n\n      for (i = 0, ilen = a1.length; i < ilen; ++i) {\n        v = a1[i];\n        j = prev.indexOf(v);\n\n        if (j === -1) {\n          updates.push([v, 1]);\n        } else {\n          prev.splice(j, 1);\n        }\n      }\n\n      for (i = 0, ilen = prev.length; i < ilen; ++i) {\n        updates.push([prev[i], -1]);\n      }\n\n      return updates;\n    },\n\n    /**\n     * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n     */\n    rasterize: function rasterize(v) {\n      return Math.round(v * devicePixelRatio) / devicePixelRatio;\n    }\n  };\n\n  function orient(point, origin) {\n    var x0 = origin.x;\n    var y0 = origin.y;\n\n    if (x0 === null) {\n      return {\n        x: 0,\n        y: -1\n      };\n    }\n\n    if (y0 === null) {\n      return {\n        x: 1,\n        y: 0\n      };\n    }\n\n    var dx = point.x - x0;\n    var dy = point.y - y0;\n    var ln = Math.sqrt(dx * dx + dy * dy);\n    return {\n      x: ln ? dx / ln : 0,\n      y: ln ? dy / ln : -1\n    };\n  }\n\n  function aligned(x, y, vx, vy, align) {\n    switch (align) {\n      case 'center':\n        vx = vy = 0;\n        break;\n\n      case 'bottom':\n        vx = 0;\n        vy = 1;\n        break;\n\n      case 'right':\n        vx = 1;\n        vy = 0;\n        break;\n\n      case 'left':\n        vx = -1;\n        vy = 0;\n        break;\n\n      case 'top':\n        vx = 0;\n        vy = -1;\n        break;\n\n      case 'start':\n        vx = -vx;\n        vy = -vy;\n        break;\n\n      case 'end':\n        // keep natural orientation\n        break;\n\n      default:\n        // clockwise rotation (in degree)\n        align *= Math.PI / 180;\n        vx = Math.cos(align);\n        vy = Math.sin(align);\n        break;\n    }\n\n    return {\n      x: x,\n      y: y,\n      vx: vx,\n      vy: vy\n    };\n  } // Line clipping (Cohen–Sutherland algorithm)\n  // https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\n\n  var R_INSIDE = 0;\n  var R_LEFT = 1;\n  var R_RIGHT = 2;\n  var R_BOTTOM = 4;\n  var R_TOP = 8;\n\n  function region(x, y, rect) {\n    var res = R_INSIDE;\n\n    if (x < rect.left) {\n      res |= R_LEFT;\n    } else if (x > rect.right) {\n      res |= R_RIGHT;\n    }\n\n    if (y < rect.top) {\n      res |= R_TOP;\n    } else if (y > rect.bottom) {\n      res |= R_BOTTOM;\n    }\n\n    return res;\n  }\n\n  function clipped(segment, area) {\n    var x0 = segment.x0;\n    var y0 = segment.y0;\n    var x1 = segment.x1;\n    var y1 = segment.y1;\n    var r0 = region(x0, y0, area);\n    var r1 = region(x1, y1, area);\n    var r, x, y; // eslint-disable-next-line no-constant-condition\n\n    while (true) {\n      if (!(r0 | r1) || r0 & r1) {\n        // both points inside or on the same side: no clipping\n        break;\n      } // at least one point is outside\n\n\n      r = r0 || r1;\n\n      if (r & R_TOP) {\n        x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n        y = area.top;\n      } else if (r & R_BOTTOM) {\n        x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n        y = area.bottom;\n      } else if (r & R_RIGHT) {\n        y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n        x = area.right;\n      } else if (r & R_LEFT) {\n        y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n        x = area.left;\n      }\n\n      if (r === r0) {\n        x0 = x;\n        y0 = y;\n        r0 = region(x0, y0, area);\n      } else {\n        x1 = x;\n        y1 = y;\n        r1 = region(x1, y1, area);\n      }\n    }\n\n    return {\n      x0: x0,\n      x1: x1,\n      y0: y0,\n      y1: y1\n    };\n  }\n\n  function compute(range, config) {\n    var anchor = config.anchor;\n    var segment = range;\n    var x, y;\n\n    if (config.clamp) {\n      segment = clipped(segment, config.area);\n    }\n\n    if (anchor === 'start') {\n      x = segment.x0;\n      y = segment.y0;\n    } else if (anchor === 'end') {\n      x = segment.x1;\n      y = segment.y1;\n    } else {\n      x = (segment.x0 + segment.x1) / 2;\n      y = (segment.y0 + segment.y1) / 2;\n    }\n\n    return aligned(x, y, range.vx, range.vy, config.align);\n  }\n\n  var positioners = {\n    arc: function arc(vm, config) {\n      var angle = (vm.startAngle + vm.endAngle) / 2;\n      var vx = Math.cos(angle);\n      var vy = Math.sin(angle);\n      var r0 = vm.innerRadius;\n      var r1 = vm.outerRadius;\n      return compute({\n        x0: vm.x + vx * r0,\n        y0: vm.y + vy * r0,\n        x1: vm.x + vx * r1,\n        y1: vm.y + vy * r1,\n        vx: vx,\n        vy: vy\n      }, config);\n    },\n    point: function point(vm, config) {\n      var v = orient(vm, config.origin);\n      var rx = v.x * vm.radius;\n      var ry = v.y * vm.radius;\n      return compute({\n        x0: vm.x - rx,\n        y0: vm.y - ry,\n        x1: vm.x + rx,\n        y1: vm.y + ry,\n        vx: v.x,\n        vy: v.y\n      }, config);\n    },\n    rect: function rect(vm, config) {\n      var v = orient(vm, config.origin);\n      var x = vm.x;\n      var y = vm.y;\n      var sx = 0;\n      var sy = 0;\n\n      if (vm.horizontal) {\n        x = Math.min(vm.x, vm.base);\n        sx = Math.abs(vm.base - vm.x);\n      } else {\n        y = Math.min(vm.y, vm.base);\n        sy = Math.abs(vm.base - vm.y);\n      }\n\n      return compute({\n        x0: x,\n        y0: y + sy,\n        x1: x + sx,\n        y1: y,\n        vx: v.x,\n        vy: v.y\n      }, config);\n    },\n    fallback: function fallback(vm, config) {\n      var v = orient(vm, config.origin);\n      return compute({\n        x0: vm.x,\n        y0: vm.y,\n        x1: vm.x,\n        y1: vm.y,\n        vx: v.x,\n        vy: v.y\n      }, config);\n    }\n  };\n  var helpers$1 = Chart.helpers;\n  var rasterize = utils.rasterize;\n\n  function boundingRects(model) {\n    var borderWidth = model.borderWidth || 0;\n    var padding = model.padding;\n    var th = model.size.height;\n    var tw = model.size.width;\n    var tx = -tw / 2;\n    var ty = -th / 2;\n    return {\n      frame: {\n        x: tx - padding.left - borderWidth,\n        y: ty - padding.top - borderWidth,\n        w: tw + padding.width + borderWidth * 2,\n        h: th + padding.height + borderWidth * 2\n      },\n      text: {\n        x: tx,\n        y: ty,\n        w: tw,\n        h: th\n      }\n    };\n  }\n\n  function getScaleOrigin(el) {\n    var horizontal = el._model.horizontal;\n    var scale = el._scale || horizontal && el._xScale || el._yScale;\n\n    if (!scale) {\n      return null;\n    }\n\n    if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n      return {\n        x: scale.xCenter,\n        y: scale.yCenter\n      };\n    }\n\n    var pixel = scale.getBasePixel();\n    return horizontal ? {\n      x: pixel,\n      y: null\n    } : {\n      x: null,\n      y: pixel\n    };\n  }\n\n  function getPositioner(el) {\n    if (el instanceof Chart.elements.Arc) {\n      return positioners.arc;\n    }\n\n    if (el instanceof Chart.elements.Point) {\n      return positioners.point;\n    }\n\n    if (el instanceof Chart.elements.Rectangle) {\n      return positioners.rect;\n    }\n\n    return positioners.fallback;\n  }\n\n  function drawFrame(ctx, rect, model) {\n    var bgColor = model.backgroundColor;\n    var borderColor = model.borderColor;\n    var borderWidth = model.borderWidth;\n\n    if (!bgColor && (!borderColor || !borderWidth)) {\n      return;\n    }\n\n    ctx.beginPath();\n    helpers$1.canvas.roundedRect(ctx, rasterize(rect.x) + borderWidth / 2, rasterize(rect.y) + borderWidth / 2, rasterize(rect.w) - borderWidth, rasterize(rect.h) - borderWidth, model.borderRadius);\n    ctx.closePath();\n\n    if (bgColor) {\n      ctx.fillStyle = bgColor;\n      ctx.fill();\n    }\n\n    if (borderColor && borderWidth) {\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = 'miter';\n      ctx.stroke();\n    }\n  }\n\n  function textGeometry(rect, align, font) {\n    var h = font.lineHeight;\n    var w = rect.w;\n    var x = rect.x;\n    var y = rect.y + h / 2;\n\n    if (align === 'center') {\n      x += w / 2;\n    } else if (align === 'end' || align === 'right') {\n      x += w;\n    }\n\n    return {\n      h: h,\n      w: w,\n      x: x,\n      y: y\n    };\n  }\n\n  function drawTextLine(ctx, text, cfg) {\n    var shadow = ctx.shadowBlur;\n    var stroked = cfg.stroked;\n    var x = rasterize(cfg.x);\n    var y = rasterize(cfg.y);\n    var w = rasterize(cfg.w);\n\n    if (stroked) {\n      ctx.strokeText(text, x, y, w);\n    }\n\n    if (cfg.filled) {\n      if (shadow && stroked) {\n        // Prevent drawing shadow on both the text stroke and fill, so\n        // if the text is stroked, remove the shadow for the text fill.\n        ctx.shadowBlur = 0;\n      }\n\n      ctx.fillText(text, x, y, w);\n\n      if (shadow && stroked) {\n        ctx.shadowBlur = shadow;\n      }\n    }\n  }\n\n  function drawText(ctx, lines, rect, model) {\n    var align = model.textAlign;\n    var color = model.color;\n    var filled = !!color;\n    var font = model.font;\n    var ilen = lines.length;\n    var strokeColor = model.textStrokeColor;\n    var strokeWidth = model.textStrokeWidth;\n    var stroked = strokeColor && strokeWidth;\n    var i;\n\n    if (!ilen || !filled && !stroked) {\n      return;\n    } // Adjust coordinates based on text alignment and line height\n\n\n    rect = textGeometry(rect, align, font);\n    ctx.font = font.string;\n    ctx.textAlign = align;\n    ctx.textBaseline = 'middle';\n    ctx.shadowBlur = model.textShadowBlur;\n    ctx.shadowColor = model.textShadowColor;\n\n    if (filled) {\n      ctx.fillStyle = color;\n    }\n\n    if (stroked) {\n      ctx.lineJoin = 'round';\n      ctx.lineWidth = strokeWidth;\n      ctx.strokeStyle = strokeColor;\n    }\n\n    for (i = 0, ilen = lines.length; i < ilen; ++i) {\n      drawTextLine(ctx, lines[i], {\n        stroked: stroked,\n        filled: filled,\n        w: rect.w,\n        x: rect.x,\n        y: rect.y + rect.h * i\n      });\n    }\n  }\n\n  var Label = function Label(config, ctx, el, index) {\n    var me = this;\n    me._config = config;\n    me._index = index;\n    me._model = null;\n    me._rects = null;\n    me._ctx = ctx;\n    me._el = el;\n  };\n\n  helpers$1.extend(Label.prototype, {\n    /**\n     * @private\n     */\n    _modelize: function _modelize(display, lines, config, context) {\n      var me = this;\n      var index = me._index;\n      var resolve = helpers$1.options.resolve;\n      var font = utils.parseFont(resolve([config.font, {}], context, index));\n      var color = resolve([config.color, Chart.defaults.global.defaultFontColor], context, index);\n      return {\n        align: resolve([config.align, 'center'], context, index),\n        anchor: resolve([config.anchor, 'center'], context, index),\n        area: context.chart.chartArea,\n        backgroundColor: resolve([config.backgroundColor, null], context, index),\n        borderColor: resolve([config.borderColor, null], context, index),\n        borderRadius: resolve([config.borderRadius, 0], context, index),\n        borderWidth: resolve([config.borderWidth, 0], context, index),\n        clamp: resolve([config.clamp, false], context, index),\n        clip: resolve([config.clip, false], context, index),\n        color: color,\n        display: display,\n        font: font,\n        lines: lines,\n        offset: resolve([config.offset, 0], context, index),\n        opacity: resolve([config.opacity, 1], context, index),\n        origin: getScaleOrigin(me._el),\n        padding: helpers$1.options.toPadding(resolve([config.padding, 0], context, index)),\n        positioner: getPositioner(me._el),\n        rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n        size: utils.textSize(me._ctx, lines, font),\n        textAlign: resolve([config.textAlign, 'start'], context, index),\n        textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n        textShadowColor: resolve([config.textShadowColor, color], context, index),\n        textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n        textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n      };\n    },\n    update: function update(context) {\n      var me = this;\n      var model = null;\n      var rects = null;\n      var index = me._index;\n      var config = me._config;\n      var value, label, lines; // We first resolve the display option (separately) to avoid computing\n      // other options in case the label is hidden (i.e. display: false).\n\n      var display = helpers$1.options.resolve([config.display, true], context, index);\n\n      if (display) {\n        value = context.dataset.data[index];\n        label = helpers$1.valueOrDefault(helpers$1.callback(config.formatter, [value, context]), value);\n        lines = helpers$1.isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n        if (lines.length) {\n          model = me._modelize(display, lines, config, context);\n          rects = boundingRects(model);\n        }\n      }\n\n      me._model = model;\n      me._rects = rects;\n    },\n    geometry: function geometry() {\n      return this._rects ? this._rects.frame : {};\n    },\n    rotation: function rotation() {\n      return this._model ? this._model.rotation : 0;\n    },\n    visible: function visible() {\n      return this._model && this._model.opacity;\n    },\n    model: function model() {\n      return this._model;\n    },\n    draw: function draw(chart, center) {\n      var me = this;\n      var ctx = chart.ctx;\n      var model = me._model;\n      var rects = me._rects;\n      var area;\n\n      if (!this.visible()) {\n        return;\n      }\n\n      ctx.save();\n\n      if (model.clip) {\n        area = model.area;\n        ctx.beginPath();\n        ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n        ctx.clip();\n      }\n\n      ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n      ctx.translate(rasterize(center.x), rasterize(center.y));\n      ctx.rotate(model.rotation);\n      drawFrame(ctx, rects.frame, model);\n      drawText(ctx, model.lines, rects.text, model);\n      ctx.restore();\n    }\n  });\n  var helpers$2 = Chart.helpers;\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n  function rotated(point, center, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var cx = center.x;\n    var cy = center.y;\n    return {\n      x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n      y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n    };\n  }\n\n  function projected(points, axis) {\n    var min = MAX_INTEGER;\n    var max = MIN_INTEGER;\n    var origin = axis.origin;\n    var i, pt, vx, vy, dp;\n\n    for (i = 0; i < points.length; ++i) {\n      pt = points[i];\n      vx = pt.x - origin.x;\n      vy = pt.y - origin.y;\n      dp = axis.vx * vx + axis.vy * vy;\n      min = Math.min(min, dp);\n      max = Math.max(max, dp);\n    }\n\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  function toAxis(p0, p1) {\n    var vx = p1.x - p0.x;\n    var vy = p1.y - p0.y;\n    var ln = Math.sqrt(vx * vx + vy * vy);\n    return {\n      vx: (p1.x - p0.x) / ln,\n      vy: (p1.y - p0.y) / ln,\n      origin: p0,\n      ln: ln\n    };\n  }\n\n  var HitBox = function HitBox() {\n    this._rotation = 0;\n    this._rect = {\n      x: 0,\n      y: 0,\n      w: 0,\n      h: 0\n    };\n  };\n\n  helpers$2.extend(HitBox.prototype, {\n    center: function center() {\n      var r = this._rect;\n      return {\n        x: r.x + r.w / 2,\n        y: r.y + r.h / 2\n      };\n    },\n    update: function update(center, rect, rotation) {\n      this._rotation = rotation;\n      this._rect = {\n        x: rect.x + center.x,\n        y: rect.y + center.y,\n        w: rect.w,\n        h: rect.h\n      };\n    },\n    contains: function contains(point) {\n      var me = this;\n      var margin = 1;\n      var rect = me._rect;\n      point = rotated(point, me.center(), -me._rotation);\n      return !(point.x < rect.x - margin || point.y < rect.y - margin || point.x > rect.x + rect.w + margin * 2 || point.y > rect.y + rect.h + margin * 2);\n    },\n    // Separating Axis Theorem\n    // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n    intersects: function intersects(other) {\n      var r0 = this._points();\n\n      var r1 = other._points();\n\n      var axes = [toAxis(r0[0], r0[1]), toAxis(r0[0], r0[3])];\n      var i, pr0, pr1;\n\n      if (this._rotation !== other._rotation) {\n        // Only separate with r1 axis if the rotation is different,\n        // else it's enough to separate r0 and r1 with r0 axis only!\n        axes.push(toAxis(r1[0], r1[1]), toAxis(r1[0], r1[3]));\n      }\n\n      for (i = 0; i < axes.length; ++i) {\n        pr0 = projected(r0, axes[i]);\n        pr1 = projected(r1, axes[i]);\n\n        if (pr0.max < pr1.min || pr1.max < pr0.min) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _points: function _points() {\n      var me = this;\n      var rect = me._rect;\n      var angle = me._rotation;\n      var center = me.center();\n      return [rotated({\n        x: rect.x,\n        y: rect.y\n      }, center, angle), rotated({\n        x: rect.x + rect.w,\n        y: rect.y\n      }, center, angle), rotated({\n        x: rect.x + rect.w,\n        y: rect.y + rect.h\n      }, center, angle), rotated({\n        x: rect.x,\n        y: rect.y + rect.h\n      }, center, angle)];\n    }\n  });\n\n  function coordinates(view, model, geometry) {\n    var point = model.positioner(view, model);\n    var vx = point.vx;\n    var vy = point.vy;\n\n    if (!vx && !vy) {\n      // if aligned center, we don't want to offset the center point\n      return {\n        x: point.x,\n        y: point.y\n      };\n    }\n\n    var w = geometry.w;\n    var h = geometry.h; // take in account the label rotation\n\n    var rotation = model.rotation;\n    var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n    var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation)); // scale the unit vector (vx, vy) to get at least dx or dy equal to\n    // w or h respectively (else we would calculate the distance to the\n    // ellipse inscribed in the bounding rect)\n\n    var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n    dx *= vx * vs;\n    dy *= vy * vs; // finally, include the explicit offset\n\n    dx += model.offset * vx;\n    dy += model.offset * vy;\n    return {\n      x: point.x + dx,\n      y: point.y + dy\n    };\n  }\n\n  function collide(labels, collider) {\n    var i, j, s0, s1; // IMPORTANT Iterate in the reverse order since items at the end of the\n    // list have an higher weight/priority and thus should be less impacted\n    // by the overlapping strategy.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      s0 = labels[i].$layout;\n\n      for (j = i - 1; j >= 0 && s0._visible; --j) {\n        s1 = labels[j].$layout;\n\n        if (s1._visible && s0._box.intersects(s1._box)) {\n          collider(s0, s1);\n        }\n      }\n    }\n\n    return labels;\n  }\n\n  function compute$1(labels) {\n    var i, ilen, label, state, geometry, center; // Initialize labels for overlap detection\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el._model, label.model(), geometry);\n\n        state._box.update(center, geometry, label.rotation());\n      }\n    } // Auto hide overlapping labels\n\n\n    return collide(labels, function (s0, s1) {\n      var h0 = s0._hidable;\n      var h1 = s1._hidable;\n\n      if (h0 && h1 || h1) {\n        s1._visible = false;\n      } else if (h0) {\n        s0._visible = false;\n      }\n    });\n  }\n\n  var layout = {\n    prepare: function prepare(datasets) {\n      var labels = [];\n      var i, j, ilen, jlen, label;\n\n      for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n        for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n          label = datasets[i][j];\n          labels.push(label);\n          label.$layout = {\n            _box: new HitBox(),\n            _hidable: false,\n            _visible: true,\n            _set: i,\n            _idx: j\n          };\n        }\n      } // TODO New `z` option: labels with a higher z-index are drawn\n      // of top of the ones with a lower index. Lowest z-index labels\n      // are also discarded first when hiding overlapping labels.\n\n\n      labels.sort(function (a, b) {\n        var sa = a.$layout;\n        var sb = b.$layout;\n        return sa._idx === sb._idx ? sa._set - sb._set : sb._idx - sa._idx;\n      });\n      this.update(labels);\n      return labels;\n    },\n    update: function update(labels) {\n      var dirty = false;\n      var i, ilen, label, model, state;\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        model = label.model();\n        state = label.$layout;\n        state._hidable = model && model.display === 'auto';\n        state._visible = label.visible();\n        dirty |= state._hidable;\n      }\n\n      if (dirty) {\n        compute$1(labels);\n      }\n    },\n    lookup: function lookup(labels, point) {\n      var i, state; // IMPORTANT Iterate in the reverse order since items at the end of\n      // the list have an higher z-index, thus should be picked first.\n\n      for (i = labels.length - 1; i >= 0; --i) {\n        state = labels[i].$layout;\n\n        if (state && state._visible && state._box.contains(point)) {\n          return {\n            dataset: state._set,\n            label: labels[i]\n          };\n        }\n      }\n\n      return null;\n    },\n    draw: function draw(chart, labels) {\n      var i, ilen, label, state, geometry, center;\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        state = label.$layout;\n\n        if (state._visible) {\n          geometry = label.geometry();\n          center = coordinates(label._el._view, label.model(), geometry);\n\n          state._box.update(center, geometry, label.rotation());\n\n          label.draw(chart, center);\n        }\n      }\n    }\n  };\n  /**\n   * @module Options\n   */\n\n  var helpers$3 = Chart.helpers;\n  var defaults = {\n    /**\n     * The label box alignment relative to `anchor` that can be expressed either by a number\n     * representing the clockwise angle (in degree) or by one of the following string presets:\n     * - 'start': before the anchor point, following the same direction\n     * - 'end': after the anchor point, following the same direction\n     * - 'center': centered on the anchor point\n     * - 'right': 0°\n     * - 'bottom': 90°\n     * - 'left': 180°\n     * - 'top': 270°\n     * @member {String|Number|Array|Function}\n     * @default 'center'\n     */\n    align: 'center',\n\n    /**\n     * The label box alignment relative to the element ('start'|'center'|'end')\n     * @member {String|Array|Function}\n     * @default 'center'\n     */\n    anchor: 'center',\n\n    /**\n     * The color used to draw the background of the surrounding frame.\n     * @member {String|Array|Function|null}\n     * @default null (no background)\n     */\n    backgroundColor: null,\n\n    /**\n     * The color used to draw the border of the surrounding frame.\n     * @member {String|Array|Function|null}\n     * @default null (no border)\n     */\n    borderColor: null,\n\n    /**\n     * The border radius used to add rounded corners to the surrounding frame.\n     * @member {Number|Array|Function}\n     * @default 0 (not rounded)\n     */\n    borderRadius: 0,\n\n    /**\n     * The border width of the surrounding frame.\n     * @member {Number|Array|Function}\n     * @default 0 (no border)\n     */\n    borderWidth: 0,\n\n    /**\n     * When `true`, the anchor position is calculated based on the visible\n     * geometry of the associated element (i.e. part inside the chart area).\n     * @see https://github.com/chartjs/chartjs-plugin-datalabels/issues/98\n     * @member {Boolean|Array|Function}\n     * @default false\n     */\n    clamp: false,\n\n    /**\n     * Clip the label drawing to the chart area.\n     * @member {Boolean|Array|Function}\n     * @default false (no clipping)\n     */\n    clip: false,\n\n    /**\n     * The color used to draw the label text.\n     * @member {String|Array|Function}\n     * @default undefined (use Chart.defaults.global.defaultFontColor)\n     */\n    color: undefined,\n\n    /**\n     * When `false`, the label is hidden and associated options are not\n     * calculated, else if `true`, the label is drawn. If `auto`, the\n     * label is automatically hidden if it appears under another label.\n     * @member {Boolean|String|Array|Function}\n     * @default true\n     */\n    display: true,\n\n    /**\n     * The font options used to draw the label text.\n     * @member {Object|Array|Function}\n     * @prop {String} font.family - defaults to Chart.defaults.global.defaultFontFamily\n     * @prop {Number} font.lineHeight - defaults to 1.2\n     * @prop {Number} font.size - defaults to Chart.defaults.global.defaultFontSize\n     * @prop {String} font.style - defaults to Chart.defaults.global.defaultFontStyle\n     * @prop {Number} font.weight - defaults to 'normal'\n     * @default Chart.defaults.global.defaultFont.*\n     */\n    font: {\n      family: undefined,\n      lineHeight: 1.2,\n      size: undefined,\n      style: undefined,\n      weight: null\n    },\n\n    /**\n     * Allows to customize the label text by transforming input data.\n     * @member {Function|null}\n     * @prop {*} value - The data value\n     * @prop {Object} context - The function unique argument:\n     * @prop {Chart} context.chart - The current chart\n     * @prop {Number} context.dataIndex - Index of the current data\n     * @prop {Object} context.dataset - The current dataset\n     * @prop {Number} context.datasetIndex - Index of the current dataset\n     * @default data[index]\n     */\n    formatter: function formatter(value) {\n      if (helpers$3.isNullOrUndef(value)) {\n        return null;\n      }\n\n      var label = value;\n      var keys, klen, k;\n\n      if (helpers$3.isObject(value)) {\n        if (!helpers$3.isNullOrUndef(value.label)) {\n          label = value.label;\n        } else if (!helpers$3.isNullOrUndef(value.r)) {\n          label = value.r;\n        } else {\n          label = '';\n          keys = Object.keys(value);\n\n          for (k = 0, klen = keys.length; k < klen; ++k) {\n            label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n          }\n        }\n      }\n\n      return '' + label;\n    },\n\n    /**\n     * Event listeners, where the property is the type of the event to listen and the value\n     * a callback with a unique `context` argument containing the same information as for\n     * scriptable options. If a callback explicitly returns `true`, the label is updated\n     * with the current context and the chart re-rendered. This allows to implement visual\n     * interactions with labels such as highlight, selection, etc.\n     *\n     * Event currently supported are:\n     * - 'click': a mouse click is detected within a label\n     * - 'enter': the mouse enters a label\n     * - 'leave': the mouse leaves a label\n     *\n     * @member {Object}\n     * @default {}\n     */\n    listeners: {},\n\n    /**\n     * The distance (in pixels) to pull the label away from the anchor point, the direction\n     * being determined by the `align` value (only applicable if `align` is `start` or `end`).\n     * @member {Number|Array|Function}\n     * @default 4\n     */\n    offset: 4,\n\n    /**\n     * The label global opacity, including the text, background, borders, etc., specified as\n     * a number between 0.0 (fully transparent) and 1.0 (fully opaque).\n     * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha\n     * @member {Number|Array|Function}\n     * @default 1\n     */\n    opacity: 1,\n\n    /**\n     * The padding (in pixels) to apply between the text and the surrounding frame.\n     * @member {Number|Object|Array|Function}\n     * @prop {Number} padding.top - Space above the text.\n     * @prop {Number} padding.right - Space on the right of the text.\n     * @prop {Number} padding.bottom - Space below the text.\n     * @prop {Number} padding.left - Space on the left of the text.\n     * @default 4 (all values)\n     */\n    padding: {\n      top: 4,\n      right: 4,\n      bottom: 4,\n      left: 4\n    },\n\n    /**\n     * Clockwise rotation of the label relative to its center.\n     * @member {Number|Array|Function}\n     * @default 0\n     */\n    rotation: 0,\n\n    /**\n     * Text alignment for multi-lines labels ('left'|'right'|'start'|'center'|'end').\n     * @member {String|Array|Function}\n     * @default 'start'\n     */\n    textAlign: 'start',\n\n    /**\n     * The stroke color used to draw the label text. If this options is\n     * not set (default), the value of the `color` option will be used.\n     * @member {String|Array|Function|null}\n     * @default color\n     */\n    textStrokeColor: undefined,\n\n    /**\n     * The width of the stroke for the label text.\n     * @member {Number|Array|Function}\n     * @default 0 (no stroke)\n     */\n    textStrokeWidth: 0,\n\n    /**\n     * The amount of blur applied to shadow under the label text.\n     * @member {Number|Array|Function}\n     * @default 0 (no shadow)\n     */\n    textShadowBlur: 0,\n\n    /**\n     * The color of the shadow under the label text.\n     * @member {String|Array|Function|null}\n     * @default `color`\n     */\n    textShadowColor: undefined\n  };\n  /**\n   * @see https://github.com/chartjs/Chart.js/issues/4176\n   */\n\n  var helpers$4 = Chart.helpers;\n  var EXPANDO_KEY = '$datalabels';\n  Chart.defaults.global.plugins.datalabels = defaults;\n\n  function configure(dataset, options) {\n    var override = dataset.datalabels;\n    var config = {};\n\n    if (override === false) {\n      return null;\n    }\n\n    if (override === true) {\n      override = {};\n    }\n\n    return helpers$4.merge(config, [options, override]);\n  }\n\n  function dispatchEvent(chart, listeners, target) {\n    var callback = listeners && listeners[target.dataset];\n\n    if (!callback) {\n      return;\n    }\n\n    var label = target.label;\n    var context = label.$context;\n\n    if (helpers$4.callback(callback, [context]) === true) {\n      // Users are allowed to tweak the given context by injecting values that can be\n      // used in scriptable options to display labels differently based on the current\n      // event (e.g. highlight an hovered label). That's why we update the label with\n      // the output context and schedule a new chart render by setting it dirty.\n      chart[EXPANDO_KEY]._dirty = true;\n      label.update(context);\n    }\n  }\n\n  function dispatchMoveEvents(chart, listeners, previous, target) {\n    var enter, leave;\n\n    if (!previous && !target) {\n      return;\n    }\n\n    if (!previous) {\n      enter = true;\n    } else if (!target) {\n      leave = true;\n    } else if (previous.label !== target.label) {\n      leave = enter = true;\n    }\n\n    if (leave) {\n      dispatchEvent(chart, listeners.leave, previous);\n    }\n\n    if (enter) {\n      dispatchEvent(chart, listeners.enter, target);\n    }\n  }\n\n  function handleMoveEvents(chart, event) {\n    var expando = chart[EXPANDO_KEY];\n    var listeners = expando._listeners;\n    var previous, target;\n\n    if (!listeners.enter && !listeners.leave) {\n      return;\n    }\n\n    if (event.type === 'mousemove') {\n      target = layout.lookup(expando._labels, event);\n    } else if (event.type !== 'mouseout') {\n      return;\n    }\n\n    previous = expando._hovered;\n    expando._hovered = target;\n    dispatchMoveEvents(chart, listeners, previous, target);\n  }\n\n  function handleClickEvents(chart, event) {\n    var expando = chart[EXPANDO_KEY];\n    var handlers = expando._listeners.click;\n    var target = handlers && layout.lookup(expando._labels, event);\n\n    if (target) {\n      dispatchEvent(chart, handlers, target);\n    }\n  }\n\n  Chart.defaults.global.plugins.datalabels = defaults;\n  var plugin = {\n    id: 'datalabels',\n    beforeInit: function beforeInit(chart) {\n      chart[EXPANDO_KEY] = {\n        _actives: []\n      };\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var expando = chart[EXPANDO_KEY];\n      expando._listened = false;\n      expando._listeners = {}; // {event-type: {dataset-index: function}}\n\n      expando._datasets = []; // per dataset labels: [[Label]]\n\n      expando._labels = []; // layouted labels: [Label]\n    },\n    afterDatasetUpdate: function afterDatasetUpdate(chart, args, options) {\n      var datasetIndex = args.index;\n      var expando = chart[EXPANDO_KEY];\n      var labels = expando._datasets[datasetIndex] = [];\n      var visible = chart.isDatasetVisible(datasetIndex);\n      var dataset = chart.data.datasets[datasetIndex];\n      var config = configure(dataset, options);\n      var elements = args.meta.data || [];\n      var ilen = elements.length;\n      var ctx = chart.ctx;\n      var i, el, label;\n      ctx.save();\n\n      for (i = 0; i < ilen; ++i) {\n        el = elements[i];\n\n        if (visible && el && !el.hidden && !el._model.skip) {\n          labels.push(label = new Label(config, ctx, el, i));\n          label.update(label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          });\n        } else {\n          label = null;\n        }\n\n        el[EXPANDO_KEY] = label;\n      }\n\n      ctx.restore(); // Store listeners at the chart level and per event type to optimize\n      // cases where no listeners are registered for a specific event\n\n      helpers$4.merge(expando._listeners, config.listeners || {}, {\n        merger: function merger(key, target, source) {\n          target[key] = target[key] || {};\n          target[key][args.index] = source[key];\n          expando._listened = true;\n        }\n      });\n    },\n    afterUpdate: function afterUpdate(chart, options) {\n      chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets, options);\n    },\n    // Draw labels on top of all dataset elements\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n    afterDatasetsDraw: function afterDatasetsDraw(chart) {\n      layout.draw(chart, chart[EXPANDO_KEY]._labels);\n    },\n    beforeEvent: function beforeEvent(chart, event) {\n      // If there is no listener registered for this chart, `listened` will be false,\n      // meaning we can immediately ignore the incoming event and avoid useless extra\n      // computation for users who don't implement label interactions.\n      if (chart[EXPANDO_KEY]._listened) {\n        switch (event.type) {\n          case 'mousemove':\n          case 'mouseout':\n            handleMoveEvents(chart, event);\n            break;\n\n          case 'click':\n            handleClickEvents(chart, event);\n            break;\n\n          default:\n        }\n      }\n    },\n    afterEvent: function afterEvent(chart) {\n      var expando = chart[EXPANDO_KEY];\n      var previous = expando._actives;\n      var actives = expando._actives = chart.lastActive || []; // public API?!\n\n      var updates = utils.arrayDiff(previous, actives);\n      var i, ilen, update, label;\n\n      for (i = 0, ilen = updates.length; i < ilen; ++i) {\n        update = updates[i];\n\n        if (update[1]) {\n          label = update[0][EXPANDO_KEY];\n\n          if (label) {\n            label.$context.active = update[1] === 1;\n            label.update(label.$context);\n          }\n        }\n      }\n\n      if (expando._dirty || updates.length) {\n        layout.update(expando._labels);\n\n        if (!chart.animating) {\n          chart.render();\n        }\n      }\n\n      delete expando._dirty;\n    }\n  }; // TODO Remove at version 1, we shouldn't automatically register plugins.\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/42\n\n  Chart.plugins.register(plugin);\n  return plugin;\n});","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport {\n    Col,Row, Table, Button,\n    UncontrolledPopover, PopoverBody,\n    Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, Label, Collapse\n} from 'reactstrap';\nimport './CustomerBugs.scss';\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\nimport { connect } from 'react-redux';\nimport { getCurrentRelease } from '../../reducers/release.reducer';\nimport MoodEditor from \"../TestCasesAll/moodEditor\";\nimport MoodRenderer from \"../TestCasesAll/moodRenderer\";\nimport NumericEditor from \"../TestCasesAll/numericEditor\";\nimport SelectionEditor from '../TestCasesAll/selectionEditor';\nimport DatePickerEditor from '../TestCasesAll/datePickerEditor';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Line, } from 'react-chartjs-2';\nclass ReleaseStatusGraphs extends Component {\n    isApiUnderProgress = false;\n    allTCsToShow = [];\n    allClosedDefectsToShow = [];\n    lineweek = {};\n    filedWeeklyData = {};\n    closedWeeklyData = {};\n    newOptions = {};\n    cloOptions = {};\n    xcord = [];\n    lastWeek = '';\n    lastMonth = '';\n    buList = [];\n    relNum = '';\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: AllCommunityModules,\n            frameworkComponents: {\n                moodRenderer: MoodRenderer,\n                moodEditor: MoodEditor,\n                numericEditor: NumericEditor,\n                selectionEditor: SelectionEditor,\n                datePicker: DatePickerEditor\n            },\n        }\n        this.lastWeek = this.props.selectedRelease.QAEndDate ? this.props.selectedRelease.QAEndDate.split(\"T\")[0] : null;\n        this.lastMonth = this.props.selectedRelease.QAStartDate ? this.props.selectedRelease.QAStartDate.split(\"T\")[0]: null;\n        this.buList = this.props.selectedRelease ? this.props.selectedRelease.BuList : [];\n        this.relNum = this.props.selectedRelease ? this.props.selectedRelease.fixVersion : '';\n        this.cusDateStart = this.lastMonth;\n        this.cusDateEnd = this.lastWeek;\n    }\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n      }\n    subDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() - days);\n    return result;\n    }\n    getDate(date) {\n        date.setDate(date.getDate())\n        return date.toISOString().split(\"T\")[0];\n    }\n    getDatee(date) {\n        date.setDate(date.getDate())\n        return date.toISOString();\n    }\n    calXCoordinate(currentdate) {\n        this.xcord.push(this.lastMonth)\n        for(let i = 0; this.addDays(this.xcord[i], 7).getTime() <= new Date(this.lastWeek).getTime(); i = i + 2){\n            this.xcord.push(this.getDate(this.addDays(this.xcord[i], 6)))\n            this.xcord.push(this.getDate(this.addDays(this.xcord[i], 7)))\n        }\n        if(new Date(this.lastWeek).getTime() > new Date(this.xcord[this.xcord.length - 1]).getTime()) {\n            this.xcord.push(this.lastWeek)\n        }\n        else if(new Date(this.lastWeek).getTime() == new Date(this.xcord[this.xcord.length - 1]).getTime()) {\n            if (this.xcord.length > 1){\n                let poped = this.xcord.pop()\n                this.xcord[this.xcord.length - 1] = poped\n            }\n        }\n        for(let i = 0; i < this.xcord.length; i++){\n            if ( i%2 == 0){\n                this.xcord[i] = this.xcord[i] + \"T00:00:00.000-0800\"\n            }\n            else {\n                    this.xcord[i] = this.xcord[i] + \"T23:59:59.999-0800\"\n            }\n        }\n        this.lineweek = {labels: [], datasets: []};\n        this.filedWeeklyData = {labels: [], datasets: []};\n        this.closedWeeklyData = {labels: [], datasets: []};\n        for (let i = 0; i < this.xcord.length - 1 ; i = i + 2) {\n            // let dlabel = `${new Date(this.xcord[i].split(\"T\")[0]).toLocaleDateString(undefined, { month: 'short',day: 'numeric'})}`;\n            let dlabel = ''\n            //if ( i == 0 || i == this.xcord.length - 2 ){\n            //    dlabel = `${new Date(this.xcord[i].split(\"T\")[0]).toLocaleDateString(undefined, { month: 'short',day: 'numeric'})}`+'-'+`${new Date(this.xcord[i+1].split(\"T\")[0]).toLocaleDateString(undefined, { month: 'short',day: 'numeric'})}`;\n            //}\n            //else {\n            dlabel = `${new Date(this.xcord[i].split(\"T\")[0]).toLocaleDateString(undefined, { month: 'short',day: 'numeric'})}`;\n            //}\n            this.lineweek[\"labels\"].push(dlabel)\n            this.filedWeeklyData[\"labels\"].push(dlabel)\n            this.closedWeeklyData[\"labels\"].push(dlabel)\n        }\n    }\n    cusgridOperations(enable) {\n        if (enable) {\n            if (this.state.isApiUnderProgress) {\n                this.setState({ isApiUnderProgress: false, loading: false });\n            }\n        } else {\n            if (!this.state.isApiUnderProgress) {\n                this.setState({ isApiUnderProgress: true });\n            }\n        }\n    }\n    getTcs(sdate, edate) {\n        this.cusgridOperations(false);\n        let promises1 = [];\n        this.allTCsToShow = [];\n        this.allClosedDefectsToShow = [];\n        if (this.buList.length == 0 || this.relNum == 'UNKNOWN' || sdate == '' || edate == '') {\n            alert(\"Business unit or Fix Version or QA start date or QA end date is empty for selected release.\")\n            this.cusgridOperations(true);\n            return;\n        }\n        axios.get(`/rest/NewDefectsCountByRelease`,{params: {\"sdate\": sdate,\"edate\": edate, \"bu\": this.buList, \"fixVersion\": this.relNum,}}).then(all => {\n            let MaxResult = all.data.total\n            for(let i = 0; i <= MaxResult; i=i+100){\n                promises1.push(axios.get(`/rest/NewDefectsByRelease`,{\n                    params: {\n                        \"startAt\": i,\n                        \"sdate\": sdate,\n                        \"edate\": edate,\n                        \"bu\": this.buList,\n                        \"fixVersion\": this.relNum,\n                    }\n                }).then(all => {\n                    this.allTCsToShow = [...this.allTCsToShow, ...all.data.issues];\n                }).catch(err => {\n                    //this.cusgridOperations(true);\n                }))\n            }\n            Promise.all(promises1).then(result => {\n                //this.getDefectsToShow();\n                this.getClosedDefects()\n                })\n        }).catch(err => {\n            //this.cusgridOperations(true);\n        })\n    }\n    // getClosedDefects(sdate, edate){\n    //     let promises2 = []\n    //     axios.get(`/rest/ClosedDefectsCountByRelease`,{params: {\"sdate\": sdate,\"edate\": edate, \"bu\": this.buList, \"fixVersion\": this.relNum,}}).then(all => {\n    //         let MaxResult = all.data.total\n    //         for(let i = 0; i <= MaxResult; i=i+100){\n    //             promises2.push(axios.get(`/rest/ClosedDefectsByRelease`,{\n    //                 params: {\n    //                     \"startAt\": i,\n    //                     \"sdate\": sdate,\n    //                     \"edate\": edate,\n    //                     \"bu\": this.buList,\n    //                     \"fixVersion\": this.relNum,\n    //                 }\n    //             }).then(all => {\n    //                 this.allClosedDefectsToShow = [...this.allClosedDefectsToShow, ...all.data.issues];\n    //             }).catch(err => {\n    //                 //this.cgridOperations(true);\n    //             }))\n    //         }\n    //         Promise.all(promises2).then(result => {\n    //             this.getDefectsToShow();\n    //     })\n    //     }).catch(err => {\n    //         //this.cgridOperations(true);\n    //     })\n    // }\n    getClosedDefects(){\n        let promises3 = []\n        let outerPromise = []\n        for(let j = 0, k = 0; j < this.xcord.length; j = j + 2, k++){\n            outerPromise.push(axios.get(`/rest/ClosedDefectsCountByRelease`,{params: {\"edate\": this.xcord[j].split(\"T\")[0],\"sdate\": this.xcord[j+1].split(\"T\")[0], \"bu\": this.buList, \"fixVersion\": this.relNum,}}).then(all => {\n                let MaxResult = all.data.total\n                let templist = []\n                //promises3 = []\n                for(let i = 0; i <= MaxResult; i=i+100){\n                    promises3.push(axios.get(`/rest/ClosedDefectsByRelease`,{\n                        params: {\n                            \"startAt\": i,\n                            \"edate\": this.xcord[j].split(\"T\")[0],\n                            \"sdate\": this.xcord[j+1].split(\"T\")[0],\n                            \"bu\": this.buList,\n                            \"fixVersion\": this.relNum,\n                        }\n                    }).then(all => {\n                        templist = [...templist, ...all.data.issues];\n                    }).catch(err => {\n                        //this.pgridOperations(true);\n                    }))\n                }\n                Promise.all(promises3).then(result => {\n                    this.allClosedDefectsToShow[k] = [...templist]\n                    })\n            }).catch(err => {\n                //this.pgridOperations(true);\n            }))\n        }\n        Promise.all(outerPromise).then(result => {\n            Promise.all(promises3).then(result => {\n                this.getDefectsToShow()\n            })\n            })\n    }\n    calculateWeek(date){\n        let dtime = date.getTime()\n        for(let i = 0; i < this.xcord.length - 1 ; i = i + 2) {\n            if(dtime >= new Date(this.xcord[i]).getTime() && dtime <= new Date(this.xcord[i+1]).getTime()){\n                return  i / 2;\n            }\n        }\n        console.log(\"susdate\",this.getDatee(date))\n        return null;\n    }\n    getArrayMax(array){\n        return Math.max.apply(null, array);\n     }\n    getArrayMin(array){\n        return Math.min.apply(null, array);\n     }\n    getDefectsToShow(){\n        let num = null;\n        let week = {\n            Filed: { data: [], backgroundColor: 'rgb(255, 99, 132)', },\n            Closed: { data: [], backgroundColor: 'rgb(75, 192, 192)', },\n        }\n        let filedWeekly = {\n            SEVP1: { data: [], backgroundColor: 'rgb(255, 99, 132)', },\n            \"SEVP2+\": { data: [], backgroundColor: 'rgb(75, 192, 192)', },\n            \"Blocker\": { data: [], backgroundColor: 'rgb(53, 162, 235)', },\n        }\n        let closedWeekly = {\n            SEVP1: { data: [], backgroundColor: 'rgb(255, 99, 132)', },\n            \"SEVP2+\": { data: [], backgroundColor: 'rgb(75, 192, 192)', },\n            \"Blocker\": { data: [], backgroundColor: 'rgb(53, 162, 235)', },\n        }\n        for(let i = 0 ; i < this.xcord.length / 2; i++){\n            week[\"Filed\"][\"data\"].push(0)\n            week[\"Closed\"][\"data\"].push(0)\n            filedWeekly[\"SEVP1\"][\"data\"].push(0)\n            filedWeekly[\"SEVP2+\"][\"data\"].push(0)\n            filedWeekly[\"Blocker\"][\"data\"].push(0)\n            closedWeekly[\"SEVP1\"][\"data\"].push(0)\n            closedWeekly[\"SEVP2+\"][\"data\"].push(0)\n            closedWeekly[\"Blocker\"][\"data\"].push(0)\n        }\n         for(let i = 0; i < this.allTCsToShow.length; i++){\n            num = this.calculateWeek(new Date(this.allTCsToShow[i][\"fields\"][\"created\"]))\n            week[\"Filed\"][\"data\"][num] = week[\"Filed\"][\"data\"][num] + 1\n\n            this.allTCsToShow[i][\"fields\"][\"labels\"].some(label => {\n                let loLabel = label.toLowerCase()\n                if(loLabel.includes(\"blocker\")) {\n                    filedWeekly[\"Blocker\"][\"data\"][num] = filedWeekly[\"Blocker\"][\"data\"][num] + 1\n                    return true;\n                }\n            })\n\n            if(this.allTCsToShow[i][\"fields\"][\"priority\"][\"name\"] == \"Highest\") {\n                filedWeekly[\"SEVP1\"][\"data\"][num] = filedWeekly[\"SEVP1\"][\"data\"][num] + 1\n            }\n            else if(this.allTCsToShow[i][\"fields\"][\"priority\"][\"name\"] != \"Highest\"){\n                filedWeekly[\"SEVP2+\"][\"data\"][num] = filedWeekly[\"SEVP2+\"][\"data\"][num] + 1\n            }\n\n        }\n        // for(let i = 0; i < this.allClosedDefectsToShow.length; i++){\n        //     num = this.calculateWeek(new Date(this.allClosedDefectsToShow[i][\"fields\"][\"updated\"]))\n        //     week[\"Closed\"][\"data\"][num] = week[\"Closed\"][\"data\"][num] + 1\n\n        //     this.allClosedDefectsToShow[i][\"fields\"][\"labels\"].some(label => {\n        //         let loLabel = label.toLowerCase()\n        //         if(loLabel.includes(\"blocker\")) {\n        //             closedWeekly[\"Blocker\"][\"data\"][num] = closedWeekly[\"Blocker\"][\"data\"][num] + 1\n        //             return true;\n        //         }\n        //     })\n        //     if(this.allClosedDefectsToShow[i][\"fields\"][\"priority\"][\"name\"] == \"Highest\") {\n        //         closedWeekly[\"SEVP1\"][\"data\"][num] = closedWeekly[\"SEVP1\"][\"data\"][num] + 1\n        //     }\n        //     else if(this.allClosedDefectsToShow[i][\"fields\"][\"priority\"][\"name\"] != \"Highest\"){\n        //         closedWeekly[\"SEVP2+\"][\"data\"][num] = closedWeekly[\"SEVP2+\"][\"data\"][num] + 1\n        //     }\n        // }\n        for(let i = 0; i < this.allClosedDefectsToShow.length; i++){\n            for(let j = 0; j < this.allClosedDefectsToShow[i].length; j++){\n                week[\"Closed\"][\"data\"][i] = week[\"Closed\"][\"data\"][i] + 1\n                this.allClosedDefectsToShow[i][j][\"fields\"][\"labels\"].some(label => {\n                    let loLabel = label.toLowerCase()\n                    if(loLabel.includes(\"blocker\")) {\n                        closedWeekly[\"Blocker\"][\"data\"][i] = closedWeekly[\"Blocker\"][\"data\"][i] + 1\n                        return true;\n                    }\n                })\n                if(this.allClosedDefectsToShow[i][j][\"fields\"][\"priority\"][\"name\"] == \"Highest\") {\n                    closedWeekly[\"SEVP1\"][\"data\"][i] = closedWeekly[\"SEVP1\"][\"data\"][i] + 1\n                }\n                else if(this.allClosedDefectsToShow[i][j][\"fields\"][\"priority\"][\"name\"] != \"Highest\"){\n                    closedWeekly[\"SEVP2+\"][\"data\"][i] = closedWeekly[\"SEVP2+\"][\"data\"][i] + 1\n                }\n            }\n        }\n        Object.keys(week).forEach(type => {\n                this.lineweek[\"datasets\"].push({data: week[type][\"data\"], fill: false, lineTension: 0, label: type, borderColor: week[type][\"backgroundColor\"]})\n        })\n        Object.keys(filedWeekly).forEach(type => {\n            this.filedWeeklyData[\"datasets\"].push({data: filedWeekly[type][\"data\"], fill: false, lineTension: 0, label: type, borderColor: filedWeekly[type][\"backgroundColor\"]})\n        })\n        Object.keys(closedWeekly).forEach(type => {\n            this.closedWeeklyData[\"datasets\"].push({data: closedWeekly[type][\"data\"], fill: false, lineTension: 0, label: type, borderColor: closedWeekly[type][\"backgroundColor\"]})\n        })\n        this.lineweekNew = this.lineweek\n        this.filedWeeklyLine = this.filedWeeklyData\n        this.closedWeeklyLine = this.closedWeeklyData\n        this.cusgridOperations(true);\n    }\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                    <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => {this.setState({ tcOpen: !this.state.tcOpen }, () => {if(this.state.tcOpen){this.allTCsToShow = []; this.allClosedDefectsToShow = []; this.allPendingDefectsToShow = []; this.xcord = []; this.cusDateStart = this.lastMonth; this.cusDateEnd = this.getDate(this.addDays(new Date(this.lastWeek),1)); this.calXCoordinate();this.getTcs(this.cusDateEnd, this.cusDateStart);}})}}>\n                            <div class=\"row\">\n                                <div class='col-lg-12'>\n                                    <div style={{ display: 'flex' }}>\n                                        <div style={{ display: 'inlineBlock' }}>\n                                            {\n                                                !this.state.tcOpen &&\n                                                <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                            }\n                                            {\n                                                this.state.tcOpen &&\n                                                <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                            }\n                                            <div className='rp-icon-button'><i className=\"fa fa-leaf\"></i></div>\n                                            <span className='rp-app-table-title'>Graphs</span>\n                                            <br></br>\n                                            <br></br>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Collapse isOpen={this.state.tcOpen}>\n                            <div class=\"row\">\n                                <div class=\"col\" style={{ width: '100%', height: '50%', marginBottom: '6rem' }}>\n                                    <div class=\"test-header\">\n                                        <div class=\"row\">\n                                            <div style={{ width: '20rem', marginTop: '2.5rem', marginLeft: '1rem' }}>\n                                                    <span className='rp-app-table-title'>Total Defects Filed Vs Closed</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                        {\n                                            !this.state.isApiUnderProgress &&\n                                            <Line data={this.lineweekNew}/>\n                                        }\n                                        {\n                                            this.state.isApiUnderProgress &&\n                                            <span className='rp-app-table-value'>Loading...</span>\n                                        }\n                                </div>\n                            </div >\n                            <div class=\"row\">\n                                <div class=\"col\" style={{ width: '100%', height: '50%', marginBottom: '6rem' }}>\n                                    <div class=\"test-header\">\n                                        <div class=\"row\">\n                                            <div style={{ width: '20rem', marginTop: '2.5rem', marginLeft: '1rem' }}>\n                                                    <span className='rp-app-table-title'>Defects Filed By Priority</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                        {\n                                            !this.state.isApiUnderProgress &&\n                                            <Line data={this.filedWeeklyLine}/>\n                                        }\n                                        {\n                                            this.state.isApiUnderProgress &&\n                                            <span className='rp-app-table-value'>Loading...</span>\n                                        }\n                                </div>\n                            </div >\n                            <div class=\"row\">\n                                <div class=\"col\" style={{ width: '100%', height: '50%', marginBottom: '6rem' }}>\n                                    <div class=\"test-header\">\n                                        <div class=\"row\">\n                                            <div style={{ width: '20rem', marginTop: '2.5rem', marginLeft: '1rem' }}>\n                                                    <span className='rp-app-table-title'>Defects Closed by Priority</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                        {\n                                            !this.state.isApiUnderProgress &&\n                                            <Line data={this.closedWeeklyLine}/>\n                                        }\n                                        {\n                                            this.state.isApiUnderProgress &&\n                                            <span className='rp-app-table-value'>Loading...</span>\n                                        }\n                                </div>\n                            </div >\n                        </Collapse>\n                    </Col>\n                </Row>\n            </div >\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    selectedRelease: getCurrentRelease(state, state.release.current.id)\n})\n\nexport default connect(mapStateToProps, {getCurrentRelease})(ReleaseStatusGraphs);","// CUSTOMER USING THIS RELEASE (OPTIONAL) (M)\n// Issues faced on customer side (jira - list)\n// customers to be given to\nimport React, { Component } from 'react';\nimport {Form, FormGroup, Col, Row, Table, Button, Input, Collapse} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getCurrentRelease } from '../../../reducers/release.reducer';\nimport axios from 'axios';\nimport { saveSingleFeature,saveBugs } from '../../../actions';\nimport './ReleaseStatus.scss'\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport ReleaseStatusGraphs from '../../../components/CustomerBugs/ReleaseStatusGraphs';\nlet allBugs = []\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false\n}\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\nclass ReleaseStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTC: {},\n            open: false,\n            width: window.screen.availWidth > 1700 ? 500 : 380,\n            featureOpen: true,\n            buildOpen: false,\n            bugOpen: false,\n            graphsOpen: false,\n            blockedBugOpen:false,\n            blockedBugList:[],\n            BugsList:[],\n            totalBugList:[],\n            releaseInfo: false,\n            fixVersion:'',\n            epicLink:'',\n            save:false\n        }\n    }\n    initialize() {\n        if (!this.props.singleFeature.fields) {\n            if (this.props.feature && this.props.feature.issues && this.props.feature.issues.length > 0) {\n                this.getFeatureDetails(this.props.feature.issues[0].self)\n            }\n        }\n        if (this.props.statusPage) {\n            this.setState({ ...this.state, ...this.props.statusPage });\n        }\n        console.log(\"selected release from release status\",this.props,this.props.selectedRelease)\n        console.log(\"bug reducer\",this.props.bug);\n        let fixVersion = this.props.selectedRelease.fixVersion;\n        let tempRelease = this.props.selectedRelease.ReleaseNumber\n        let release = this.props.selectedRelease.ReleaseNumber\n            let totalCount = 0\n            let maxResults = 0\n            let totalBugs = []\n\n            if(tempRelease === 'Spektra 2.4') {\n                tempRelease='2.4.0'\n            }\n            if(tempRelease === 'DMC-3.0') {\n                tempRelease=\"\\\"Spektra 3.0\\\"\"\n            }\n            if(tempRelease === 'DSS-3.1') {\n                tempRelease='3.1.0'\n            }\n            if(tempRelease === 'Overlay=3.1' || tempRelease === 'OCP-4.5') {\n                tempRelease = \"\\\"Spek 3.1.0\\\"\"\n            }\n            tempRelease=\"\\\"Spektra 3.0\\\"\"\n            fixVersion = \"\\\"\" + fixVersion + \"\\\"\"\n            // axios.get('/rest/bugs/total/' + tempRelease)\n            if (!this.props.bug){\n                axios.get('/rest/bugs/total/' + fixVersion)\n                .then(response => {\n                    totalBugs = response;\n                    maxResults = response.data.maxResults\n                    totalCount = parseInt(response.data.total/response.data.maxResults)\n                    let startAt = 0\n\n                    for(let i = 0; i < totalCount ; i++){\n                        startAt = startAt + response.data.maxResults\n                        // let url = '/rest/bugs/totalCount/'  + tempRelease + \"/\" + startAt\n                        let url = '/rest/bugs/totalCount/'  + fixVersion + \"/\" + startAt\n                        axios.get(url).then(response1=>{\n                            for(let i = 0 ;i < response1['data']['issues'].length ;i++){\n                                totalBugs['data']['issues'].push(response1['data']['issues'][i])\n                            }\n                        })\n                    }\n                    this.props.saveBugs({ data: { total: totalBugs.data.total, all: totalBugs.data }, id: release })\n                    this.setState({totalBugList:totalBugs.data},()=>{\n                        if(this.state.totalBugList){\n                            this.BlockedBugList(release)\n                        }else{\n                            console.log(\"coming in empty totalBugList\")\n                        }\n                    })\n                    axios.get('/rest/bugs/open/' + fixVersion)\n                    .then(res => {\n                        this.props.saveBugs({ data: { open: res.data.total }, id: release })\n                        //this.setState({ showBugs: true, cntr: 4 })\n\n                    }, err => {\n                        console.log('err ', err);\n                    })\n                    // axios.get('/rest/bugs/resolved/' + temp)\n                    axios.get('/rest/bugs/resolved/' + fixVersion)\n                    .then(res => {\n                        this.props.saveBugs({ data: { resolved: res.data.total }, id: release})\n                        //this.setState({ showBugs: true, cntr: 6 })\n\n                    }, err => {\n                        console.log('err ', err);\n                    })\n\n                    }, err => {\n                        console.log('err ', err);\n                    })\n            }\n    }\n    componentDidMount() {\n        this.initialize();\n    }\n    componentWillReceiveProps(newProps) {\n        if(this.props.selectedRelease && newProps.selectedRelease && this.props.selectedRelease.ReleaseNumber !== newProps.selectedRelease.ReleaseNumber) {\n            this.props.history.push('/release/summary')\n            //this.initialize();\n        }\n    }\n\n    BlockedBugList = (release) =>{\n        //calculate blocker bug count\n        let list = []\n        let list2 = []\n        let url  = `/api/bugwiseblockedtcs/` + release\n        axios.get(url).then(res=>{\n                    list.push(res.data);\n                    for (let [key, value] of Object.entries(list[0])) {\n                        list2.push({'bug_no':key,'value':value})\n                    }\n                    let a = this.sortBugList(list2)\n                    //this.setState({blockedBugList:list2})\n                    this.state.blockedBugList = list2\n                    let list3 = []\n                    let list4 = []\n                    if(this.state.totalBugList.issues){\n                        for(let i = 0 ; i < this.state.blockedBugList.length ; i++){\n                            for(let j = 0 ; j < this.state.totalBugList.issues.length ; j++ ){\n                                if(this.state.totalBugList.issues[j]['key'] == this.state.blockedBugList[i]['bug_no'] ){\n                                    let bug = this.state.totalBugList.issues[j].fields\n                                    list3.push({'bug_no':this.state.totalBugList.issues[j]['key'],'value':this.state.blockedBugList[i]['value'],'summary':bug.summary,'status':bug.status.name,'priority':bug.priority.name})\n                                }\n                                else{\n                                    if (this.state.blockedBugList[i]['bug_no'].indexOf(',') != -1) {\n                                        list3.push({'bug_no':this.state.blockedBugList[i]['bug_no'],'value':this.state.blockedBugList[i]['value'],'summary':'','status':'','priority':''})\n                                    }\n                                }\n                            }\n                        }\n                    for(let i = 0; i < list3.length-1;i++){\n                        if(list3[i]['bug_no'] !== list3[i+1]['bug_no'] ){\n                            list4.push(list3[i])\n                        }\n                    }\n                    //this.setState({blockedBugList:list4})\n                    this.state.blockedBugList = list4\n                    }\n                    this.state.blockedBugList.forEach((item, idx) => {\n                        let promises = []\n                        promises.push(axios.get(`/rest/getBugDetails`,{\n                            params: {\n                                key: item.bug_no,\n                            }\n                        }).then(all => {\n                            if(all.data.issues.length > 0){\n                                this.state.blockedBugList[idx][\"summary\"] = all.data.issues[0][\"fields\"][\"summary\"]\n                                this.state.blockedBugList[idx][\"status\"] = all.data.issues[0][\"fields\"][\"status\"][\"name\"]\n                            }\n                        }).catch(err => {\n                        }))\n                        Promise.all(promises).then(result => {\n                            this.setState({blockedBugList : this.state.blockedBugList})\n                        })\n                    })\n                },\n                error => {\n                console.log('bugwiseblockedtcs',error);\n            })\n    }\n    getFeatureDetails(dws) {\n        axios.post('/rest/featuredetail', { data: dws }).then(res => {\n            let issuesArray = []\n            if (this.props.selectedRelease.ReleaseNumber === \"DMC-3.0\"){\n                axios.get(\"/rest/DMCfeaturedetail/\"+ res.data.key).then(res1 => {\n                    if(res1.data.issues){\n                        for(let i = 0 ; i < res1.data.issues.length ; i++ ){\n                            issuesArray.push(res1.data.issues[i]);\n                        }\n                    }\n                    res.data.fields.subtasks = issuesArray;\n                    this.props.saveSingleFeature({ data: res.data });\n                })\n                res.data.fields.subtasks = issuesArray;\n            }\n            this.props.saveSingleFeature({ data: res.data });\n        }, err => {})\n    }\n\n    sortBugList = (list) =>{\n        return list.sort(function(a, b){\n            return b.value - a.value\n        })\n    }\n    renderTableData  = () => {\n        return this.state.blockedBugList == 0 ? (\n            <div>Loading...</div>\n        ) : (\n            this.state.blockedBugList.map((e, i) => {\n            return (\n                        <tr key={i}>\n                            <td width=\"100px\" height=\"50px\" ><a href={\"https://diamanti.atlassian.net/browse/\" + e.bug_no} target='_blank'>{e.bug_no}</a></td>\n                            <td width=\"100px\" height=\"50px\" >{e.summary}</td>\n                            <td width=\"100px\" height=\"50px\" >{e.status}</td>\n                            <td width=\"100px\" height=\"50px\" >{e.value}</td>\n                            <td width=\"100px\" height=\"50px\" >{e.priority}</td>\n                        </tr>\n                );\n            })\n        )\n    }\n\n    checkSelectedBug = (item) =>{\n        let list = []\n        if(this.props.bug.bug.issues){\n            this.props.bug.bug.issues.forEach((eachBug)=>{\n                if(item == 'open'){\n                    if(eachBug.fields.status.name == 'Open' || eachBug.fields.status.name == 'To Do' || eachBug.fields.status.name == 'In Progress' || eachBug.fields.status.name == 'Info'){\n                        list.push(eachBug)\n                    }\n                }\n                if(item == 'resolved'){\n                    if(eachBug.fields.status.name == 'Resolved' || eachBug.fields.status.name == 'Closed' || eachBug.fields.status.name == 'IN QA' ){\n                        list.push(eachBug)\n                    }\n                }\n                if(item == 'total'){\n                    list.push(eachBug)\n                }\n                if(item == \"others\" ){\n                    if(eachBug.fields.status.name != 'Open' && eachBug.fields.status.name != 'Resolved' && eachBug.fields.status.name != 'To Do' && eachBug.fields.status.name != 'In Progress' && eachBug.fields.status.name != 'Closed' && eachBug.fields.status.name != 'Info' && eachBug.fields.status.name != 'IN QA'){\n                        list.push(eachBug)\n                    }\n                }\n            })\n            this.setState({BugsList:list})\n        }\n    }\n\n    handleChange = (e) => {\n        if(e.target.name == 'fixVersion'){\n            this.setState({\n                fixVersion: e.target.value.trim()\n            })\n        }\n        if(e.target.name == 'epicLink'){\n            this.setState({\n                epicLink: e.target.value.trim()\n            })\n        }\n    };\n\n    handleSubmit = (e) => {\n        // e.preventDefault();\n        // e.target.reset();\n        this.setState({\n            save : true\n        })\n        let fixVersion = this.state.fixVersion;\n        let epicLink = this.state.epicLink;\n        let formData = {\n            \"fixVersion\": fixVersion,\n            \"epicLink\": epicLink,\n        }\n\n        let url = ''\n        axios.post(url,formData)\n        .then(response=>{\n            alert(\"added successfully\");\n            this.reset();\n        })\n        .catch(err=>{\n            console.log(\"err\",err);\n        })\n    }\n\n    reset = () =>{\n        document.getElementById('fixVersion').value='';\n        document.getElementById('epicLink').value='';\n    }\n    render() {\n        let featuresCount = 0;\n        let featuresStatusDict = {'Open': { total: 0 },'Resolved': { total: 0 },'Others': { total: 0 } }\n        let statusScenarios = { Open: { total: 0 }, Resolved: { total: 0 } };\n\n        if (this.props.feature && this.props.feature.issues) {\n            featuresCount = this.props.feature.issues.length;\n            this.props.feature.issues.forEach(item => {\n                if(statusScenarios[item.fields.status.name] == 'In Progress' || statusScenarios[item.fields.status.name] == 'To Do' ) {\n                    statusScenarios['Open'].total += 1;\n                }\n                if (statusScenarios[item.fields.status.name]) {\n                    statusScenarios[item.fields.status.name].total += 1;\n                } else if(statusScenarios[item.fields.status.name] != 'In Progress' || statusScenarios[item.fields.status.name] != 'To Do') {\n                    statusScenarios[item.fields.status.name] = { total: 1 }\n                }\n            })\n        }\n\n        if (this.props.feature && this.props.feature.issues) {\n            featuresCount = this.props.feature.issues.length;\n            this.props.feature.issues.forEach(item => {\n                if(item.fields.status.name == 'In Progress' || item.fields.status.name == 'To Do'|| item.fields.status.name == 'Open' ) {\n                    featuresStatusDict['Open'].total += 1;\n                }\n                else if(item.fields.status.name == 'Resolved'){\n                    featuresStatusDict['Resolved'].total += 1;\n                }\n                else{\n                    featuresStatusDict['Others'].total += 1;\n                }\n            })\n        }\n        return (\n            <div>\n                {\n                    this.props.currentUser && !this.props.currentUser.isExe &&\n                <div>\n                {/* {\n                    this.props.currentUser && this.props.currentUser.isAdmin &&\n                    <Row>\n                        <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                                <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => this.setState({ releaseInfo: !this.state.releaseInfo })}>\n                                    <div class=\"row\">\n                                        <div class='col-md-6'>\n                                            <div class='row'>\n                                                <div class='col-md-4'>\n                                                    {\n                                                        !this.state.releaseInfo &&\n                                                        <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                                    }\n                                                    {\n                                                        this.state.releaseInfo &&\n                                                        <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                                    }\n                                                    <span className='rp-app-table-title'>Release Info</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Collapse isOpen={this.state.releaseInfo}>\n                                <div>\n                                    <Form>\n                                        <FormGroup row>\n                                            <Col sm={6}>\n                                                <Input type = \"text\" name = \"fixVersion\" id = \"fixVersion\" placeholder = \"Enter Fix Version \"/>\n                                            </Col>\n                                        </FormGroup>\n\n                                        <FormGroup row>\n                                            <Col sm={6}>\n                                                <Input type = \"text\" name = \"epicLink\" id = \"epicLink\" placeholder = \"Enter Epic Link \"/>\n                                            </Col>\n                                        </FormGroup>\n\n                                        <Button outline color=\"success\" id = 'submit' onClick={this.handleSubmit} > Save </Button>\n                                    </Form>\n                                </div>\n                            </Collapse>\n                        </Col>\n                    </Row>\n                } */}\n\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                        <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => this.setState({ bugOpen: !this.state.bugOpen })}>\n                            <div class=\"row\">\n                                <div class='col-md-6'>\n                                    <div class='row'>\n                                        <div class='col-md-4'>\n                                            {\n                                                !this.state.bugOpen &&\n                                                <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                            }\n                                            {\n                                                this.state.bugOpen &&\n                                                <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                            }\n\n                                            <div className='rp-icon-button'><i className=\"fa fa-bug\"></i></div><span className='rp-app-table-title'>Bugs</span>\n                                        </div>\n                                        {/* {\n                                            this.props.bug && Object.keys(this.props.bug.bugCount.all).map(item =>\n                                                <div class='col-md-2'>\n                                                    <div className={`c-callout c-callout-${item.toLowerCase()}`} style={{ marginTop: '0', marginBottom: '0' }}>\n                                                        <small class=\"text-muted\">{item.toUpperCase()}</small><br></br>\n                                                        <strong class=\"h5\">{this.props.bug.bugCount.all[item]}</strong>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } */}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Collapse isOpen={this.state.bugOpen}>\n                            <div className='rp-app-table-header' style={{ cursor: 'pointer' }} >\n                                <div class=\"row\">\n                                    <div class='col-md-6'>\n                                        <div class='row'>\n                                            {\n                                                this.props.bug && Object.keys(this.props.bug.bugCount.all).map(item =>\n                                                    <div class='col-md-2'>\n                                                        <div className={`c-callout c-callout-${item.toLowerCase()}`} style={{ marginTop: '0', marginBottom: '0' }} onClick={() => this.checkSelectedBug(item)}>\n                                                            <small class=\"text-muted\">{item.toUpperCase()}</small><br></br>\n                                                            <strong class=\"h5\">{this.props.bug.bugCount.all[item]}</strong>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Row style={\n                                {\n                                    marginRight: '0',\n                                    marginLeft: '0'\n                                }\n                            }>\n                                <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                                    <div style={{ marginLeft: '1rem', marginTop: '1rem', overflowY: 'scroll', maxHeight: '30rem' }}>\n                                        <Table scroll responsive style={{ overflow: 'scroll' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th style={{width:'250px'}}>Bug</th>\n                                                    <th>Summary</th>\n                                                    <th  style={{width:'250px'}}>Status</th>\n                                                    <th  style={{width:'250px'}}>Priority</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.props.bug && this.props.bug.bug && this.props.bug.bug.issues &&\n                                                    this.state.BugsList.map(item => {\n                                                        return (\n                                                            <tr style={{ cursor: 'pointer' }}>\n                                                                <td style={{ width: '250px' }} className='rp-app-table-key'><span onClick={() => window.open(`https://diamanti.atlassian.net/browse/${item.key}`)}>{item.key}</span></td>\n\n                                                                <td>{item.fields.summary}</td>\n\n                                                                <td style={{width:'250px'}}>\n                                                                    <div className={`c-callout c-callout-${item.fields.status.name.toLowerCase()} rp-new-badge`}>\n                                                                        <strong class=\"h5\">{item.fields.status.name}</strong>\n                                                                    </div>\n                                                                </td>\n                                                                <div style={{width:'250px'}} className={`c-callout c-callout-${item.fields.priority.name.toLowerCase()} rp-new-badge`}>\n                                                                    <strong class=\"h5\">{item.fields.priority.name}</strong>\n                                                                </div>\n\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Collapse>\n                    </Col>\n                </Row>\n\n\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n\n                        <div className='rp-app-table-header' style={{ cursor: 'pointer' }}>\n                            <div class=\"row\">\n                                <div class='col-lg-12'>\n                                    <div style={{ display: 'flex' }}>\n                                        <div onClick={() => this.setState({ blockedBugOpen: !this.state.blockedBugOpen },()=>{this.BlockedBugList(this.props.selectedRelease.ReleaseNumber)})} style={{ display: 'inlineBlock' }}>\n                                        {\n                                            !this.state.blockedBugOpen &&\n                                            <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                        }\n                                        {\n                                            this.state.blockedBugOpen &&\n                                            <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                        }\n                                        <div className='rp-icon-button'></div>\n                                        <span className='rp-app-table-title'>Blocker Bugs</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse isOpen={this.state.blockedBugOpen}>\n                            <Row style={\n                                {\n                                    marginRight: '0',\n                                    marginLeft: '0'\n                                }\n                                }>\n                                <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                                    <div style={{ marginLeft: '1rem', marginTop: '1rem', overflowY: 'scroll', maxHeight: '30rem' }}>\n                                        <Table scroll responsive style={{ overflow: 'scroll' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th style={{width:'100px'}}>Bug</th>\n                                                    <th style={{width:'450px'}}>Summary</th>\n                                                    <th  style={{width:'150px'}}>Status</th>\n                                                    <th  style={{width:'80px'}}>#TC Blocked</th>\n                                                    <th  style={{width:'150px'}}>Priority</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                this.renderTableData()\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Collapse>\n\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                        <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => this.setState({ buildOpen: !this.state.buildOpen })}>\n                            {\n                                !this.state.buildOpen &&\n                                <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                            }\n                            {\n                                this.state.buildOpen &&\n                                <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                            }\n\n                            <div className='rp-icon-button'><i className=\"fa fa-gears\"></i></div>\n                            <span className='rp-app-table-title'>Upgrade Metrics and Risks</span>\n                        </div>\n                        <Collapse isOpen={this.state.buildOpen}>\n                            <Row>\n                                <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"4\">\n                                    <div style={{ marginLeft: '1rem', marginTop: '1rem', overflowY: 'scroll', maxHeight: '30rem' }}>\n                                        <div className='rp-rs-hw-support'>Upgrade Metrics</div>\n                                        <Table scroll responsive style={{ overflow: 'scroll' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th>From Version</th>\n                                                    <th>To Version</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.props.selectedRelease.UpgradeMetrics && this.props.selectedRelease.UpgradeMetrics.map(item =>\n                                                        <tr>\n                                                            <td>{item}</td>\n                                                            <td>{this.props.selectedRelease.ReleaseNumber}</td>\n                                                        </tr>\n                                                    )\n                                                }\n\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </Col>\n                                <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"8\">\n                                    <div className='rp-rs-hw-support'>Risks and Red Flags</div>\n                                    <Input readOnly={true} type=\"textarea\" name=\"risksRedFlags\" id=\"risksRedFlags\" rows=\"5\"\n                                        placeholder=\"Content...\" value={this.props.selectedRelease.RedFlagsRisks} />\n                                </Col>\n                            </Row>\n                        </Collapse>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                        <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => this.setState({ featureOpen: !this.state.featureOpen })}>\n                            <div class=\"row\">\n                                <div class='col-md-8'>\n                                    <div class=\"row\">\n                                        <div class='col-md-3'>\n                                            {\n                                                !this.state.featureOpen &&\n                                                <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                            }\n                                            {\n                                                this.state.featureOpen &&\n                                                <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                            }\n\n                                            <div className='rp-icon-button'><i className=\"fa fa-empire\"></i></div>\n                                            <span className='rp-app-table-title'>Features</span>\n\n                                        </div>\n                                        <div class=\"col-sm-2\">\n                                            <div className={`c-callout c-callout-total`} style={{ marginTop: '0', marginBottom: '0' }}>\n                                                <small class=\"text-muted\">TOTAL</small><br></br>\n                                                <strong class=\"h4\">{featuresCount}</strong>\n                                            </div>\n                                        </div>\n                                        {\n                                            Object.keys(featuresStatusDict).map(item =>\n                                                <div class=\"col-sm-2\">\n                                                    <div className={`c-callout c-callout-${item.toLowerCase()}`} style={{ marginTop: '0', marginBottom: '0' }}>\n                                                        <small class=\"text-muted\">{item.toUpperCase()}</small><br></br>\n                                                        <strong class=\"h4\">{featuresStatusDict[item].total}</strong>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        <Collapse isOpen={this.state.featureOpen}>\n\n                            <Row>\n                                <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"4\">\n                                    <div style={{ marginLeft: '1rem', marginTop: '1rem', overflowY: 'scroll', maxHeight: '30rem' }}>\n                                        <Table scroll responsive style={{ overflow: 'scroll' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th>Feature</th>\n                                                    <th>Summary</th>\n                                                    <th>Status</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                        this.props.feature && this.props.feature.issues &&\n                                                        this.props.feature.issues.map(item => {\n                                                            return (\n                                                                <tr style={{ cursor: 'pointer' }} onClick={() => this.getFeatureDetails(item.self)}>\n                                                                    <td className='rp-app-table-key' onClick={() => window.open(`https://diamanti.atlassian.net/browse/${item.key}`)}>{item.key}</td>\n                                                                    <td>{item.fields.summary}</td>\n                                                                    <td>\n                                                                        {/* <Badge className='rp-open-status-badge'>{item.fields.status.name}</Badge> */}\n                                                                        <div className={`c-callout c-callout-open rp-new-badge`}>\n                                                                            <strong class=\"h5\">{item.fields.status.name}</strong>\n                                                                        </div>\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </Col>\n                                <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"8\">\n                                    {\n                                        (this.props.singleFeature && !this.props.singleFeature.fields\n                                        && loading())\n\n                                    }\n                                    {\n                                        this.props.singleFeature && this.props.singleFeature.fields &&\n\n                                        <Row style={{ marginLeft: '0.5rem', maxHeight: '30rem', overflowY: 'scroll' }}>\n                                            <div className='rp-rs-hw-support'>{this.props.singleFeature.key}</div>\n\n\n                                            <Table scroll responsive style={{ overflow: 'scroll' }}>\n                                                <tbody>\n                                                    <tr>\n                                                        <td className='rp-app-table-key'>Summary</td>\n                                                        <td className='rp-app-table-key'>{this.props.singleFeature.fields.summary}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className='rp-app-table-key'>Created</td>\n                                                        <td className='rp-app-table-key'>{this.props.singleFeature.fields.created}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className='rp-app-table-key'>Updated</td>\n                                                        <td className='rp-app-table-key'>{this.props.singleFeature.fields.updated}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className='rp-app-table-key'>Priority</td>\n                                                        <td className='rp-app-table-key'>\n                                                            <div className={`c-callout c-callout-${this.props.singleFeature.fields.priority.name.toLowerCase()} rp-new-badge`}>\n                                                                <strong class=\"h5\">{this.props.singleFeature.fields.priority.name}</strong>\n                                                            </div>\n                                                            {/* <Badge className={`rp-priority-${this.props.singleFeature.fields.priority.name}-status-badge`} style={{ marginTop: '0.5rem' }}>\n                                                            {this.props.singleFeature.fields.priority.name}\n                                                            </Badge> */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className='rp-app-table-key'>Progress</td>\n                                                        <td className='rp-app-table-key'>{this.props.singleFeature.fields.progress.progress}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className='rp-app-table-key'>Status</td>\n                                                        <td className='rp-app-table-key'>\n                                                            <div className={`c-callout c-callout-${this.props.singleFeature.fields.status.name.toLowerCase()} rp-new-badge`}>\n                                                                <strong class=\"h5\">{this.props.singleFeature.fields.status.name}</strong>\n                                                            </div>\n                                                            {/* <Badge className={`rp-feature-${this.props.singleFeature.fields.status.name}-status-badge`} style={{ marginTop: '0.5rem' }}>\n                                                            {this.props.singleFeature.fields.status.name}\n                                                            </Badge> */}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </Table>\n                                            <div className='rp-rs-hw-support'>Subtasks</div>\n                                            <Table scroll responsive style={{ overflow: 'scroll' }}>\n                                                <tbody>\n                                                    {\n\n                                                        this.props.singleFeature.fields.subtasks.map(item => {\n                                                            return (\n                                                                <tr>\n                                                                    <td style={{ width: '250px' }}><span onClick={() => window.open(`https://diamanti.atlassian.net/browse/${item.key}`)}>{item.key}</span></td>\n                                                                    <td>{item.fields.summary}</td>\n                                                                    <td  style={{width:'250px'}}>\n                                                                        <div className={`c-callout c-callout-${item.fields.status.name.toLowerCase()} rp-new-badge`}>\n                                                                            <strong class=\"h5\">{item.fields.status.name}</strong>\n                                                                        </div>\n                                                                        {/* <Badge className={`rp-feature-${item.fields.status.name}-status-badge`} style={{ marginTop: '0.5rem' }}>\n                                                                        {item.fields.status.name}</Badge> */}\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        })\n                                                    }\n                                                </tbody>\n                                            </Table>\n                                        </Row>\n                                    }\n                                </Col>\n                            </Row>\n                        </Collapse>\n                    </Col>\n                </Row>\n                <ReleaseStatusGraphs></ReleaseStatusGraphs>\n                </div>\n                }\n                {\n                    this.props.currentUser && this.props.currentUser.isExe &&\n                    <div class=\"container\" style={{ 'margin-top': '1rem' }}>\n                        <h5>You are not allowed to view this page.</h5>\n                    </div>\n                }\n        </div >)\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    currentUser: state.auth.currentUser,\n    selectedRelease: getCurrentRelease(state, state.release.current.id),\n    selectedTC: state.testcase.all[state.release.current.id],\n    feature: state.feature.all[state.release.current.id],\n    bug: state.bug.all[state.release.current.id],\n    singleFeature: state.feature.single,\n    statusPage: state.app.statusPage,\n})\nexport default connect(mapStateToProps, { saveSingleFeature, saveBugs })(ReleaseStatus);\n\n\n\n\n\n"],"sourceRoot":""}