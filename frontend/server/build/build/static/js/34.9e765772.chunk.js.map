{"version":3,"sources":["views/Release/components/Sunburst.js","views/Release/ReleaseQAStrategy/ReleaseQAStrategy.js"],"names":["Sunburst","props","_this","Object","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_last_click","radius","Math","min","width","height","y","d3ScaleSqrt","range","x","d3ScaleLinear","PI","arc","d3Arc","startAngle","d","max","x0","endAngle","x1","innerRadius","y0","outerRadius","y1","partition","d3Partition","hueDXScale","domain","domId","round","random","toString","svg","tooltipDom","lastSelect","_debug","_log","_create","nextProps","shallowEqual","selectAll","remove","_destroy_svg","id","key","nodes","d3Select","length","node","__data__","_update","_warn","concat","_this2","style","parent","_colorize","_this3","data","root","d3Hierarchy","sum","undefined","count_member","children","bind","descendants","filter","radianCutoff","w","h","el","append","attr","gSlices","enter","exit","key_member","cursor","evenodd","depth","i","on","_onClick","act","onClick","labelFunc","_","_middleArcLine","text","_getLabelText","tooltip","_setTooltips","a","_this4","transition","duration","transitionDuration","tween","xd","d3Interpolate","yd","yr","t","attrTween","e","parentNode","select","label","angle","arclength","font_size","_textFits","condensedLabelFunc","halfPi","angles","r","middleAngle","invertDirection","reverse","path","d3Path","d0","d1","log","dx","tooltipX","dy","tooltipY","html","tooltipFunc","d3Event","pageX","pageY","onMouseover","onMouseout","hue","current","_this$props","lightness","saturation","child_brightness","fill","d3Hsl","brighter","thishsl","colorshift","s","l","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","React","Component","defaultProps","name","colorFunc","current_color","console","warn","CustomTooltips","date","QARateOfProgress","tcTotal","tcSkipped","tcNA","SetupsUsed","Engineer","startdate","freezedate","upgrade","ReleaseQAStrategy","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","toggle","setState","modal","state","addTC","open","window","screen","availWidth","basic","editOptions","TABLE_OPTIONS","EDIT","editing","updated","qaStrategy","collapseOpen","Engineers","domainSelected","items","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","formattedDates","forEach","item","Date","toISOString","Domain","axios","post","selectedRelease","ReleaseNumber","then","res","getTcs","error","alert","TcID","react__WEBPACK_IMPORTED_MODULE_6___default","position","top","left","reactstrap__WEBPACK_IMPORTED_MODULE_7__","map","each","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","sm","md","lg","reactstrap__WEBPACK_IMPORTED_MODULE_9__","scroll","responsive","overflow","restrictEdit","field","value","index","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","reactstrap__WEBPACK_IMPORTED_MODULE_11__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","save","connect","ownProps","currentUser","auth","getCurrentRelease","release","selectedTC","testcase","all","saveTestCase","saveTestCaseStatus"],"mappings":"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","file":"static/js/34.9e765772.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport shallowEqual from 'shallowequal'\n\nimport { hsl as d3Hsl } from 'd3-color';\nimport { select as d3Select, event as d3Event } from 'd3-selection';\nimport { scaleLinear as d3ScaleLinear, scaleSqrt as d3ScaleSqrt } from 'd3-scale';\nimport { hierarchy as d3Hierarchy, partition as d3Partition } from 'd3-hierarchy';\nimport { arc as d3Arc } from 'd3-shape';\nimport { path as d3Path } from 'd3-path';\nimport { interpolate as d3Interpolate } from 'd3-interpolate';\n\n// We have to import this event though we dont use it\nimport { transition } from 'd3-transition';\n// d3Transition;\n\n/* REFS\n * zoomable /w/ labels -- https://bl.ocks.org/vasturiano/12da9071095fbd4df434e60d52d2d58d\n * text opacity -- https://gist.github.com/metmajer/5480307\n*/\n\n/**\n* Creates a zoomable Sunburst\n* @param {object} props\n* @param {object} props.data - see the d3 {@link https://github.com/defunctzombie/d3-examples/blob/master/dendrogram/flare.json|flare.json}\n    data for the shape that is required. \n* @param {string} props.width - width of svg\n* @param {string} props.height - height of svg. \n*   If width and height are not the same there will be dead space.\n* @param {number} props.count_member - what data element to use for slice size\n* @param {number} [props.radianCutoff=.01] - smallest slice to show in radians\n* @param {number} [props.transitionDuration=500] - ms for animation\n* @param {number} [props.saturation=.5] - base color saturation of slices\n* @param {number} [props.lightness=.5] - base color lightness of slices\n* @param {number} [props.child_brightness=.5] - value to lighten children slices\n* @param {number} [props.font_size=12] - for calculating if text fits\n* @param {func} [props.colorFunc=(node, current_color) => current_color]\n        - Custom color funorFunc=(node, current_color) => current_color]\n        - Custom color func for slices with heights > 0.\n* @param {func} [props.labelFunc] - returns text to slice\n* @param {func} [props.condensedLabelFunc] - backup function to try to fit less text\n        for smaller slices.\n* @param {func} [props.tooltipFunc=(data) => data.name]\n* @param {number} [props.tooltipX=20] - x pointer offset to show tooltip \n* @param {number} [props.tooltipY=20] - y pionter offset to show tooltip\n* @param {string} [props.domID] - will be random if undefined\n* @param {func} [props.onMouseover]\n* @param {func} [props.onMouseout]\n* @param {func} [props.onClick]\n* @param {string} [props.key_member] - data member to construct dom ids from\n\n*/\n//FIXME normalize function signatures\n//FIXME normalize case\nclass Sunburst extends React.Component {\n\n    static propTypes = {\n        data: PropTypes.object.isRequired,\n        width: PropTypes.string.isRequired,\n        height: PropTypes.string.isRequired,\n        count_member: PropTypes.string.isRequired,\n\n        // requried /w/ default\n        tooltip: PropTypes.bool.isRequired, // FIXME get rid of this\n        radianCutoff: PropTypes.number.isRequired, // smallest slice to show in radians\n        transitionDuration: PropTypes.number.isRequired, // ms for animation\n        saturation: PropTypes.number.isRequired, // base saturation of arcs\n        lightness: PropTypes.number.isRequired, // base lightness of parent arcs\n        child_brightness: PropTypes.number.isRequired, // value to lighten children\n        font_size: PropTypes.number.isRequired, // for calculating if text fits\n\n        colorFunc: PropTypes.func, // custom colorizing for slice\n        tooltipFunc: PropTypes.func,\n        tooltipX: PropTypes.number.isRequired, // offset x to place tooltip\n        tooltipY: PropTypes.number.isRequired, // ofset y to place tooltip\n\n        domId: PropTypes.string, // will be random if undefined\n        onMouseover: PropTypes.func,\n        onMouseout: PropTypes.func,\n        onClick: PropTypes.func,\n        labelFunc: PropTypes.func,   // returns text for slice\n        condensedLabelFunc: PropTypes.func, // backup function to try to fit text\n        key_member: PropTypes.string, // unique id\n        _debug: PropTypes.bool,\n        _log: PropTypes.func,\n        _warn: PropTypes.func,\n    }\n\n    static defaultProps = {\n        tooltip: true,\n        tooltipFunc: (data) => data.name,\n        radianCutoff: .001,\n        transitionDuration: 500,\n        colorFunc: (node, current_color) => current_color,\n        key_member: 'key',\n        font_size: 12,\n        tooltipX: 20,\n        tooltipY: 20,\n        saturation: .5,\n        lightness: .5,\n        child_brightness: .5,\n        _debug: false,\n        _log: console.log,\n        _warn: console.warn,\n    }\n\n    constructor(props) {\n        super(props);\n        // this.init();\n        this._last_click = null\n        this.radius = (Math.min(this.props.width, this.props.height) / 2);\n        this.y = d3ScaleSqrt()\n            .range([0, this.radius]);\n\n        this.x = d3ScaleLinear()\n            .range([0, 2 * Math.PI])\n\n        this.arc = d3Arc()\n            .startAngle((d) => { return Math.max(0, Math.min(2 * Math.PI, this.x(d.x0))); })\n            .endAngle((d) => { return Math.max(0, Math.min(2 * Math.PI, this.x(d.x1))); })\n            .innerRadius((d) => { return Math.max(0, this.y(d.y0)); })\n            .outerRadius((d) => { return Math.max(0, this.y(d.y1)); });\n\n        this.partition = d3Partition()\n\n        this.hueDXScale = d3ScaleLinear()\n            .domain([0, 1])\n            .range([0, 360])\n\n        this.domId = this.props.domId || ('sunburst-wrapper-' + Math.round(Math.random() * 1e12).toString())\n        this.svg = null\n        this.tooltipDom = null\n        this.lastSelect = null\n    }\n    init() {\n\n    }\n\n    componentDidMount() {\n        this.props._debug && this.props._log(\"Sunburst: componentDidMount()\")\n        this._create();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        this.props._debug && this.props._log(\"Sunburst: shouldComponentUpdate()\", this.props)\n        if (!shallowEqual(this.props, nextProps)) {\n            return false\n        }\n        return true\n    }\n\n    _destroy_svg() {\n        this.props._debug && this.props._log(\"Sunburst: _destroy_svg()\")\n        this.svg && this.svg.selectAll('*').remove()\n        // this.svg = null\n    }\n\n    componentDidUpdate() { //prevProps\n        this.props._debug && this.props._log(\"Sunburst: componentDidUpdate()\")\n        // this._destroy_svg()\n        this._create()\n    }\n\n    componentWillUnmount() {\n        this.props._debug && this.props._log(\"Sunburst: componentWillUnmount()\")\n        this._destroy_svg()\n    }\n    /**\n     * Programatically select a slice.\n     * @param id the slice key to select. This should be the key_member set in\n     * props.\n    */\n    select(id) {\n        this.props._debug && this.props._log(\"Sunburst: select(id)\")\n        const key = '#mainArc-' + id\n        const nodes = d3Select(key).nodes()\n        if (!nodes.length) {\n            this.props._warn(`could not find node with id of ${key}`)\n            return\n        }\n        const node = nodes[0].__data__\n        this._update(node)\n    }\n\n    _onClick(node) {\n        this.props._debug && this.props._log(\"Sunburst: _onClick(node)\")\n        this._last_click = node\n    }\n\n    /**\n     * recomputes slice colors. If the color function changes this should be called\n     * to update to the new color sheme.\n    */\n    updateColor() {\n        this.props._debug && this.props._log(\"Sunburst: updateColor()\")\n        this.svg.selectAll('path.sunburst-main-arc')\n            .style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n    }\n\n    _create() {\n        this.props._debug && this.props._log(\"Sunburst: _create()\")\n        if (!this.props.data) return;\n\n        const root = d3Hierarchy(this.props.data)\n            .sum(function (d) {\n                if (d[this.props.count_member] === undefined)\n                    this.props._warn(`props.count_member (${this.props.count_member}) is not defined on data`)\n                return !d.children || d.children.length === 0 ? d[this.props.count_member] : 0;\n            }.bind(this))\n        //.filter( (d) => d.depth < 4)\n\n        const data = this.partition(root)\n            .descendants()\n            .filter((d) => d.x1 - d.x0 > this.props.radianCutoff) // 0.005 radians = 0.29 degrees\n\n        if (!this.svg) {\n            const w = this.props.width\n            const h = this.props.height\n            const el = d3Select('#' + this.domId)\n\n            this.svg = el.append('svg');\n            this.svg\n                .style('class', 'sunburst-svg')\n                .style('width', w + 'px')\n                .style('height', h + 'px')\n                .attr('viewBox', `${-w / 2} ${-h / 2} ${w} ${h}`);\n            //this.canvas = this.svg.append('g');\n            //this.svg = d3Select(\"svg\").append(\"g\").attr(\"id\", \"bigG\")\n\n            var gSlices = this.svg.selectAll(\"g\")\n                .data(data)\n                .enter()\n                .append(\"g\")\n\n            gSlices.exit().remove();\n\n            const key = this.props.key_member\n            let cntr = 0;\n            gSlices.append(\"path\")\n                .attr('class', (d) => {\n                    const cursor = (!d.parent || !d.children) ? ' cursor-pointer' : ' cursor-pointer'\n                    const evenodd = d.depth % 2 ? 'even-row' : 'odd-row'\n                    return `sunburst-main-arc${cursor} ${evenodd}`\n                }).attr('id', (d, i) => {\n                    return key ? `mainArc-${d.data[key]}` : `mainArc-${i}`\n                }).style(\"fill\", (d) => {\n\n                    // return d.parent ? this._colorize(d) : \"white\"\n                    return d.parent ? this._colorize(d) : \"white\"\n                })\n                .on('click', function (node) {\n                    this._onClick(node)\n                    let act = true;\n                    if (this.props.onClick) {\n                        act = this.props.onClick(node);\n                    }\n                    act && this._update(node)\n                }.bind(this))\n\n            if (this.props.labelFunc) {\n                gSlices.append('path')\n                    .attr('class', 'sunburst-hidden-arc')\n                    .attr('id', (_, i) => `hiddenArc${i}`)\n                    .attr('d', this._middleArcLine.bind(this))\n                    .style('fill', 'none')\n\n                const text = gSlices.append('text')\n                    .style('pointer-events', 'none')\n                    .style('dominant-baseline', 'middle')\n                    .style('text-anchor', 'middle')\n                //.attr('display', d => this._textFits(d) ? null : 'none')\n\n                text.append('textPath')\n                    .attr('startOffset', '50%')\n                    .attr('xlink:href', (_, i) => `#hiddenArc${i}`)\n                    .text(d => this._getLabelText(d) || '')\n            }\n        }\n        this.props.tooltip && this._setTooltips()\n        this._update(root)\n    }\n\n    _update(d, i, a) {\n        this.props._debug && this.props._log(\"Sunburst: _update(d, i, a)\")\n\n        if (this.lastSelect && a && this.lastSelect == a[i].id)\n            return\n\n        this.lastSelect = a && a[i].id\n\n        this.svg.transition().selectAll('textPath').attr(\"opacity\", 0);\n\n        const transition = this.svg.transition()\n            .duration(this.props.transitionDuration) // duration of transition\n            .tween(\"scale\", function () {\n                var xd = d3Interpolate(this.x.domain(), [d.x0, d.x1]),\n                    yd = d3Interpolate(this.y.domain(), [d.y0, 1]),\n                    yr = d3Interpolate(this.y.range(), [(d.y0 ? (20) : 0), this.radius]);\n                return function (t) { this.x.domain(xd(t)); this.y.domain(yd(t)).range(yr(t)); }.bind(this);\n            }.bind(this))\n\n        transition.selectAll('path.sunburst-hidden-arc')\n            .attrTween('d', d => () => this._middleArcLine(d));\n\n        //.style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n        transition.selectAll('path.sunburst-main-arc')\n            .attrTween('d', d => () => {\n                const arc = this.arc(d)\n                return arc\n            }).on(\"end\", (e, i, a) => {\n                if (!this.arc.innerRadius()(e)) // if its not visible\n                    return\n                // get a selection of the associated text element\n                var arcText = d3Select(a[i].parentNode).select(\"text textPath\");\n                // fade in the text element and recalculate positions\n                arcText.transition(this.props.transitionDuration / 2)\n                    .attr(\"opacity\", 1)\n                    .text((d) => {\n                        const text = this._getLabelText(d)\n                        return text\n                    })\n            });\n    }\n\n    _textFits(d, label) {\n        this.props._debug && this.props._log(\"Sunburst: _textFits(d, label)\")\n\n        if (!label)\n            return false\n        // changed to degress\n        const angle = (this.arc.endAngle()(d) - this.arc.startAngle()(d)) * 57.296\n        const radius = this.arc.outerRadius()(d)\n        const arclength = 2 * Math.PI * radius * (angle / 360)\n        return label.length * this.props.font_size < arclength;\n    }\n\n    _getLabelText(d) {\n        this.props._debug && this.props._log(\"Sunburst: _getLabelText(d)\")\n        var label\n        label = this.props.labelFunc && this.props.labelFunc(d)\n        if (this._textFits(d, label))\n            return label\n        label = this.props.condensedLabelFunc && this.props.condensedLabelFunc(d)\n        if (this._textFits(d, label))\n            return label\n        return null\n    }\n\n    _middleArcLine(d) {\n        this.props._debug && this.props._log(\"Sunburst: _middleArcLine(d)\")\n        const halfPi = Math.PI / 2;\n        const angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n        const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n\n        const middleAngle = (angles[1] + angles[0]) / 2;\n        const invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n        if (invertDirection) { angles.reverse(); }\n\n        const path = d3Path();\n        path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n        return path.toString();\n    }\n\n    _inDomain(d) {\n        this.props._debug && this.props._log(\"Sunburst: _inDomain(d)\")\n        const d0 = this.x.domain()[0]\n        const d1 = this.x.domain()[1]\n        if (d.x0 < d0)\n            return false\n        if (d.x1 > d1)\n            return false\n        return true\n    }\n\n    _setTooltips() {\n\n        this.props._debug && this.props._.log(\"Sunburst: _setTooltips(d)\")\n        this.tooltipDom = d3Select(`#${this.domId}`)\n            .append('div')\n            .attr('class', 'sunburst-tooltip')\n            .style('position', 'absolute')\n            .style('z-index', '10')\n            .style('opacity', '0')\n            .style('text-align', 'center')\n            .style('border-radius', '8px')\n            //.style('max-width', '20em')\n            .style('pointer-events', 'none')\n            .style('background', 'lightsteelblue')\n            .style('padding', '3px')\n\n        const dx = this.props.tooltipX\n        const dy = this.props.tooltipY\n        this.svg.selectAll('path.sunburst-main-arc')\n            .on(\"mouseover\", function (d) {\n                if (this.props.tooltip) {\n                    this.tooltipDom.html(this.props.tooltipFunc(d.data))\n                        .style(\"left\", (d3Event.pageX + dx - 50) + \"px\")\n                        .style(\"top\", (d3Event.pageY + dy - 50) + \"px\")\n                    this.tooltipDom.transition()\n                        .style(\"opacity\", .9)\n                        .duration(200)\n\n                    this.props.onMouseover && this.props.onMouseover(d.data);\n                }\n            }.bind(this))\n            .on(\"mouseout\", function (d) {\n                this.props.tooltip && this.tooltipDom.transition()\n                    .style(\"opacity\", 0)\n                    .duration(500)\n\n                this.props.onMouseout && this.props.onMouseout(d.data);\n            }.bind(this))\n    }\n\n    _colorize(d) {\n        this.props._debug && this.props._log(\"Sunburst: _colorize(d)\")\n        let hue;\n        const current = d;\n        if (current.depth === 0) {\n            return '#33cccc';\n        }\n        const { lightness, saturation, child_brightness } = this.props\n        if (current.depth <= 1) {\n            hue = this.hueDXScale(d.x0);\n            current.fill = d3Hsl(hue, saturation, lightness);\n            return current.fill;\n        }\n        current.fill = current.parent.fill.brighter(child_brightness);\n        const thishsl = d3Hsl(current.fill);\n        hue = this.hueDXScale(current.x0);\n        const colorshift = thishsl.h + (hue / 4);\n        const c = d3Hsl(colorshift, thishsl.s, thishsl.l)\n        return c;\n        // return (this.props.colorFunc || this.props.colorFunc(d, c)) || c\n    }\n\n    // we have to render first then componentMounted will give us\n    // access to the dom\n    render() {\n        this.props._debug && this.props._log(\"Sunburst: render()\")\n        return (\n            <div className='sunburst-wrapper' id={this.domId} />\n\n        );\n    }\n}\n\nexport default Sunburst;","// CUSTOMER USING THIS RELEASE (OPTIONAL) (M)\n// Issues faced on customer side (jira - list)\n// customers to be given to\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table, Button, Input, Collapse\n    , Modal, ModalHeader, ModalBody, ModalFooter, Progress\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport AppTable from '../../../components/AppTable/AppTable';\nimport { getCurrentRelease } from '../../../reducers/release.reducer';\nimport { getTCStrategyForUISubDomains, alldomains, getTCStatusForSunburst } from '../../../reducers/release.reducer';\nimport { TABLE_OPTIONS } from '../../../constants';\nimport { Bar, Doughnut, Line, Pie, Polar, Radar } from 'react-chartjs-2';\nimport { AgGridReact } from 'ag-grid-react';\nimport axios from 'axios';\nimport { saveTestCase, saveTestCaseStatus, saveSingleTestCase } from '../../../actions';\nimport './ReleaseQAStrategy.scss'\n// import sunburst from '../../../reducers/domains.js'\nimport Sunburst from '../components/Sunburst';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { Carousel, CarouselCaption, CarouselControl, CarouselIndicators, CarouselItem } from 'reactstrap';\n\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false\n}\n\nconst data = [\n    { date: 'Dec 2019', QARateOfProgress: 5, tcTotal: 2199, tcSkipped: 11, tcNA: 0, SetupsUsed: ['autotb1', 'autotb2', 1, 2, 3, 4, 5, 6, 7, 8, 9], Engineer: ['achavan@diamanti.com', 'sushil@diamanti.com', 'nikhil@diamanti.com', 1, 2, 3, 4, 5], startdate: '1-Oct-2019', freezedate: '15-Dec-2019', upgrade: '4/21' },\n    { date: 'Nov 2019', QARateOfProgress: 10, tcTotal: 1500, tcSkipped: 0, tcNA: 0, SetupsUsed: ['autotb1', 'autotb2', 1, 2, 3, 4, 5, 6, 7], Engineer: ['achavan@diamanti.com', 'sushil@diamanti.com', 'nikhil@diamanti.com', 1, 2, 3, 4, 5], startdate: '1-Oct-2019', freezedate: '07-Dec-2019', upgrade: '0/21' },\n    { date: 'Oct 2019', QARateOfProgress: 10, tcTotal: 900, tcSkipped: 0, tcNA: 0, SetupsUsed: ['autotb5', 'auto8', 'atuo10', 1, 2], Engineer: ['achavan@diamanti.com', 'sushil@diamanti.com', 'nikhil@diamanti.com', 1, 2], startdate: '1-Oct-2019', freezedate: '1-Dec-2019', upgrade: '0/21' },\n    // { date: 'Sept 2019', QARateOfProgress: 60, tcTotal: 500, tcSkipped: 50, tcNA: 200, SetupsUsed: ['autotb1', 'autotb2'], Engineer: ['achavan@diamanti.com', 'sushil@diamanti.com', 'nikhil@diamanti.com'], startdate: '5th Nov, 2019', freezedate: '30th Nov, 2019', upgrade: [2.2, 2.2] },\n]\nclass ReleaseQAStrategy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTC: {},\n            open: {},\n            width: window.screen.availWidth > 1700 ? 500 : 380,\n            basic: { editOptions: [TABLE_OPTIONS.EDIT], editing: false, updated: {}, open: false },\n            qaStrategy: { editOptions: [TABLE_OPTIONS.EDIT], editing: false, updated: {}, open: false, collapseOpen: { SetupsUsed: false, Engineers: false } },\n            domainSelected: false,\n            items: []\n        }\n    }\n    componentDidMount() {\n    }\n    toggle = () => this.setState({ modal: !this.state.modal });\n    save() {\n        let data = { ...this.state.addTC };\n        let dates = [\n            'TargetedReleaseDate', 'ActualReleaseDate', 'TargetedCodeFreezeDate',\n            'UpgradeTestingStartDate', 'QAStartDate', 'ActualCodeFreezeDate', 'TargetedQAStartDate'\n        ]\n        let formattedDates = {};\n        dates.forEach(item => {\n            if (data[item]) {\n                let date = new Date(data[item]);\n                formattedDates[item] = date.toISOString()\n            }\n        })\n        data = { ...data, ...formattedDates };\n        data.Domain = this.state.domainSelected;\n        console.log('saved data ', data);\n        axios.post(`/api/tcinfo/${this.props.selectedRelease.ReleaseNumber}`, { ...data })\n            .then(res => {\n                this.getTcs();\n                this.setState({ addTC: {} });\n            }, error => {\n                alert('error in updating');\n            });\n        if (this.state.modal) {\n            this.toggle();\n        }\n    }\n    confirmToggle() {\n        let data = { ...this.state.addTC }\n        if (!data || (data && !data.TcID) || !this.state.domainSelected) {\n            alert('Please Add Tc ID or Domain');\n            return;\n        }\n        this.toggle();\n    }\n    render() {\n        return (\n            <div>\n                {\n                    this.props.selectedRelease && this.props.selectedRelease.ReleaseNumber !== '2.3.0' &&\n                    <div style={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%'\n                    }}>\n                        NO RECORDS AVAILABLE\n                    </div>\n                }\n                {\n                    this.props.selectedRelease && this.props.selectedRelease.ReleaseNumber === '2.3.0' &&\n                \n                <Row>\n                    {/* <Col xs=\"11\" sm=\"11\" md=\"6\" lg=\"3\" className=\"rp-summary-tables\">\n                        <div className='rp-app-table-header'>\n                            <span className='rp-app-table-title'>Dec 2019</span>\n                        </div>\n                        <Table scroll responsive style={{ overflow: 'scroll', }}>\n                            <tbody>\n                                {\n                                    [\n                                        { key: 'Expected rate of Progress per week', field: 'QARateOfProgress', value: this.props.selectedRelease.QARateOfProgress ? this.props.selectedRelease.QARateOfProgress : 0 },\n                                        { key: 'Test Cases', restrictEdit: true, field: 'run', value: this.props.tcStrategy ? this.props.tcStrategy.totalTests : 0 },\n                                        { key: 'Test Cases Skipped', restrictEdit: true, field: 'skip', value: this.props.tcStrategy ? this.props.tcStrategy.skipped : 0 },\n                                        { key: 'Test Cases Not Applicable', restrictEdit: true, field: 'na', value: this.props.tcStrategy ? this.props.tcStrategy.notApplicable : 0 },\n\n                                        { key: 'Setups Used', restrictEdit: true, field: 'SetupsUsed', value: this.props.selectedRelease.SetupsUsed ? this.props.selectedRelease.SetupsUsed.length : 0 },\n                                        { key: 'Engineers', field: 'Engineers', value: this.props.selectedRelease.Engineers ? this.props.selectedRelease.Engineers : 0 },\n                                        { key: 'QA Start Date', field: 'QAStartDate', value: this.props.selectedRelease.QAStartDate, type: 'date' },\n                                        { key: 'Target Code Freeze Date', field: 'TargetedCodeFreezeDate', value: this.props.selectedRelease.TargetedCodeFreezeDate, type: 'date' },\n                                        { key: 'Upgrade Metrics Count', restrictEdit: true, field: 'UpgradeMetrics', value: this.props.selectedRelease.UpgradeMetrics ? this.props.selectedRelease.UpgradeMetrics.length : '' },\n\n                                    ].map((item, index) => {\n                                        return (\n                                            <tr>\n                                                <React.Fragment>\n\n                                                    <td className='rp-app-table-key'>{item.key}</td>\n                                                    <td>\n                                                        {item.value}\n                                                        {\n                                                            item.field === 'QARateOfProgress' && <span>%</span>\n                                                        }\n                                                        {\n                                                            item.field === 'QARateOfProgress' &&\n                                                            <div>\n                                                                <div className=\"progress-group\">\n                                                                    <div className=\"progress-group-bars\">\n                                                                        <Progress className=\"progress-xs\" color=\"warning\" value={this.props.selectedRelease[item.field]} />\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        }\n\n\n                                                    </td>\n                                                </React.Fragment>\n\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </Table>\n                    </Col> */}\n                    {\n                        data.map((each, i) =>\n                            <Col xs=\"11\" sm=\"11\" md=\"6\" lg=\"3\" className=\"rp-summary-tables\">\n                                <div className='rp-app-table-header'>\n                                    <div className='rp-icon-button'><i className=\"fa fa-cogs\"></i></div><span className='rp-app-table-title'>{each.date}</span>\n                                </div>\n\n                                <Table scroll responsive style={{ overflow: 'scroll', }}>\n                                    <tbody>\n                                        {\n                                            [\n                                                // { key: 'Expected rate of Progress per week', field: 'QARateOfProgress', value: each.QARateOfProgress },\n                                                { key: 'Test Cases Run', restrictEdit: true, field: 'run', value: each.tcTotal },\n                                                { key: 'Test Cases Skipped', restrictEdit: true, field: 'skip', value: each.tcSkipped },\n                                                { key: 'Test Cases Not Applicable', restrictEdit: true, field: 'na', value: each.tcNA },\n\n                                                { key: 'Setups Used', restrictEdit: true, field: 'SetupsUsed', value: each.SetupsUsed.length },\n                                                { key: 'Engineers', field: 'Engineers', value: each.Engineer.length },\n                                                { key: 'QA Start Date', field: 'QAStartDate', value: each.startdate },\n                                                { key: 'Target Code Freeze Date', field: 'TargetedCodeFreezeDate', value: each.freezedate },\n                                                { key: 'Upgrade Metrics Count', restrictEdit: true, field: 'UpgradeMetrics', value: each.upgrade },\n\n                                            ].map((item, index) => {\n                                                return (\n                                                    <tr>\n                                                        <React.Fragment>\n\n                                                            <td className='rp-app-table-key'>{item.key}</td>\n\n                                                            <td>{item.value}\n                                                                {\n                                                                    item.field === 'QARateOfProgress' && <span>%</span>\n                                                                }\n                                                                {\n                                                                    item.field === 'QARateOfProgress' &&\n                                                                    <div>\n                                                                        <div className=\"progress-group\">\n                                                                            <div className=\"progress-group-bars\">\n                                                                                <Progress className=\"progress-xs\" color=\"warning\" value={this.props.selectedRelease[item.field]} />\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                }\n                                                            </td>\n                                                        </React.Fragment>\n\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                                {/* {\n                                    !this.state.open[each.date] &&\n                                    <div style={{ textAlign: 'center' }}>\n                                        <i className=\"fa fa-angle-down rp-rs-down-arrow\" onClick={() => this.setState({ open: { ...this.state.open, [each.date]: !this.state.open[each.date] } })}></i>\n                                    </div>\n                                }\n                                {\n                                    this.state.open[each.date] &&\n                                    <div style={{ textAlign: 'center' }}>\n                                        <i className=\"fa fa-angle-up rp-rs-down-arrow\" onClick={() => this.setState({ open: { ...this.state.open, [each.date]: !this.state.open[each.date] } })}></i>\n                                    </div>\n                                } */}\n                            </Col>\n                        )\n\n                    }\n                </Row>\n                }\n\n                <Modal isOpen={this.state.modal} toggle={() => this.toggle()}>\n                    <ModalHeader toggle={() => this.toggle()}>Confirmation</ModalHeader>\n                    <ModalBody>\n                        Are you sure you want to make the changes?\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={() => this.save()}>Ok</Button>{' '}\n                        <Button color=\"secondary\" onClick={() => this.toggle()}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div >\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    currentUser: state.auth.currentUser,\n    selectedRelease: getCurrentRelease(state, state.release.current.id),\n    selectedTC: state.testcase.all[state.release.current.id],\n})\nexport default connect(mapStateToProps, { saveTestCase, saveTestCaseStatus })(ReleaseQAStrategy);\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}