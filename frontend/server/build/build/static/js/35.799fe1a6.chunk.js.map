{"version":3,"sources":["components/TestCasesAll/CheckBox.js","views/Release/e2eResult/E2EResultUpdate.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","CheckBox","props","a","createElement","key","id","onClick","handleCheckChieldElement","type","checked","isChecked","value","UpdateE2EResult","_this","Object","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","getPlatform","e","releaseInfoURL","state","release","platform","axios","get","then","res","data","forEach","item","push","setState","platforms","disable","error","handleSubmit","save","zip","JSZip","FormData","file","name","generateAsync","compression","compressionOptions","level","content","append","post","concat","currentUser","email","response","output","reset","catch","err","console","log","handleChange","files","target","t","Math","random","toString","split","temp","File","Date","getTime","errors","allReleases1","_this2","rel","ReleaseNumber","_this3","sort","react__WEBPACK_IMPORTED_MODULE_6___default","isExe","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","sm","md","lg","className","style","margin-left","cursor","Open","class","display","reactstrap__WEBPACK_IMPORTED_MODULE_9__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_12__","borderColor","_home_diamanti_release_portal_frontend_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","map","reactstrap__WEBPACK_IMPORTED_MODULE_13__","outline","color","disabled","keys","margin-top","Component","connect","ownProps","auth","allUsers","user","users","selectedRelease","getCurrentRelease","current","saveUsers"],"mappings":"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","file":"static/js/35.799fe1a6.chunk.js","sourcesContent":["import React from 'react'\n\nexport const CheckBox = props => {\n    return (\n        <li>\n          <input key={props.id} onClick={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n        </li>\n    )\n}\n\nexport default CheckBox;","import React, {Component} from 'react';\nimport {\n    Row, Col, Button, Collapse, Form, FormGroup, Label, Input, FormText\n} from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { saveUsers } from '../../../actions';\nimport { getCurrentRelease } from '../../../reducers/release.reducer';\nimport JSZip from 'jszip';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport { element } from 'prop-types';\nimport  CheckBox  from '../../../components/TestCasesAll/CheckBox';\nlet form = {}\nclass UpdateE2EResult extends Component {\n    constructor(){\n        super();\n        this.state = {\n            output : {},\n            errors: {},\n            release: '',\n            allReleases1: [],\n            platform: '',\n            save: false,\n            file:null,\n            platforms: [],\n            disable: true\n        }\n    }\n    componentDidMount() {\n        let releaseInfoURL = `/api/release/infoAsc`;\n        let rel = []\n          axios.get(releaseInfoURL)\n            .then(res => {\n              res.data.forEach(item => {\n                rel.push(item.ReleaseNumber)\n              });\n              this.setState({allReleases1:rel})\n            }, error => {\n            });\n      }\n    getPlatform = (e) => {\n        let releaseInfoURL = `/api/releasewiseplatformCli/`+this.state.release;\n        let platform = []\n          axios.get(releaseInfoURL)\n            .then(res => {\n              res.data.forEach(item => {\n                platform.push(item)\n              });\n              this.setState({platforms:platform,disable:false})\n            }, error => {\n            });\n    }\n    handleSubmit = (e) => {\n        this.setState({\n            save : true, disable:true\n        })\n        var zip = new JSZip();\n        const data = new FormData()\n        zip.file(this.state.file.name, this.state.file)\n        //  const data = new FormData()\n        //  data.append('file',this.state.file)\n        let req = {\n            release:this.state.release,\n            platform:this.state.platform\n        }\n        zip.generateAsync({type: \"blob\", compression: \"DEFLATE\",compressionOptions: {\n           level: 9,\n       }}).then(content => {data.append('file', content);\n            axios.post(`/api/execute/${this.state.release}/${this.state.platform}/${this.state.file.name}/${this.props.currentUser.email}`,data)\n                .then(response=>{\n                this.setState({output:response.data})\n                this.reset();\n            })\n            .catch(err=>{\n                console.log(\"err\",err);\n            })\n        })\n    }\n\n    reset = () =>{\n        this.setState({release:'', platform: '',platforms: []})\n    }\n    handleChange =(e) => {\n        const files = e.target.files;\n        if (files && files[0]) {\n            let t = Math.random().toString().split(\".\")[1]\n            let temp = new File([files[0]],files[0].name + (new Date().getTime()).toString() + t,{type:files[0].type})\n            this.setState({ file: temp});\n        }\n      };\n\n    render() {\n        if(this.state.platforms){\n            this.state.platforms.sort()\n        }\n        return(\n            <div>\n            {\n                this.props.currentUser && !this.props.currentUser.isExe &&\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                        <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => this.setState({ Open: !this.state.Open })}>\n                            <div class=\"row\">\n                                {/* <div class='col-lg-12'> */}\n                                    <div style={{ display: 'flex' }}>\n                                        <div style={{ display: 'inlineBlock' }}>\n                                            {\n                                                !this.state.Open &&\n                                                <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                            }\n                                            {\n                                                this.state.Open &&\n                                                <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                            }\n                                            <div className='rp-icon-button'><i className=\"fa fa-leaf\"></i></div>\n                                            <span className='rp-app-table-title'>E2E Result Updation</span>\n                                        </div>\n                                    </div>\n                                {/* </div> */}\n                            </div>\n                        </div>\n                        <Collapse isOpen={true}>\n                            {\n                                this.state.allReleases1 &&\n                            <div>\n                                <Form>\n                                <Row xs=\"6\" md=\"3\" lg=\"3\">\n                                        <FormGroup className='rp-app-table-value'>\n                                                {/* <Label className='rp-app-table-label' htmlFor=\"UserRole\">\n                                                    User Role\n                                                </Label> */}\n                                                <div>\n                                                   <Col>\n                                                    <input type=\"file\" id=\"file\" onChange={this.handleChange} />\n                                                    </Col>\n                                                    {/* <Button outline color=\"success\" id = 'Upload file' onClick={this.handleSubmit} > Upload File </Button> */}\n                                                </div>\n                                        </FormGroup>\n                                   </Row>\n\n                                    <Col xs=\"6\" md=\"3\" lg=\"3\">\n                                        <FormGroup className='rp-app-table-value'>\n                                                {/* <Label className='rp-app-table-label' htmlFor=\"UserRole\">\n                                                    User Role\n                                                </Label> */}\n                                                <Row xs=\"6\" md=\"3\" lg=\"3\">\n                                                    {\n                                                            <Input style={{ borderColor: this.state.errors['release'] ? 'red' : '' }} className='rp-app-table-value' type=\"select\" id=\"release\" name=\"release\" value={this.state.release}\n                                                                onChange={(e) => this.setState({ release: e.target.value , errors: { ...this.state.errors, release: null }},() => {this.getPlatform();this.setState({output:''})})} >\n                                                                <option value=''>Select Release</option>\n                                                                {\n                                                                    this.state.allReleases1.map(item => <option value={item}>{item}</option>)\n                                                                }\n                                                            </Input>\n                                                    }\n                                                </Row>\n                                        </FormGroup>\n                                   </Col>\n                                    <Col xs=\"6\" md=\"3\" lg=\"3\">\n                                    <FormGroup className='rp-app-table-value'>\n                                        <Row xs=\"10\" md=\"10\" lg=\"10\">\n                                            {\n                                                    <Input style={{ borderColor: this.state.errors['platform'] ? 'red' : '' }} className='rp-app-table-value' type=\"select\" id=\"platform\" name=\"platform\" value={this.state.platform}\n                                                        onChange={(e) => this.setState({ platform: e.target.value , errors: { ...this.state.errors, platform: null } })} >\n                                                        <option value=''>Select Platform</option>\n                                                        {\n                                                            this.state.platforms.map(item => <option value={item}>{item}</option>)\n                                                        }\n                                                    </Input>\n                                            }\n                                        </Row>\n                                        </FormGroup>\n                                    </Col>\n                                    <Button outline color=\"success\" id = 'submit' disabled={this.state.disable} onClick={this.handleSubmit} > Submit </Button>\n                                </Form>\n                                <div>\n                                    {\n                                        this.state.output.output ?\n                                        <div>\n                                            <ul>\n                                                {Object.keys(this.state.output).map((key, value) => <li key={value}>{key} : {this.state.output[key]}</li>)}\n                                            </ul>\n                                        </div>\n                                        :null\n                                    }\n\n                                </div>\n                            </div>\n                        }\n                        </Collapse>\n                    </Col>\n                </Row>\n            }\n            {\n            this.props.currentUser && this.props.currentUser.isExe &&\n                <div class=\"container\" style={{ 'margin-top': '1rem' }}>\n                    <h5>You are not allowed to view this page.</h5>\n                </div>\n            }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    currentUser: state.auth.currentUser,\n    allUsers: state.user.users,\n    selectedRelease: getCurrentRelease(state, state.release.current.id),\n}\n)\n\nexport default connect(mapStateToProps, { saveUsers, getCurrentRelease })(UpdateE2EResult);"],"sourceRoot":""}