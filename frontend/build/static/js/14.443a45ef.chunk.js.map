{"version":3,"sources":["../node_modules/d3-selection/src/index.js","../node_modules/reactstrap/es/Button.js","../node_modules/d3-selection/src/point.js","../node_modules/d3-shape/src/index.js","components/AppTable/AppTable.js","../node_modules/reactstrap/es/Collapse.js","../node_modules/reactstrap/es/Table.js","../node_modules/shallowequal/index.js","../node_modules/d3-hierarchy/src/treemap/round.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/partition.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","views/Release/components/Sunburst.js","../node_modules/d3-selection/src/touch.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/mouse.js","../node_modules/d3/node_modules/d3-array/src/ascending.js","../node_modules/d3/node_modules/d3-array/src/bisect.js","../node_modules/d3/node_modules/d3-array/src/bisector.js","../node_modules/d3/node_modules/d3-array/src/cross.js","../node_modules/d3/node_modules/d3-array/src/array.js","../node_modules/d3/node_modules/d3-array/src/ticks.js","../node_modules/d3-axis/src/array.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-chord/node_modules/d3-array/src/ascending.js","../node_modules/d3-chord/node_modules/d3-array/src/bisect.js","../node_modules/d3-chord/node_modules/d3-array/src/bisector.js","../node_modules/d3-chord/node_modules/d3-array/src/cross.js","../node_modules/d3-chord/node_modules/d3-array/src/array.js","../node_modules/d3-chord/node_modules/d3-array/src/ticks.js","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-contour/node_modules/d3-array/src/ascending.js","../node_modules/d3-contour/node_modules/d3-array/src/bisect.js","../node_modules/d3-contour/node_modules/d3-array/src/bisector.js","../node_modules/d3-contour/node_modules/d3-array/src/cross.js","../node_modules/d3-contour/node_modules/d3-array/src/array.js","../node_modules/d3-contour/node_modules/d3-array/src/ticks.js","../node_modules/d3-contour/src/array.js","../node_modules/d3-fetch/src/buffer.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-fetch/src/xml.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-random/src/defaultSource.js","../node_modules/d3-random/src/normal.js","../node_modules/d3-random/src/uniform.js","../node_modules/d3-random/src/irwinHall.js","../node_modules/d3-random/src/logNormal.js","../node_modules/d3-random/src/bates.js","../node_modules/d3-random/src/exponential.js","../node_modules/d3-voronoi/src/RedBlackTree.js","../node_modules/d3-voronoi/src/Edge.js","../node_modules/d3-voronoi/src/Cell.js","../node_modules/d3-voronoi/src/Circle.js","../node_modules/d3-voronoi/src/Beach.js","../node_modules/d3-voronoi/src/Diagram.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3-zoom/src/zoom.js","views/Release/components/sunburst.model.js","views/Release/components/SunburstComponent.js","views/Release/ReleaseTestCase/ReleaseTestCase.js"],"names":["_select__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","active","a","bool","aria-label","string","block","color","disabled","outline","tag","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","call","this","bind","Object","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","createElement","aria-hidden","btnOutlineColor","classes","href","defaultAriaLabel","type","undefined","ref","Component","defaultProps","event","svg","ownerSVGElement","createSVGPoint","point","x","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop","_arc_js__WEBPACK_IMPORTED_MODULE_0__","_transitionStatusToCl","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","prop_types__WEBPACK_IMPORTED_MODULE_6__","prop_types__WEBPACK_IMPORTED_MODULE_6___default","classnames__WEBPACK_IMPORTED_MODULE_7__","classnames__WEBPACK_IMPORTED_MODULE_7___default","react_transition_group__WEBPACK_IMPORTED_MODULE_8__","_utils__WEBPACK_IMPORTED_MODULE_9__","isOpen","arrayOf","navbar","appear","enter","exit","timeout","Collapse","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","state","height","forEach","name","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","_this2","otherProps","transitionProps","childProps","in","status","collapseClass","getTransitionClass","style","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","bordered","borderless","striped","dark","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName","module","exports","objA","objB","compare","compareContext","ret","keysA","keys","keysB","length","bHasOwnProperty","hasOwnProperty","idx","key","valueA","valueB","treemap_round","x0","Math","round","y0","x1","y1","dice","parent","nodes","i","k","value","src_partition","dx","dy","padding","partition","root","eachBefore","depth","positionNode","arguments","count","sum","hierarchy","data","child","childs","Node","valued","defaultChildren","pop","Array","push","computeHeight","copyData","constructor","eachAfter","each","callback","current","next","reverse","sort","path","end","start","ancestor","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","splice","descendants","leaves","links","source","target","copy","Sunburst","classCallCheck","possibleConstructorReturn","getPrototypeOf","console","log","_last_click","radius","min","width","d3ScaleSqrt","range","d3ScaleLinear","PI","arc","d3Arc","startAngle","max","endAngle","innerRadius","outerRadius","d3Partition","hueDXScale","domain","domId","random","toString","tooltipDom","lastSelect","_debug","_log","_create","nextProps","shallowEqual","selectAll","remove","_destroy_svg","id","d3Select","__data__","_update","_warn","concat","_colorize","_this3","d3Hierarchy","count_member","filter","radianCutoff","w","h","el","append","attr","gSlices","key_member","cursor","evenodd","on","_onClick","act","labelFunc","_","_middleArcLine","text","_getLabelText","tooltip","_setTooltips","_this4","transition","duration","transitionDuration","tween","xd","d3Interpolate","yd","yr","t","attrTween","parentNode","select","label","angle","arclength","font_size","_textFits","condensedLabelFunc","halfPi","angles","r","middleAngle","invertDirection","d3Path","d0","d1","tooltipX","tooltipY","html","tooltipFunc","d3Event","pageX","pageY","onMouseover","onMouseout","hue","lightness","saturation","child_brightness","fill","d3Hsl","brighter","thishsl","colorshift","s","l","react_default","React","colorFunc","current_color","warn","_sourceEvent__WEBPACK_IMPORTED_MODULE_0__","_point__WEBPACK_IMPORTED_MODULE_1__","touches","identifier","changedTouches","touch","_selection_on__WEBPACK_IMPORTED_MODULE_0__","sourceEvent","ascending","NaN","ascendingBisect","f","lo","hi","mid","right","bisector","array_array","slice","map","sqrt","number1","number2","brush_type","src_ascending","bisect_ascendingBisect","src_bisector","src_array_array","cos","sin","d3_array_src_ascending","src_bisect_ascendingBisect","d3_array_src_bisector","d3_array_src_array_array","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","join","inferColumns","rows","columnSet","create","row","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","N","I","eof","eol","token","j","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","customConverter","format","formatBody","formatRows","csv","csvParse","tsv","tsvParse","responseText","response","ok","Error","statusText","src_text","input","init","fetch","then","dsvParse","parser","DOMParser","parseFromString","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x0","_y0","_x1","_y1","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","add","cover","xz","yz","Infinity","floor","z","visit","extent","find","x2","y2","q","x3","y3","quads","d2","retainer","previous","removeAll","visitAfter","src_defaultSource","normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","apply","exp","sourceRandomIrwinHall","randomIrwinHall","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","lambda","RedBlackTree","RedBlackNode","U","C","L","R","P","RedBlackRotateLeft","p","RedBlackRotateRight","RedBlackFirst","insert","after","grandpa","uncle","sibling","red","src_RedBlackTree","createEdge","v0","v1","edge","index","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","t0","t1","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","atan2","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","cy","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","cx","epsilon2","ha","hc","circle","before","circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","abs","Diagram_epsilon","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","m","array","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v00","v01","v11","v10","clipCells","edges","polygons","polygon","triangles","s0","e1","s1","i0","that","i1","_found","v","vx","vy","v2","SQRT2","Transform","scale","translate","applyX","applyY","invert","location","invertX","invertY","rescaleX","rescaleY","complementaryColors","oppositeColors","arcGenerator","expander","collapser","options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","loading","ReleaseTestCase","toggle","modal","svgKey","selected","metricsOpen","addTC","open","window","screen","availWidth","doughnuts","getTCStatusForUIDomains","selectedRelease","qaStrategy","domainSelected","domains","getTCStatusForSunburst","tcSummaryTitleStyle","position","textAlign","fontSize","fontWeight","axios","get","ReleaseNumber","res","saveTestCase","error","objectSpread","formattedDates","item","toISOString","Domain","post","getTcs","alert","TcID","alldomains","includes","getTCStatusForUISubDomains","rule","_this5","Row","Col","xs","sm","md","lg","marginLeft","class","Fragment","marginTop","sunburstClick","minHeight","react_chartjs_2_es","title","margin","datasets","Modal","ModalHeader","ModalBody","ModalFooter","save","connect","ownProps","currentUser","auth","getCurrentRelease","release","selectedTC","testcase","all","saveTestCaseStatus","saveSingleTestCase"],"mappings":"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","file":"static/js/14.443a45ef.chunk.js","sourcesContent":["export { default as create } from \"./create\";\nexport { default as creator } from \"./creator\";\nexport { default as local } from \"./local\";\nexport { default as matcher } from \"./matcher\";\nexport { default as mouse } from \"./mouse\";\nexport { default as namespace } from \"./namespace\";\nexport { default as namespaces } from \"./namespaces\";\nexport { default as clientPoint } from \"./point\";\nexport { default as select } from \"./select\";\nexport { default as selectAll } from \"./selectAll\";\nexport { default as selection } from \"./selection/index\";\nexport { default as selector } from \"./selector\";\nexport { default as selectorAll } from \"./selectorAll\";\nexport { styleValue as style } from \"./selection/style\";\nexport { default as touch } from \"./touch\";\nexport { default as touches } from \"./touches\";\nexport { default as window } from \"./window\";\nexport { event, customEvent } from \"./selection/on\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","export default function (node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}","export { default as arc } from \"./arc.js\";\nexport { default as area } from \"./area.js\";\nexport { default as line } from \"./line.js\";\nexport { default as pie } from \"./pie.js\";\nexport { default as areaRadial, default as radialArea } from \"./areaRadial.js\"; // Note: radialArea is deprecated!\n\nexport { default as lineRadial, default as radialLine } from \"./lineRadial.js\"; // Note: radialLine is deprecated!\n\nexport { default as pointRadial } from \"./pointRadial.js\";\nexport { linkHorizontal, linkVertical, linkRadial } from \"./link/index.js\";\nexport { default as symbol, symbols } from \"./symbol.js\";\nexport { default as symbolCircle } from \"./symbol/circle.js\";\nexport { default as symbolCross } from \"./symbol/cross.js\";\nexport { default as symbolDiamond } from \"./symbol/diamond.js\";\nexport { default as symbolSquare } from \"./symbol/square.js\";\nexport { default as symbolStar } from \"./symbol/star.js\";\nexport { default as symbolTriangle } from \"./symbol/triangle.js\";\nexport { default as symbolWye } from \"./symbol/wye.js\";\nexport { default as curveBasisClosed } from \"./curve/basisClosed.js\";\nexport { default as curveBasisOpen } from \"./curve/basisOpen.js\";\nexport { default as curveBasis } from \"./curve/basis.js\";\nexport { default as curveBundle } from \"./curve/bundle.js\";\nexport { default as curveCardinalClosed } from \"./curve/cardinalClosed.js\";\nexport { default as curveCardinalOpen } from \"./curve/cardinalOpen.js\";\nexport { default as curveCardinal } from \"./curve/cardinal.js\";\nexport { default as curveCatmullRomClosed } from \"./curve/catmullRomClosed.js\";\nexport { default as curveCatmullRomOpen } from \"./curve/catmullRomOpen.js\";\nexport { default as curveCatmullRom } from \"./curve/catmullRom.js\";\nexport { default as curveLinearClosed } from \"./curve/linearClosed.js\";\nexport { default as curveLinear } from \"./curve/linear.js\";\nexport { monotoneX as curveMonotoneX, monotoneY as curveMonotoneY } from \"./curve/monotone.js\";\nexport { default as curveNatural } from \"./curve/natural.js\";\nexport { default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore } from \"./curve/step.js\";\nexport { default as stack } from \"./stack.js\";\nexport { default as stackOffsetExpand } from \"./offset/expand.js\";\nexport { default as stackOffsetDiverging } from \"./offset/diverging.js\";\nexport { default as stackOffsetNone } from \"./offset/none.js\";\nexport { default as stackOffsetSilhouette } from \"./offset/silhouette.js\";\nexport { default as stackOffsetWiggle } from \"./offset/wiggle.js\";\nexport { default as stackOrderAppearance } from \"./order/appearance.js\";\nexport { default as stackOrderAscending } from \"./order/ascending.js\";\nexport { default as stackOrderDescending } from \"./order/descending.js\";\nexport { default as stackOrderInsideOut } from \"./order/insideOut.js\";\nexport { default as stackOrderNone } from \"./order/none.js\";\nexport { default as stackOrderReverse } from \"./order/reverse.js\";","// CUSTOMER USING THIS RELEASE (OPTIONAL) (M)\n// Issues faced on customer side (jira - list)\n// customers to be given to\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport {\n    Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table, Button,\n    Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, Label\n} from 'reactstrap';\nimport './AppTable.scss';\nimport { TABLE_OPTIONS } from '../../constants';\nclass AppTable extends Component {\n    cntr = 0;\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n            edit: {},\n            delete: {},\n            add: [],\n            addTC: {}\n        }\n    }\n    updateTC = () => {\n\n    }\n    reset() {\n        this.setState({\n            isEditing: false,\n            edit: {},\n            delete: {},\n            add: [],\n            addTC: {}\n        });\n    }\n    toggle = () => this.setState({ modal: !this.state.modal });\n    add = () => {\n        let newItem = {};\n        this.props.fieldAndHeader.forEach(item => { newItem[item.field] = '' });\n        this.setState({ add: [...this.state.add, newItem] });\n    }\n\n    update = () => {\n        let edited = {};\n        Object.keys(this.state.edit).forEach(index => {\n            if (this.state.edit[index]) {\n                edited[index] = { old: this.props.data[index], new: this.state.edit[index] };\n            }\n        });\n        let deleted = {};\n        Object.keys(this.state.delete).forEach(index => {\n            if (this.state.delete[index]) {\n                deleted[index] = { old: this.props.data[index] };\n            }\n        });\n\n        this.props.onUpdate({\n            edit: edited, delete: deleted, add: this.state.add.filter(item => item)\n        })\n        this.toggle();\n    }\n    componentWillReceiveProps(newProps) {\n        this.reset();\n    }\n    addOnTop = () => {\n        return (\n            this.state.isEditing &&\n            this.state.add.map((row, rowIndex) => (\n                row &&\n                <tr>\n                    {\n                        this.props.fieldAndHeader.map((col) =>\n                            <td>\n                                <Input type={col.type} key={rowIndex}\n                                    onChange={(e) => {\n                                        let currentState = this.state.add;\n                                        currentState[rowIndex][col.field] = e.target.value;\n                                        this.setState({ add: [...currentState] })\n                                    }}\n                                    value={row[col.field]}\n                                    placeholder={row[col.field]} />\n                            </td>)\n                    }\n\n                    <td style={{ padding: '0.4rem' }}>\n                        <Row>\n                            <Col xs=\"12\" md=\"12\" lg=\"12\">\n                                <span style={{ color: 'green' }}>Added</span>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs=\"12\" md=\"12\" lg=\"12\">\n                                {\n                                    <Button size=\"md\" color=\"trsaparent\" onClick={() => {\n                                        let currentState = this.state;\n                                        if (currentState.add[rowIndex]) {\n                                            currentState.add[rowIndex] = null;\n                                        }\n                                        this.setState({ ...currentState });\n                                    }}><i className=\"fa fa-undo\"></i></Button>\n                                }\n\n                            </Col>\n                        </Row>\n                    </td>\n                </tr>\n            ))\n        )\n    }\n    render() {\n        return (\n            <div>\n\n                {\n                    !this.props.titleless &&\n                    <div className='rp-app-table-header'>\n                        <span className='rp-app-table-title'>{this.props.title}</span>\n\n                        {\n                            this.props.currentUser && this.props.currentUser.isAdmin && this.props.editOptions && this.props.editOptions.length ?\n                                this.state.isEditing ?\n                                    <Fragment>\n                                        <Button title=\"Save\" size=\"md\" color=\"transparent\" className=\"float-right rp-rb-save-btn\" onClick={() => this.toggle()} >\n                                            <i className=\"fa fa-check-square-o\"></i>\n                                        </Button>\n                                        <Button size=\"md\" color=\"transparent\" className=\"float-right\" onClick={() => this.reset()} >\n                                            <i className=\"fa fa-undo\"></i>\n                                        </Button>\n                                        {\n                                            this.props.editOptions.length && this.props.editOptions.includes(TABLE_OPTIONS.ADD) && this.state.isEditing &&\n                                            <Button size=\"md\" color=\"transparent\" className=\"float-right\" onClick={() => this.add()} >\n                                                <i className=\"fa fa-plus-square-o\"></i>\n                                            </Button>\n                                        }\n                                    </Fragment>\n                                    :\n                                    <Button size=\"md\" color=\"transparent\" className=\"float-right\" onClick={() => this.setState({ isEditing: true })} >\n                                        <i className=\"fa fa-pencil-square-o\"></i>\n                                    </Button>\n                                : null\n                        }\n                    </div>\n                }\n                {\n                    this.props.addTestCase &&\n                    <div>\n                        {\n                            this.props.fieldAndHeader.map((item, index) =>\n                                <Input\n                                    type=\"text\"\n                                    key={index}\n                                    onChange={(e) => this.setState({ addTC: { ...this.state.addTC, [item.field]: e.target.value } })}\n                                    placeholder={'Add ' + item.header}\n                                    value={this.state.addTC[item.field] ? this.state.addTC[item.field] : item.header}\n                                />)\n                        }\n\n                    </div>\n                }\n\n\n                <div className={this.props.restrictHeight}>\n\n\n                    <Table scroll responsive style={{ overflow: 'scroll', }}>\n                        {\n                            !this.props.headless &&\n                            <thead>\n                                <tr>\n                                    {\n                                        this.props.fieldAndHeader.map(item => <th>{item.header}</th>)\n                                    }\n                                    {\n                                        this.state.isEditing &&\n                                        <th>Actions</th>\n                                    }\n                                </tr>\n                            </thead>\n                        }\n                        <tbody>\n                            {\n                                this.props.addOnTop &&\n                                this.addOnTop()\n                            }\n                            {\n                                this.props.data && this.props.data.map((row, rowIndex) => {\n                                    return (\n                                        <tr>\n                                            {\n                                                row &&\n                                                (\n                                                    this.props.fieldAndHeader.map((col, colIndex) =>\n                                                        (this.props.editOptions && this.props.editOptions.includes(TABLE_OPTIONS.EDIT) && this.state.isEditing && !this.state.delete[rowIndex] && !col.restrictUpdate\n                                                            && !(this.props.restrictRowIndexForUpdate && this.props.restrictRowIndexForUpdate.includes(rowIndex))\n                                                        ) ?\n                                                            <td>\n                                                                <Input\n                                                                    className={col.field === 'key' ? 'rp-app-table-key' : ''}\n                                                                    type={this.props.exceptionTypeForRowIndex && this.props.exceptionTypeForRowIndex[rowIndex] ? this.props.exceptionTypeForRowIndex[rowIndex] : col.type}\n                                                                    key={rowIndex + colIndex}\n                                                                    onChange={(e) => this.setState({ edit: { ...this.state.edit, [rowIndex]: { ...row, [col.field]: e.target.value } } })}\n                                                                    placeholder={row[col.field]}\n                                                                    value={this.state.edit[rowIndex] ? this.state.edit[rowIndex][col.field] : row[col.field]}\n                                                                />\n                                                            </td> :\n                                                            <td className={col.field === 'key' ? 'rp-app-table-key' : ''}>{row[col.field]}</td>)\n                                                )\n                                            }\n                                            {\n                                                this.state.isEditing &&\n                                                <td style={{ padding: '0.4rem' }}>\n                                                    <Row>\n                                                        <Col xs=\"12\" md=\"12\" lg=\"12\">\n                                                            <Row>\n                                                                <Col xs=\"12\" md=\"12\" lg=\"12\">\n                                                                    {\n                                                                        this.state.edit[rowIndex] && <span style={{ color: 'blue', float: 'left', marginTop: '0.3rem' }}>Edited</span>\n                                                                    }\n                                                                    {\n                                                                        this.state.delete[rowIndex] && this.props.editOptions.includes(TABLE_OPTIONS.DELETE) &&\n                                                                        <span style={{ color: 'red', float: 'left', marginTop: '0.3rem' }}>\n                                                                            Deleted\n                                                            </span>\n                                                                    }\n\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col xs=\"12\" md=\"12\" lg=\"12\">\n                                                                    {\n                                                                        (this.state.edit[rowIndex] || this.state.delete[rowIndex]) ?\n                                                                            <Button size=\"md\" color=\"transparent\" className=\"float-right\" onClick={() => {\n                                                                                let currentState = this.state;\n                                                                                if (currentState.edit[rowIndex]) {\n                                                                                    currentState.edit[rowIndex] = null;\n                                                                                }\n                                                                                if (currentState.delete[rowIndex]) {\n                                                                                    currentState.delete[rowIndex] = null;\n                                                                                }\n                                                                                this.setState({ ...currentState });\n                                                                            }}> <i className=\"fa fa-undo\"></i></Button> :\n                                                                            this.props.editOptions.includes(TABLE_OPTIONS.DELETE) &&\n                                                                            <Button size=\"md\" color=\"transparent\" className=\"float-right\" onClick={() => {\n                                                                                let currentState = this.state;\n                                                                                if (currentState.edit[rowIndex]) {\n                                                                                    currentState.edit[rowIndex] = null;\n                                                                                }\n                                                                                currentState.delete[rowIndex] = true;\n                                                                                this.setState({ ...currentState });\n                                                                            }}>\n                                                                                <i style={{ color: 'red' }} className=\"fa fa-trash-o\"></i>\n                                                                            </Button>\n                                                                    }\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    </Row>\n\n\n                                                </td>\n                                            }\n                                        </tr>\n                                    )\n                                })\n                            }\n                            {\n                                this.addOnTop()\n                            }\n\n                        </tbody>\n                    </Table>\n                </div>\n\n                {/* <Pagination>\n                            <PaginationItem disabled><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n                            <PaginationItem active>\n                                <PaginationLink tag=\"button\">1</PaginationLink>\n                            </PaginationItem>\n                            <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n                            <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n                            <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n                            <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n                        </Pagination> */}\n\n                <Modal isOpen={this.state.modal} toggle={() => this.toggle()}>\n                    <ModalHeader toggle={() => this.toggle()}>Confirmation</ModalHeader>\n                    <ModalBody>\n                        Are you sure you want to make the changes?\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={() => this.props.addTestCase ? this.updateTC() : this.update()}>Ok</Button>{' '}\n                        <Button color=\"secondary\" onClick={() => this.toggle()}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div >\n        )\n    }\n}\n\nexport default AppTable;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread({}, childProps.style, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","//\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A's keys different from B.\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n};","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 = root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function (node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function (x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function (x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport shallowEqual from 'shallowequal'\n\nimport { hsl as d3Hsl } from 'd3-color';\nimport { select as d3Select, event as d3Event } from 'd3-selection';\nimport { scaleLinear as d3ScaleLinear, scaleSqrt as d3ScaleSqrt } from 'd3-scale';\nimport { hierarchy as d3Hierarchy, partition as d3Partition } from 'd3-hierarchy';\nimport { arc as d3Arc } from 'd3-shape';\nimport { path as d3Path } from 'd3-path';\nimport { interpolate as d3Interpolate } from 'd3-interpolate';\n\n// We have to import this event though we dont use it\nimport { transition } from 'd3-transition';\n// d3Transition;\n\n/* REFS\n * zoomable /w/ labels -- https://bl.ocks.org/vasturiano/12da9071095fbd4df434e60d52d2d58d\n * text opacity -- https://gist.github.com/metmajer/5480307\n*/\n\n/**\n* Creates a zoomable Sunburst\n* @param {object} props\n* @param {object} props.data - see the d3 {@link https://github.com/defunctzombie/d3-examples/blob/master/dendrogram/flare.json|flare.json}\n    data for the shape that is required. \n* @param {string} props.width - width of svg\n* @param {string} props.height - height of svg. \n*   If width and height are not the same there will be dead space.\n* @param {number} props.count_member - what data element to use for slice size\n* @param {number} [props.radianCutoff=.01] - smallest slice to show in radians\n* @param {number} [props.transitionDuration=500] - ms for animation\n* @param {number} [props.saturation=.5] - base color saturation of slices\n* @param {number} [props.lightness=.5] - base color lightness of slices\n* @param {number} [props.child_brightness=.5] - value to lighten children slices\n* @param {number} [props.font_size=12] - for calculating if text fits\n* @param {func} [props.colorFunc=(node, current_color) => current_color]\n        - Custom color funorFunc=(node, current_color) => current_color]\n        - Custom color func for slices with heights > 0.\n* @param {func} [props.labelFunc] - returns text to slice\n* @param {func} [props.condensedLabelFunc] - backup function to try to fit less text\n        for smaller slices.\n* @param {func} [props.tooltipFunc=(data) => data.name]\n* @param {number} [props.tooltipX=20] - x pointer offset to show tooltip \n* @param {number} [props.tooltipY=20] - y pionter offset to show tooltip\n* @param {string} [props.domID] - will be random if undefined\n* @param {func} [props.onMouseover]\n* @param {func} [props.onMouseout]\n* @param {func} [props.onClick]\n* @param {string} [props.key_member] - data member to construct dom ids from\n\n*/\n//FIXME normalize function signatures\n//FIXME normalize case\nclass Sunburst extends React.Component {\n\n    static propTypes = {\n        data: PropTypes.object.isRequired,\n        width: PropTypes.string.isRequired,\n        height: PropTypes.string.isRequired,\n        count_member: PropTypes.string.isRequired,\n\n        // requried /w/ default\n        tooltip: PropTypes.bool.isRequired, // FIXME get rid of this\n        radianCutoff: PropTypes.number.isRequired, // smallest slice to show in radians\n        transitionDuration: PropTypes.number.isRequired, // ms for animation\n        saturation: PropTypes.number.isRequired, // base saturation of arcs\n        lightness: PropTypes.number.isRequired, // base lightness of parent arcs\n        child_brightness: PropTypes.number.isRequired, // value to lighten children\n        font_size: PropTypes.number.isRequired, // for calculating if text fits\n\n        colorFunc: PropTypes.func, // custom colorizing for slice\n        tooltipFunc: PropTypes.func,\n        tooltipX: PropTypes.number.isRequired, // offset x to place tooltip\n        tooltipY: PropTypes.number.isRequired, // ofset y to place tooltip\n\n        domId: PropTypes.string, // will be random if undefined\n        onMouseover: PropTypes.func,\n        onMouseout: PropTypes.func,\n        onClick: PropTypes.func,\n        labelFunc: PropTypes.func,   // returns text for slice\n        condensedLabelFunc: PropTypes.func, // backup function to try to fit text\n        key_member: PropTypes.string, // unique id\n        _debug: PropTypes.bool,\n        _log: PropTypes.func,\n        _warn: PropTypes.func,\n    }\n\n    static defaultProps = {\n        tooltip: true,\n        tooltipFunc: (data) => data.name,\n        radianCutoff: .001,\n        transitionDuration: 500,\n        colorFunc: (node, current_color) => current_color,\n        key_member: 'key',\n        font_size: 12,\n        tooltipX: 20,\n        tooltipY: 20,\n        saturation: .5,\n        lightness: .5,\n        child_brightness: .5,\n        _debug: false,\n        _log: console.log,\n        _warn: console.warn,\n    }\n\n    constructor(props) {\n        super(props);\n        console.log('called construcotr');\n        // this.init();\n        this._last_click = null\n        this.radius = (Math.min(this.props.width, this.props.height) / 2);\n        this.y = d3ScaleSqrt()\n            .range([0, this.radius]);\n\n        this.x = d3ScaleLinear()\n            .range([0, 2 * Math.PI])\n\n        this.arc = d3Arc()\n            .startAngle((d) => { return Math.max(0, Math.min(2 * Math.PI, this.x(d.x0))); })\n            .endAngle((d) => { return Math.max(0, Math.min(2 * Math.PI, this.x(d.x1))); })\n            .innerRadius((d) => { return Math.max(0, this.y(d.y0)); })\n            .outerRadius((d) => { return Math.max(0, this.y(d.y1)); });\n\n        this.partition = d3Partition()\n\n        this.hueDXScale = d3ScaleLinear()\n            .domain([0, 1])\n            .range([0, 360])\n\n        this.domId = this.props.domId || ('sunburst-wrapper-' + Math.round(Math.random() * 1e12).toString())\n        this.svg = null\n        this.tooltipDom = null\n        this.lastSelect = null\n    }\n    init() {\n\n    }\n\n    componentDidMount() {\n        this.props._debug && this.props._log(\"Sunburst: componentDidMount()\")\n        this._create();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        this.props._debug && this.props._log(\"Sunburst: shouldComponentUpdate()\", this.props)\n        if (!shallowEqual(this.props, nextProps)) {\n            return false\n        }\n        return true\n    }\n\n    _destroy_svg() {\n        this.props._debug && this.props._log(\"Sunburst: _destroy_svg()\")\n        this.svg && this.svg.selectAll('*').remove()\n        // this.svg = null\n    }\n\n    componentDidUpdate() { //prevProps\n        this.props._debug && this.props._log(\"Sunburst: componentDidUpdate()\")\n        // this._destroy_svg()\n        this._create()\n    }\n\n    componentWillUnmount() {\n        this.props._debug && this.props._log(\"Sunburst: componentWillUnmount()\")\n        this._destroy_svg()\n    }\n    /**\n     * Programatically select a slice.\n     * @param id the slice key to select. This should be the key_member set in\n     * props.\n    */\n    select(id) {\n        this.props._debug && this.props._log(\"Sunburst: select(id)\")\n        const key = '#mainArc-' + id\n        const nodes = d3Select(key).nodes()\n        if (!nodes.length) {\n            this.props._warn(`could not find node with id of ${key}`)\n            return\n        }\n        const node = nodes[0].__data__\n        this._update(node)\n    }\n\n    _onClick(node) {\n        this.props._debug && this.props._log(\"Sunburst: _onClick(node)\")\n        this._last_click = node\n    }\n\n    /**\n     * recomputes slice colors. If the color function changes this should be called\n     * to update to the new color sheme.\n    */\n    updateColor() {\n        this.props._debug && this.props._log(\"Sunburst: updateColor()\")\n        this.svg.selectAll('path.sunburst-main-arc')\n            .style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n    }\n\n    _create() {\n        this.props._debug && this.props._log(\"Sunburst: _create()\")\n        if (!this.props.data) return;\n\n        const root = d3Hierarchy(this.props.data)\n            .sum(function (d) {\n                if (d[this.props.count_member] === undefined)\n                    this.props._warn(`props.count_member (${this.props.count_member}) is not defined on data`)\n                return !d.children || d.children.length === 0 ? d[this.props.count_member] : 0;\n            }.bind(this))\n        //.filter( (d) => d.depth < 4)\n\n        const data = this.partition(root)\n            .descendants()\n            .filter((d) => d.x1 - d.x0 > this.props.radianCutoff) // 0.005 radians = 0.29 degrees\n\n        if (!this.svg) {\n            const w = this.props.width\n            const h = this.props.height\n            const el = d3Select('#' + this.domId)\n\n            this.svg = el.append('svg');\n            this.svg\n                .style('class', 'sunburst-svg')\n                .style('width', w + 'px')\n                .style('height', h + 'px')\n                .attr('viewBox', `${-w / 2} ${-h / 2} ${w} ${h}`);\n            //this.canvas = this.svg.append('g');\n            //this.svg = d3Select(\"svg\").append(\"g\").attr(\"id\", \"bigG\")\n\n            var gSlices = this.svg.selectAll(\"g\")\n                .data(data)\n                .enter()\n                .append(\"g\")\n\n            gSlices.exit().remove();\n\n            const key = this.props.key_member\n            let cntr = 0;\n            gSlices.append(\"path\")\n                .attr('class', (d) => {\n                    const cursor = (!d.parent || !d.children) ? ' cursor-pointer' : ' cursor-pointer'\n                    const evenodd = d.depth % 2 ? 'even-row' : 'odd-row'\n                    return `sunburst-main-arc${cursor} ${evenodd}`\n                }).attr('id', (d, i) => {\n                    return key ? `mainArc-${d.data[key]}` : `mainArc-${i}`\n                }).style(\"fill\", (d) => {\n\n                    // return d.parent ? this._colorize(d) : \"white\"\n                    return d.parent ? this._colorize(d) : \"white\"\n                })\n                .on('click', function (node) {\n                    this._onClick(node)\n                    let act = true;\n                    if (this.props.onClick) {\n                        act = this.props.onClick(node);\n                    }\n                    act && this._update(node)\n                }.bind(this))\n\n            if (this.props.labelFunc) {\n                gSlices.append('path')\n                    .attr('class', 'sunburst-hidden-arc')\n                    .attr('id', (_, i) => `hiddenArc${i}`)\n                    .attr('d', this._middleArcLine.bind(this))\n                    .style('fill', 'none')\n\n                const text = gSlices.append('text')\n                    .style('pointer-events', 'none')\n                    .style('dominant-baseline', 'middle')\n                    .style('text-anchor', 'middle')\n                //.attr('display', d => this._textFits(d) ? null : 'none')\n\n                text.append('textPath')\n                    .attr('startOffset', '50%')\n                    .attr('xlink:href', (_, i) => `#hiddenArc${i}`)\n                    .text(d => this._getLabelText(d) || '')\n            }\n        }\n        this.props.tooltip && this._setTooltips()\n        this._update(root)\n    }\n\n    _update(d, i, a) {\n        this.props._debug && this.props._log(\"Sunburst: _update(d, i, a)\")\n\n        if (this.lastSelect && a && this.lastSelect == a[i].id)\n            return\n\n        this.lastSelect = a && a[i].id\n\n        this.svg.transition().selectAll('textPath').attr(\"opacity\", 0);\n\n        const transition = this.svg.transition()\n            .duration(this.props.transitionDuration) // duration of transition\n            .tween(\"scale\", function () {\n                var xd = d3Interpolate(this.x.domain(), [d.x0, d.x1]),\n                    yd = d3Interpolate(this.y.domain(), [d.y0, 1]),\n                    yr = d3Interpolate(this.y.range(), [(d.y0 ? (20) : 0), this.radius]);\n                return function (t) { this.x.domain(xd(t)); this.y.domain(yd(t)).range(yr(t)); }.bind(this);\n            }.bind(this))\n\n        transition.selectAll('path.sunburst-hidden-arc')\n            .attrTween('d', d => () => this._middleArcLine(d));\n\n        //.style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n        transition.selectAll('path.sunburst-main-arc')\n            .attrTween('d', d => () => {\n                const arc = this.arc(d)\n                return arc\n            }).on(\"end\", (e, i, a) => {\n                if (!this.arc.innerRadius()(e)) // if its not visible\n                    return\n                // get a selection of the associated text element\n                var arcText = d3Select(a[i].parentNode).select(\"text textPath\");\n                // fade in the text element and recalculate positions\n                arcText.transition(this.props.transitionDuration / 2)\n                    .attr(\"opacity\", 1)\n                    .text((d) => {\n                        const text = this._getLabelText(d)\n                        return text\n                    })\n            });\n    }\n\n    _textFits(d, label) {\n        this.props._debug && this.props._log(\"Sunburst: _textFits(d, label)\")\n\n        if (!label)\n            return false\n        // changed to degress\n        const angle = (this.arc.endAngle()(d) - this.arc.startAngle()(d)) * 57.296\n        const radius = this.arc.outerRadius()(d)\n        const arclength = 2 * Math.PI * radius * (angle / 360)\n        return label.length * this.props.font_size < arclength;\n    }\n\n    _getLabelText(d) {\n        this.props._debug && this.props._log(\"Sunburst: _getLabelText(d)\")\n        var label\n        label = this.props.labelFunc && this.props.labelFunc(d)\n        if (this._textFits(d, label))\n            return label\n        label = this.props.condensedLabelFunc && this.props.condensedLabelFunc(d)\n        if (this._textFits(d, label))\n            return label\n        return null\n    }\n\n    _middleArcLine(d) {\n        this.props._debug && this.props._log(\"Sunburst: _middleArcLine(d)\")\n        const halfPi = Math.PI / 2;\n        const angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n        const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n\n        const middleAngle = (angles[1] + angles[0]) / 2;\n        const invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n        if (invertDirection) { angles.reverse(); }\n\n        const path = d3Path();\n        path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n        return path.toString();\n    }\n\n    _inDomain(d) {\n        this.props._debug && this.props._log(\"Sunburst: _inDomain(d)\")\n        const d0 = this.x.domain()[0]\n        const d1 = this.x.domain()[1]\n        if (d.x0 < d0)\n            return false\n        if (d.x1 > d1)\n            return false\n        return true\n    }\n\n    _setTooltips() {\n\n        this.props._debug && this.props._.log(\"Sunburst: _setTooltips(d)\")\n        this.tooltipDom = d3Select(`#${this.domId}`)\n            .append('div')\n            .attr('class', 'sunburst-tooltip')\n            .style('position', 'absolute')\n            .style('z-index', '10')\n            .style('opacity', '0')\n            .style('text-align', 'center')\n            .style('border-radius', '8px')\n            //.style('max-width', '20em')\n            .style('pointer-events', 'none')\n            .style('background', 'lightsteelblue')\n            .style('padding', '3px')\n\n        const dx = this.props.tooltipX\n        const dy = this.props.tooltipY\n        this.svg.selectAll('path.sunburst-main-arc')\n            .on(\"mouseover\", function (d) {\n                if (this.props.tooltip) {\n                    this.tooltipDom.html(this.props.tooltipFunc(d.data))\n                        .style(\"left\", (d3Event.pageX + dx - 50) + \"px\")\n                        .style(\"top\", (d3Event.pageY + dy - 50) + \"px\")\n                    this.tooltipDom.transition()\n                        .style(\"opacity\", .9)\n                        .duration(200)\n\n                    this.props.onMouseover && this.props.onMouseover(d.data);\n                }\n            }.bind(this))\n            .on(\"mouseout\", function (d) {\n                this.props.tooltip && this.tooltipDom.transition()\n                    .style(\"opacity\", 0)\n                    .duration(500)\n\n                this.props.onMouseout && this.props.onMouseout(d.data);\n            }.bind(this))\n    }\n\n    _colorize(d) {\n        this.props._debug && this.props._log(\"Sunburst: _colorize(d)\")\n        let hue;\n        const current = d;\n        if (current.depth === 0) {\n            return '#33cccc';\n        }\n        const { lightness, saturation, child_brightness } = this.props\n        if (current.depth <= 1) {\n            hue = this.hueDXScale(d.x0);\n            current.fill = d3Hsl(hue, saturation, lightness);\n            return current.fill;\n        }\n        current.fill = current.parent.fill.brighter(child_brightness);\n        const thishsl = d3Hsl(current.fill);\n        hue = this.hueDXScale(current.x0);\n        const colorshift = thishsl.h + (hue / 4);\n        const c = d3Hsl(colorshift, thishsl.s, thishsl.l)\n        return c;\n        // return (this.props.colorFunc || this.props.colorFunc(d, c)) || c\n    }\n\n    // we have to render first then componentMounted will give us\n    // access to the dom\n    render() {\n        this.props._debug && this.props._log(\"Sunburst: render()\")\n        return (\n            <div className='sunburst-wrapper' id={this.domId} />\n\n        );\n    }\n}\n\nexport default Sunburst;","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\nexport default function (node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}","import { event } from \"./selection/on\";\nexport default function () {\n  var current = event,\n      source;\n\n  while (source = current.sourceEvent) {\n    current = source;\n  }\n\n  return current;\n}","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\nexport default function (node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export var slice = Array.prototype.slice;","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { customEvent, event, touch, mouse, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, { nopropagation } from \"./noevent.js\";\nvar MODE_DRAG = {\n  name: \"drag\"\n},\n    MODE_SPACE = {\n  name: \"space\"\n},\n    MODE_HANDLE = {\n  name: \"handle\"\n},\n    MODE_CENTER = {\n  name: \"center\"\n};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function (target) {\n    return touch(target, event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function input(x, e) {\n    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function input(y, e) {\n    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function input(xy) {\n    return xy == null ? null : number2(xy);\n  },\n  output: function output(xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {\n    type: t\n  };\n} // Ignore right-click, since that should open the context menu.\n\n\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || \"ontouchstart\" in this;\n} // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\nfunction local(node) {\n  while (!node.__brush) {\n    if (!(node = node.parentNode)) return;\n  }\n\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mousedown.brush\", started).filter(touchable).on(\"touchstart.brush\", started).on(\"touchmove.brush\", touchmoved).on(\"touchend.brush touchcancel.brush\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function (group, selection) {\n    if (group.selection) {\n      group.on(\"start.brush\", function () {\n        emitter(this, arguments).beforestart().start();\n      }).on(\"interrupt.brush end.brush\", function () {\n        emitter(this, arguments).end();\n      }).tween(\"brush\", function () {\n        var that = this,\n            state = that.__brush,\n            emit = emitter(that, arguments),\n            selection0 = state.selection,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n            i = interpolate(selection0, selection1);\n\n        function tween(t) {\n          state.selection = t === 1 && selection1 === null ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n\n        return selection0 !== null && selection1 !== null ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n            args = arguments,\n            state = that.__brush,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n            emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 === null ? null : selection1;\n        redraw.call(that);\n        emit.start().brush().end();\n      });\n    }\n  };\n\n  brush.clear = function (group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return !clean && that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function beforestart() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function start() {\n      if (this.starting) this.starting = false, this.emit(\"start\");else this.emit(\"brush\");\n      return this;\n    },\n    brush: function brush() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE,\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0],\n        w0,\n        w1,\n        N = extent[0][1],\n        n0,\n        n1,\n        E = extent[1][0],\n        e0,\n        e1,\n        S = extent[1][1],\n        s0,\n        s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        pointer = event.touches ? toucher(event.changedTouches[0].identifier) : mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      if (keys) view.on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true);\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;\n      }\n\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_HANDLE:\n          {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_CENTER:\n          {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function (_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","export var slice = Array.prototype.slice;","import { slice } from \"./array\";\nimport constant from \"./constant\";\nimport { cos, halfPi, sin } from \"./math\";\nimport { path } from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function () {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","var array = Array.prototype;\nexport var slice = array.slice;","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n} // Compute unique columns in order of discovery.\n\n\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\",\n      length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6) : year > 9999 ? \"+\" + pad(year, 6) : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\" : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2) + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\" : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\" : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\" : \"\");\n}\n\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [],\n        // output rows\n    N = text.length,\n        I = 0,\n        // current character index\n    n = 0,\n        // current line number\n    t,\n        // current token\n    eof = N <= 0,\n        // current token followed by EOF?\n    eol = false; // current token followed by EOL?\n    // Strip the trailing newline.\n\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL; // Unescape quotes.\n\n      var i,\n          j = I,\n          c;\n\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n          ;\n        }\n\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      } // Find next delimiter or newline.\n\n\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      } // Return last token before EOF.\n\n\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n\n      while (t !== EOL && t !== EOF) {\n        row.push(t), t = token();\n      }\n\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\" : value instanceof Date ? formatDate(value) : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}","import dsv from \"./dsv.js\";\nvar csv = dsv(\",\");\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;","import dsv from \"./dsv.js\";\nvar tsv = dsv(\"\\t\");\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseText);\n}","import { csvParse, dsvFormat, tsvParse } from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function (input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function (response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function (response) {\n    return format.parse(response, row);\n  });\n}\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);","import text from \"./text\";\n\nfunction parser(type) {\n  return function (input, init) {\n    return text(input, init).then(function (text) {\n      return new DOMParser().parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\nexport var html = parser(\"text/html\");\nexport var svg = parser(\"image/svg+xml\");","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, abort.\n\n\n  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n        i = (y < y0) << 1 | x < x0;\n        parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n        switch (i) {\n          case 0:\n            x1 = x0 + z, y1 = y0 + z;\n            break;\n\n          case 1:\n            x0 = x1 - z, y1 = y0 + z;\n            break;\n\n          case 2:\n            x1 = x0 + z, y0 = y1 - z;\n            break;\n\n          case 3:\n            x0 = x1 - z, y0 = y1 - z;\n            break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, { defaultX } from \"./x.js\";\nimport tree_y, { defaultY } from \"./y.js\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad.js\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad.js\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad.js\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","import { dispatch } from \"d3-dispatch\";\nimport { map } from \"d3-collection\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i,\n        n = _nodes.length,\n        node;\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n      forces.each(function (force) {\n        force(_alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","export default function () {\n  return Math.random();\n}","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function () {\n      var y; // If available, use the second previously-generated uniform random.\n\n      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.\n      else do {\n          x = source() * 2 - 1;\n          y = source() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n  return randomNormal;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;else max -= min;\n    return function () {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n  return randomUniform;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function () {\n      for (var sum = 0, i = 0; i < n; ++i) {\n        sum += source();\n      }\n\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n  return randomIrwinHall;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function () {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n  return randomLogNormal;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function () {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n  return randomBates;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function () {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n  return randomExponential;\n})(defaultSource);","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function insert(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n\n      if (after.R) {\n        after = after.R;\n\n        while (after.L) {\n          after = after.L;\n        }\n\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n\n    while (parent && parent.C) {\n      grandpa = parent.U;\n\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n\n      parent = after.U;\n    }\n\n    this._.C = false;\n  },\n  remove: function remove(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n\n    do {\n      if (node === this._) break;\n\n      if (node === parent.L) {\n        sibling = parent.R;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) {\n    node = node.L;\n  }\n\n  return node;\n}\n\nexport default RedBlackTree;","import { cells, edges, epsilon } from \"./Diagram\";\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n} // Liang–Barsky line clipping.\n\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}","import { createBorderEdge } from \"./Edge\";\nimport { cells, edges, epsilon } from \"./Diagram\";\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n\n      for (j = 0; j < m; ++j) {\n        index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      }\n\n      index.sort(function (i, j) {\n        return array[j] - array[i];\n      });\n\n      for (j = 0; j < m; ++j) {\n        array[j] = halfedges[index[j]];\n      }\n\n      for (j = 0; j < m; ++j) {\n        halfedges[j] = array[j];\n      }\n    }\n  }\n}\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length; // Remove any dangling clipped edges.\n\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      } // Insert any border edges as necessary.\n\n\n      iHalfedge = 0, nHalfedges = halfedges.length;\n\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end, Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1] : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1] : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0] : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0] : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  } // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n\n\n  if (cover) {\n    var dx,\n        dy,\n        d2,\n        dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0],\n          v01 = [x0, y1],\n          v11 = [x1, y1],\n          v10 = [x1, y0];\n      cover.halfedges.push(edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site, v01, v11)) - 1, edges.push(createBorderEdge(site, v11, v10)) - 1, edges.push(createBorderEdge(site, v10, v00)) - 1);\n    }\n  } // Lastly delete any cells with no edges; these were entirely clipped.\n\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { circles, epsilon2 } from \"./Diagram\";\nvar circlePool = [];\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x = this.y = this.arc = this.site = this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n  if (!lArc || !rArc) return;\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n  if (lSite === rSite) return;\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n  var circle = circlePool.pop() || new Circle();\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n      if (node.L) node = node.L;else {\n        before = node.P;\n        break;\n      }\n    } else {\n      if (node.R) node = node.R;else {\n        before = node;\n        break;\n      }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { createCell } from \"./Cell\";\nimport { attachCircle, detachCircle } from \"./Circle\";\nimport { createEdge, setEdgeEnd } from \"./Edge\";\nimport { beaches, epsilon } from \"./Diagram\";\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge = this.site = this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach();\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n  detachBeach(beach);\n  var lArc = previous;\n\n  while (lArc.circle && Math.abs(x - lArc.circle.x) < epsilon && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n  var rArc = next;\n\n  while (rArc.circle && Math.abs(x - rArc.circle.x) < epsilon && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n  var nArcs = disappearing.length,\n      iArc;\n\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L;else {\n      dxr = x - rightBreakPoint(node, directrix);\n\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) {\n    // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  } // else lArc !== rArc\n\n\n  detachCircle(lArc);\n  detachCircle(rArc);\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n  if (!pby2) return rfocx;\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n  if (!plby2) return lfocx;\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}","import { addBeach, removeBeach } from \"./Beach\";\nimport { sortCellHalfedges, cellHalfedgeStart, clipCells } from \"./Cell\";\nimport { firstCircle } from \"./Circle\";\nimport { clipEdges } from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1] || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree();\n  circles = new RedBlackTree();\n\n  while (true) {\n    circle = firstCircle;\n\n    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n  beaches = circles = edges = cells = null;\n}\nDiagram.prototype = {\n  constructor: Diagram,\n  polygons: function polygons() {\n    var edges = this.edges;\n    return this.cells.map(function (cell) {\n      var polygon = cell.halfedges.map(function (i) {\n        return cellHalfedgeStart(cell, edges[i]);\n      });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n  triangles: function triangles() {\n    var triangles = [],\n        edges = this.edges;\n    this.cells.forEach(function (cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n    return triangles;\n  },\n  links: function links() {\n    return this.edges.filter(function (edge) {\n      return edge.right;\n    }).map(function (edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n  find: function find(x, y, radius) {\n    var that = this,\n        i0,\n        i1 = that._found || 0,\n        n = that.cells.length,\n        cell; // Use the previously-found cell, or start with an arbitrary one.\n\n    while (!(cell = that.cells[i1])) {\n      if (++i1 >= n) return null;\n    }\n\n    var dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function (e) {\n        var edge = that.edges[e],\n            v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n} // p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\n\n\nexport default function (p0, p1) {\n  var ux0 = p0[0],\n      uy0 = p0[1],\n      w0 = p0[2],\n      ux1 = p1[0],\n      uy1 = p1[1],\n      w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S; // Special case for u0 ≅ u1.\n\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n\n    i = function i(t) {\n      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n    };\n  } // General case.\n  else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];\n      };\n    }\n\n  i.duration = S * 1000;\n  return i;\n}","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\nTransform.prototype = {\n  constructor: Transform,\n  scale: function scale(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function translate(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function apply(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function applyX(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function applyY(y) {\n    return y * this.k + this.y;\n  },\n  invert: function invert(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function invertX(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function invertY(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function rescaleX(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function rescaleY(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function toString() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\nexport var identity = new Transform(1, 0, 0);\ntransform.prototype = Transform.prototype;\nexport default function transform(node) {\n  while (!node.__zoom) {\n    if (!(node = node.parentNode)) return identity;\n  }\n\n  return node.__zoom;\n}","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolateZoom } from \"d3-interpolate\";\nimport { event, customEvent, select, mouse, touch } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport { Transform, identity } from \"./transform.js\";\nimport noevent, { nopropagation } from \"./noevent.js\"; // Ignore right-click, since that should open the context menu.\n\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));\n}\n\nexport default function () {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection.property(\"__zoom\", defaultTransform).on(\"wheel.zoom\", wheeled).on(\"mousedown.zoom\", mousedowned).on(\"dblclick.zoom\", dblclicked).filter(touchable).on(\"touchstart.zoom\", touchstarted).on(\"touchmove.zoom\", touchmoved).on(\"touchend.zoom touchcancel.zoom\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function (collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function () {\n        gesture(this, arguments).start().zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform).end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function (selection, k, p) {\n    zoom.scaleTo(selection, function () {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function (selection, k, p) {\n    zoom.transform(selection, function () {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function (selection, x, y) {\n    zoom.transform(selection, function () {\n      return constrain(this.__zoom.translate(typeof x === \"function\" ? x.apply(this, arguments) : x, typeof y === \"function\" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function (selection, x, y, p) {\n    zoom.transform(selection, function () {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === \"function\" ? -x.apply(this, arguments) : -x, typeof y === \"function\" ? -y.apply(this, arguments) : -y), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k,\n        y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition.on(\"start.zoom\", function () {\n      gesture(this, arguments).start();\n    }).on(\"interrupt.zoom end.zoom\", function () {\n      gesture(this, arguments).end();\n    }).tween(\"zoom\", function () {\n      var that = this,\n          args = arguments,\n          g = gesture(that, args),\n          e = extent.apply(that, args),\n          p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n          a = that.__zoom,\n          b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n      return function (t) {\n        if (t === 1) t = b; // Avoid rounding error on end.\n        else {\n            var l = i(t),\n                k = w / l[2];\n            t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);\n          }\n        g.zoom(null, t);\n      };\n    });\n  }\n\n  function gesture(that, args, clean) {\n    return !clean && that.__zooming || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function start() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n\n      return this;\n    },\n    zoom: function zoom(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this); // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n\n      clearTimeout(g.wheel);\n    } // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.\n      else {\n          g.mouse = [p, t.invert(p)];\n          interrupt(this);\n          g.start();\n        }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n\n      if (!g.moved) {\n        var dx = event.clientX - x0,\n            dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, event.changedTouches.length === n),\n        started,\n        i,\n        t,\n        p;\n    nopropagation();\n\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function () {\n        touchstarting = null;\n      }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length,\n        i,\n        t,\n        p,\n        l;\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n\n    t = g.that.__zoom;\n\n    if (g.touch1) {\n      var p0 = g.touch0[0],\n          l0 = g.touch0[1],\n          p1 = g.touch1[0],\n          l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length,\n        i,\n        t;\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, touchDelay);\n\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {\n      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n\n      if (g.taps === 2) {\n        var p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function (_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function (_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function (_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function (_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function (_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}","\nimport { arc } from 'd3';\n\n// export interface Details {\n//     name: Status;\n//     count: number;\n//     flexName: string;\n//     device: DeviceType;\n// }\n// export enum DeviceType {\n//     dev1 = 'dev1',\n//     dev2 = 'dev2',\n//     dev3 = 'dev3',\n//     dev4 = 'dev4'\n// }\n// export enum Status {\n//     Fail = 'Fail',\n//     Warning = 'Warning',\n//     Pass = 'Pass'\n// }\n// export interface SunburstData {\n//     data: any;\n//     componentType: DeviceType;\n// }\n// export class SunburstArcData {\n//     id: string;\n//     rule: Details;\n//     parent: string;\n//     color: string;\n//     startAngle: number;\n//     endAngle: number;\n//     innerRadius: number;\n//     outerRadius: number;\n// }\nexport const DetailsInfo = {\n    Fail: { color: '#ED6648', display: 'Fail' },\n    Warning: { color: '#F9D55B', display: 'Warning' },\n    Pass: { color: '#68C083', display: 'Pass' },\n    Total: { color: '#36A2EB', display: 'Total' },\n    // complementary 1 pair\n    Storage: { color: 'rgb(242,143,31)', display: 'Storage' },\n    Network: { color: 'rgb(32,114,178)', display: 'Network' },\n    Management: { color: 'rgb(195,25,126)', display: 'Management' },\n    Others: { color: 'rgb(140,189,63)', display: 'Others' },\n    // complementary 2 pair\n    // Storage: { color: 'rgb(253,199,15)', display: 'Storage' },\n    // Network: { color: 'rgb(66,78,155)', display: 'Network' },\n    // Management: { color: 'rgb(228,36,38)', display: 'Management' },\n    // Others: { color: 'rgb(10,144,93)', display: 'Others' },\n\n};\nexport const complementaryColors = [\n    'rgb(253,199,15)',\n    'rgb(242,142,31)',\n    'rgb(236,98,36)',\n    'rgb(228,36,38)',\n    'rgb(195,26,126)',\n    'rgb(110,57,141)',\n    'rgb(65,78,154)',\n    'rgb(32,114,178)',\n    'rgb(29,150,187)',\n    'rgb(10,144,93)',\n    'rgb(140,189,63)',\n    'rgb(240,230,12)',\n]\nexport const oppositeColors = [\n    'rgb(242,143,31)',\n    'rgb(195,25,126)',\n    'rgb(32,114,178)',\n    'rgb(140,189,63)'\n]\nexport const arcGenerator = arc();\nexport const innerarc = arc().innerRadius(30).outerRadius(35);\nexport const expander = arc()\n    .innerRadius(d => {\n        return (d.innerRadius = d.parent ? d.innerRadius : d.innerRadius);\n    })\n    .outerRadius(d => {\n        return (d.outerRadius += 10);\n    });\n\nexport const collapser = arc()\n    .innerRadius(d => {\n        return (d.innerRadius = d.parent ? d.innerRadius : d.innerRadius);\n    })\n    .outerRadius(d => {\n        return (d.outerRadius -= 10);\n    });\n","import React, { Component } from 'react';\nimport { arc, select, interpolate } from 'd3';\nimport { Button } from 'reactstrap'\nimport { DetailsInfo, arcGenerator, expander, collapser, complementaryColors, oppositeColors } from './sunburst.model';\nimport './SunburstComponent.scss';\nclass SunburstComponent extends Component {\n    // @Input() data: SunburstData;\n    // @ViewChild('gElement') gElement: ElementRef;\n    dataMissing = {};\n    cntr = 0;\n    mouseHover = false;\n\n    componentWillReceiveProps(newProps) {\n        console.log('data')\n        console.log(this.props.data);\n        if (this.props.data && this.props.data.data && this.props.data.componentType) {\n            setTimeout(() => this.generateArcs(this.props.data.data, this.props.data.componentType), 100)\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Button onClick={() => console.log('called')}></Button>\n                <svg viewBox=\"0 0 300 300\" preserveAspectRatio=\"none\" width=\"100%\">\n                    <text\n                        className={!this.props.data || !this.props.data.componentType || this.dataMissing[this.props.data.componentType] ? 'app-sunburst-show' : 'app-sunburst-hidden'}\n                        x=\"75\" y=\"140\" font-family=\"sans-serif\" font-size=\"20px\"\n                        fill=\"red\">No records found</text>\n                    <g ref=\"gElement\" transform=\"translate(150,150)\"></g>\n                </svg >\n                {\n                    this.props.data && this.props.data.componentType &&\n                    <div class=\"app-sunburst-label\" > {this.props.data.componentType} </div>\n                }\n            </React.Fragment >\n        )\n    }\n    generateArcs(data, title) {\n        this.colors = complementaryColors;\n        if (this.props.data.data.length <= oppositeColors.length) {\n            this.colors = oppositeColors;\n        }\n        const selectedG = select(this.refs.gElement);\n        let arcId = 0;\n        const textData = [{\n            id: 'flexText' + title,\n            text: '',\n            translate: 15\n        },\n        {\n            id: 'valText' + title,\n            text: '',\n            translate: -15\n        }]\n\n        selectedG\n            .selectAll('path')\n            .remove();\n        let total = 0;\n        const ruleTotal = {};\n        let initAngle = 0;\n        let arcData = [];\n        data.forEach(rule => {\n            total += rule.count;\n            ruleTotal[rule.name] = ruleTotal[rule.name]\n                ? ruleTotal[rule.name] + rule.count\n                : rule.count;\n        });\n        // if total is greater than 0\n        if (total === 0) {\n            this.dataMissing[title] = true;\n            return;\n        }\n        this.dataMissing[title] = false;\n\n        total = 2 * Math.PI / total;\n        // inner ring\n        initAngle = 0;\n        Object.keys(ruleTotal).forEach((key, index) => {\n            // keys = FAIL, WARNING, PASS\n            const endAngle = initAngle + ruleTotal[key] * total;\n            arcData.push({\n                id: title + 'innerarc' + key,\n                // color: DetailsInfo[key].color,\n                color: this.colors[index],\n                startAngle: initAngle,\n                endAngle: endAngle,\n                innerRadius: 80,\n                outerRadius: 85\n            })\n            initAngle = endAngle;\n        });\n\n        // outer radius\n        initAngle = 0;\n        const list = {};\n        Object.keys(ruleTotal).forEach(key => {\n            list[key] = data.filter(itm => itm.name === key);\n        });\n        Object.keys(list).forEach(ruleName =>\n            list[ruleName].forEach(rule => {\n                // rule.names = FAIL, WARNING, PASS\n                const endAngle = initAngle + rule.count * total;\n                // arcData.push({\n                //     id: title + 'arc' + arcId++,\n                //     rule: rule,\n                //     parent: title + 'arc' + rule.name,\n                //     color: DetailsInfo[rule.name].color,\n                //     startAngle: initAngle,\n                //     endAngle: endAngle,\n                //     innerRadius: 100,\n                //     outerRadius: 140\n                // })\n                initAngle = endAngle;\n            })\n        );\n\n        // inner radius\n        initAngle = 0;\n        Object.keys(ruleTotal).forEach((key, index) => {\n            // keys = FAIL, WARNING, PASS\n            const endAngle = initAngle + ruleTotal[key] * total;\n            arcData.push({\n                id: title + 'arc' + key,\n                rule: {\n                    name: key,\n                    count: ruleTotal[key],\n                    flexName: undefined\n                },\n                parent: undefined,\n                // color: DetailsInfo[key].color,\n                color: this.colors[index],\n                startAngle: initAngle,\n                endAngle: endAngle,\n                innerRadius: 80,\n                outerRadius: 100\n            })\n            initAngle = endAngle;\n        });\n        arcData = Object.assign([], arcData);\n\n        selectedG\n            .selectAll('path')\n            .data(arcData)\n            .enter()\n            .append('path')\n            .attr('id', d => d.id)\n            .attr('d', arcGenerator)\n            .attr('fill', d => d.color)\n            .attr('stroke', '#fff')\n            .attr('stroke-width', 1)\n            .on('mouseover', d => {\n                selectedG\n                    .selectAll('path')\n                    .style('opacity', 0.8)\n                if (!d.id.includes('inner')) {\n                    this.mouseHover = true;\n                    if (d.parent) {\n                        select('#' + d.parent)\n                            .transition()\n                            .delay(100)\n                            .attr('d', expander)\n                            .style('opacity', 1.0)\n                    }\n                    select('#' + d.id)\n                        .transition()\n                        .delay(100)\n                        .attr('d', expander)\n                        .style('opacity', 1.0);\n\n                    select('#flexText' + title)\n                        .text((flex) => d.rule.flexName ? d.rule.flexName : 'Total')\n                        .style('fill', '#888888')\n                        .style('font-size', '20px')\n                        .style('opacity', 1)\n\n                    select('#valText' + title)\n                        .text((val) => d.rule.count + '')\n                        .style('fill', '#565656')\n                        .style('font-size', '48px')\n                        .style('opacity', 1)\n                } else {\n                    select('#' + d.id)\n                        .style('opacity', 1.0)\n                }\n            })\n            .on('mouseout', d => {\n                select('#flexText' + title)\n                    .text((flex) => d.rule.flexName ? d.rule.flexName : 'Total')\n                    .style('opacity', 0);\n\n                select('#valText' + title)\n                    .text((val) => d.rule.count + '')\n                    .style('opacity', 0);\n\n                selectedG\n                    .selectAll('path')\n                    .style('opacity', 1.0)\n                if (!d.id.includes('inner')) {\n                    this.mouseHover = false;\n                    if (d.parent) {\n\n                        select('#' + d.parent)\n                            .transition()\n                            .delay(100)\n                            .attr('d', collapser);\n                    }\n\n                    select('#' + d.id)\n                        .transition()\n                        .delay(100)\n                        .attr('d', collapser);\n                }\n            })\n            .on('click', d => {\n                this.props.sectionSelect(d);\n            })\n        // .transition()\n        // .delay(function (d, i) {\n        //     return i * 800;\n        // })\n        // .attrTween('d', function (d) {\n        //     var i = interpolate(d.startAngle + 0.1, d.endAngle);\n        //     return function (t) {\n        //         d.endAngle = i(t);\n        //         return arc(d);\n        //     }\n        // })\n\n        selectedG\n            .selectAll('text')\n            .data(textData)\n            .enter()\n            .append('text')\n            .attr('id', d => d.id)\n            .attr('transform', function (d) {\n                return 'translate(0,' +\n                    d.translate\n                    + ')';\n            })\n            .attr('dy', d => {\n                if (d.id.includes('flex')) {\n                    return '1.0em'\n                } else { return '0.2em' }\n            })\n            .attr('text-anchor', 'middle')\n            .text((d) => d.text)\n            .style('font-size', '48px')\n            .style('opacity', 1)\n            .style('fill', '#0000')\n            .style('font-size', '20px')\n    }\n}\n\nexport default SunburstComponent;","// CUSTOMER USING THIS RELEASE (OPTIONAL) (M)\n// Issues faced on customer side (jira - list)\n// customers to be given to\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table, Button, Input, Collapse\n    , Modal, ModalHeader, ModalBody, ModalFooter, Progress\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport AppTable from '../../../components/AppTable/AppTable';\nimport { getCurrentRelease } from '../../../reducers/release.reducer';\nimport { getEachTCStatusScenario } from '../../../reducers/testcase.reducer';\nimport { getTCStatusForUIDomains, getTCStatusForUISubDomains, alldomains, getTCStatusForSunburst } from '../../../reducers/release.reducer';\nimport { TABLE_OPTIONS } from '../../../constants';\nimport { Bar, Doughnut, Line, Pie, Polar, Radar } from 'react-chartjs-2';\nimport { AgGridReact } from 'ag-grid-react';\nimport axios from 'axios';\nimport { saveTestCase, saveTestCaseStatus, saveSingleTestCase } from '../../../actions';\nimport SunburstComponent from '../components/SunburstComponent';\nimport './ReleaseTestCase.scss'\n// import sunburst from '../../../reducers/domains.js'\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport Sunburst from '../components/Sunburst';\nimport sunburstData from './constants';\nconst Status = {\n    Fail: 'Fail',\n    Pass: 'Pass',\n    Warning: 'Warning'\n}\nconst DeviceType = {\n    dev1: 'dev1',\n    dev2: 'dev2',\n    dev3: 'dev3',\n    dev4: 'dev4'\n}\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false\n}\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\nclass ReleaseTestCase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            svgKey: 0,\n            selected: 'Domains',\n            metricsOpen: false,\n            addTC: {},\n            open: false,\n            width: window.screen.availWidth > 1700 ? 500 : 380,\n            doughnuts: getTCStatusForUIDomains(this.props.selectedRelease),\n            qaStrategy: {},\n            domainSelected: false,\n            domains: getTCStatusForSunburst(this.props.selectedRelease),\n            tcSummaryTitleStyle: window.screen.availWidth > 1400 ?\n                { position: 'absolute', top: '41%', left: '47%', textAlign: 'center', fontSize: '13px', fontWeight: 600, color: '#003168' } :\n                { position: 'absolute', top: '42%', left: '46%', textAlign: 'center', fontSize: '13px', fontWeight: 600, color: '#003168' },\n        }\n    }\n    componentDidMount() {\n        this.setState({ metricsOpen: true })\n    }\n    getTcs() {\n        if (this.state.domainSelected) {\n            axios.get(`/api/tcinfo/${this.props.selectedRelease.ReleaseNumber}/tcinfo/domain/${this.state.domainSelected}`)\n                .then(res => {\n                    console.log('for ', this.props.selectedRelease.ReleaseNumber)\n                    console.log(res.data)\n                    this.props.saveTestCase({ data: res.data, id: this.props.selectedRelease.ReleaseNumber });\n                }, error => {\n                })\n        }\n    }\n    toggle = () => this.setState({ modal: !this.state.modal });\n    save() {\n        let data = { ...this.state.addTC };\n        let dates = [\n            'TargetedReleaseDate', 'ActualReleaseDate', 'TargetedCodeFreezeDate',\n            'UpgradeTestingStartDate', 'QAStartDate', 'ActualCodeFreezeDate', 'TargetedQAStartDate'\n        ]\n        let formattedDates = {};\n        dates.forEach(item => {\n            if (data[item]) {\n                let date = new Date(data[item]);\n                formattedDates[item] = date.toISOString()\n            }\n        })\n        data = { ...data, ...formattedDates };\n        data.Domain = this.state.domainSelected;\n        console.log('saved data ', data);\n        axios.post(`/api/tcinfo/${this.props.selectedRelease.ReleaseNumber}`, { ...data })\n            .then(res => {\n                this.getTcs();\n                this.setState({ addTC: {} });\n            }, error => {\n                alert('error in updating');\n            });\n        if (this.state.modal) {\n            this.toggle();\n        }\n    }\n    confirmToggle() {\n        let data = { ...this.state.addTC }\n        if (!data || (data && !data.TcID) || !this.state.domainSelected) {\n            alert('Please Add Tc ID or Domain');\n            return;\n        }\n        this.toggle();\n    }\n    sunburstClick(node) {\n        console.log('clicked node');\n        console.log(node);\n        if (alldomains.includes(node.data.name)) {\n            this.setState({ doughnuts: getTCStatusForUISubDomains(this.props.selectedRelease, node.data.name), domainSelected: false })\n            return true;\n        }\n        if (node.data.name === 'domains') {\n            this.setState({ doughnuts: getTCStatusForUIDomains(this.props.selectedRelease), domainSelected: false })\n            return true;\n        }\n        if (!alldomains.includes(node.data.name) && node.data.name !== 'domains') {\n            return false;\n            this.setState({ domainSelected: node.data.name, doughnuts: null });\n            axios.get('/api/' + this.props.selectedRelease.ReleaseNumber + '/tcinfo/domain/' + node.data.name)\n                .then(all => {\n                    if (all && all.data.length) {\n                        axios.get('/api/' + this.props.selectedRelease.ReleaseNumber + '/tcstatus/domain/' + node.data.name)\n                            .then(res => {\n                                this.props.saveTestCase({ id: this.props.selectedRelease.ReleaseNumber, data: res.data })\n\n                                this.setState({ domainSelected: node.data.name, doughnuts: getEachTCStatusScenario({ data: res.data, domain: node.data.name, all: all.data }) })\n                            }, error => {\n\n                            });\n                    }\n                })\n        }\n\n    }\n    sectionSelect(e) {\n        this.setState({ selected: e.rule.name, svgKey: this.state.svgKey + 1 })\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'marginLeft': '1.5rem' }}>\n                        <div className='rp-app-table-header' style={{ cursor: 'pointer' }} onClick={() => this.setState({ metricsOpen: !this.state.metricsOpen })}>\n                            <div class=\"row\">\n                                <div class='col-md-6'>\n                                    <div class='row'>\n                                        <div class='col-md-6 col-lg-6'>\n                                            {\n                                                !this.state.metricsOpen &&\n                                                <i className=\"fa fa-angle-down rp-rs-down-arrow\"></i>\n                                            }\n                                            {\n                                                this.state.metricsOpen &&\n                                                <i className=\"fa fa-angle-up rp-rs-down-arrow\"></i>\n                                            }\n\n                                            <div className='rp-icon-button'><i className=\"fa fa-area-chart\"></i></div>\n                                            <span className='rp-app-table-title'>Test Case Status</span>\n                                        </div>\n                                        {/* {\n                                            this.props.bug && Object.keys(this.props.bug.bugCount.all).map(item =>\n                                                <div class='col-md-2'>\n                                                    <div className={`c-callout c-callout-${item.toLowerCase()}`} style={{ marginTop: '0', marginBottom: '0' }}>\n                                                        <small class=\"text-muted\">{item.toUpperCase()}</small><br></br>\n                                                        <strong class=\"h5\">{this.props.bug.bugCount.all[item]}</strong>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } */}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Collapse isOpen={this.state.metricsOpen}>\n                            <React.Fragment>\n                                <Row>\n\n                                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"4\">\n                                        <div style={{ marginLeft: '1rem', marginTop: '1rem' }}>\n                                            <Sunburst\n                                                tooltip={false}\n                                                onClick={(node) => this.sunburstClick(node)}\n                                                data={this.state.domains}\n                                                width={this.state.width}\n                                                height={this.state.width}\n                                                count_member=\"size\"\n                                                labelFunc={(node) => node.data.name}\n                                            />\n                                        </div>\n                                        {/* <div className=\"main-container\">\n                                            <div>\n                                                <SunburstComponent key={this.state.svgKey} sectionSelect={(e) => this.sectionSelect(e)} data={sunburstData[this.state.selected]}></SunburstComponent>\n                                            </div>\n                                        </div> */}\n\n                                    </Col>\n                                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"8\">\n                                        <Row style={{ marginLeft: '0.5rem' }}>\n                                            {\n                                                this.state.domainSelected &&\n                                                !this.state.doughnuts &&\n                                                loading()\n                                            }\n                                            {\n                                                this.state.domainSelected &&\n                                                this.state.doughnuts &&\n                                                this.state.doughnuts.map((item, index) => {\n                                                    if (index < 2) {\n                                                        return (\n                                                            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                                                                <div className=\"chart-wrapper\" style={{ minHeight: '400px' }}>\n                                                                    {/* <Doughnut data={item.data} /> */}\n                                                                    <Bar data={item.data} options={options} />\n                                                                </div>\n                                                                <div className='rp-tc-dougnut-text'>\n                                                                    {item && item.title}\n                                                                </div>\n                                                            </Col>\n                                                        )\n                                                    }\n\n                                                })\n                                            }\n                                            {\n                                                !this.state.domainSelected &&\n                                                this.state.doughnuts &&\n                                                this.state.doughnuts.map((item, index) => {\n                                                    if (index < 4) {\n                                                        return (\n                                                            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n                                                                <div className=\"chart-wrapper\">\n                                                                    <div class='row' style={{ padding: '10px', margin: 'auto' }}>\n                                                                        <div style={this.state.tcSummaryTitleStyle}>\n                                                                            <div>Total</div>\n                                                                            <div style={{ fontSize: '15px' }}>{item.data.datasets[0].data[0] + item.data.datasets[0].data[1] + item.data.datasets[0].data[2] + item.data.datasets[0].data[3]}</div>\n                                                                        </div>\n\n                                                                        <Doughnut data={item.data} style={{ textAlign: 'center' }} />\n\n                                                                    </div>\n                                                                    {/* <div style={this.state.tcSummaryTitleStyle}>\n                                                                <div>Total</div>\n                                                                <div>{item.data.datasets[0].data[0] + item.data.datasets[0].data[1] + item.data.datasets[0].data[2] + item.data.datasets[0].data[3]}</div>\n                                                            </div>\n                                                            <Doughnut data={item.data} /> */}\n                                                                </div>\n\n\n                                                                <div className='rp-tc-dougnut-text'>\n                                                                    {item && item.title}\n                                                                </div>\n                                                            </Col>\n                                                        )\n                                                    }\n\n                                                })\n                                            }\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                {\n                                    this.state.domainSelected &&\n                                    !this.state.doughnuts &&\n                                    loading()\n                                }\n                                {\n                                    this.state.domainSelected &&\n                                    <Row>\n                                        {\n                                            this.state.doughnuts &&\n                                            this.state.doughnuts.map((item, index) => {\n                                                if (index >= 2) {\n                                                    return (\n                                                        <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n                                                            <div className=\"chart-wrapper\" style={{ minHeight: '400px' }}>\n                                                                {/* <Doughnut data={item.data} /> */}\n                                                                <Bar data={item.data} options={options} />\n                                                            </div>\n                                                            <div className='rp-tc-dougnut-text'>\n                                                                {item && item.title}\n                                                            </div>\n                                                        </Col>\n                                                    )\n                                                }\n\n                                            })\n                                        }\n                                    </Row>\n                                }\n                                {\n                                    !this.state.domainSelected &&\n                                    <Row>\n                                        {\n                                            this.state.doughnuts &&\n                                            this.state.doughnuts.length >= 4 &&\n                                            this.state.doughnuts.map((item, index) => {\n                                                if (index >= 4) {\n                                                    return (<Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n                                                        <div className=\"chart-wrapper\">\n                                                            <div style={this.state.tcSummaryTitleStyle}>\n                                                                <div>Total</div>\n                                                                <div>{item.data.datasets[0].data[0] + item.data.datasets[0].data[1] + item.data.datasets[0].data[2] + item.data.datasets[0].data[3]}</div>\n                                                            </div>\n                                                            <Doughnut data={item.data} />\n                                                        </div>\n                                                        <div className='rp-tc-dougnut-text'>\n                                                            {item && item.title}\n                                                        </div>\n                                                    </Col>)\n                                                }\n                                            })\n                                        }\n                                    </Row>\n                                }\n                            </React.Fragment>\n                        </Collapse>\n                    </Col>\n                </Row>\n\n                {/* <Row>\n                    <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n                        <div className='rp-rs-hw-support'>Automation Syncup and Meetings</div>\n                        <Input readOnly={true} type=\"textarea\" name=\"risksRedFlags\" id=\"risksRedFlags\" rows=\"5\"\n                            placeholder=\"Content...\" value={this.props.selectedRelease && this.props.selectedRelease.AutomationSyncUp} />\n                    </Col>\n                </Row> */}\n\n                {/* {\n                    this.state.domainSelected &&\n                    <div>\n                        <div>\n                            <Button style={{ marginTop: '0.5rem', marginLeft: '0.5rem' }} className='rp-any-button' onClick={() => this.setState({ open: !this.state.open })}>{this.state.open ? 'Close' : 'Create Test Case'}</Button>\n                        </div>\n                        <Collapse isOpen={this.state.open}>\n                            <Row style={{ marginLeft: '1rem', marginTop: '0.2rem' }}>\n                                <Col xs=\"12\" sm=\"12\" lg=\"10\" className=\"rp-summary-tables\" >\n                                    <div className='rp-app-table-header'>\n                                        <span className='rp-app-table-title'>Add Test Case</span>\n                                        <Button title=\"Save\" size=\"md\" color=\"transparent\" className=\"float-right rp-rb-save-btn\" onClick={() => this.confirmToggle()} >\n                                            <i className=\"fa fa-check-square-o\"></i>\n                                        </Button>\n                                    </div>\n\n                                    <Row>\n                                        <Col xs=\"12\" sm=\"12\" md=\"5\" lg=\"5\">\n                                            <Table scroll responsive style={{ overflow: 'scroll', }}>\n                                                <tbody>\n                                                    {\n                                                        [\n                                                            { field: 'Domain', header: 'Domain *', type: 'text' },\n                                                            { field: 'SubDomain', header: 'Sub Domain *', type: 'text' },\n                                                            { field: 'Setup', header: 'Setup', type: 'text' },\n                                                            { field: 'TcID', header: 'Tc ID *', type: 'text', },\n                                                            { field: 'TcName', header: 'Tc Name', type: 'text', restrictWidth: false },\n                                                            { field: 'Scenario', header: 'Scenario', type: 'text' },\n                                                            { field: 'OrchestrationPlatform', header: 'Orchestration Platform', type: 'text' },\n                                                            { field: 'Status', header: 'Status', type: 'text' }\n                                                        ].map((item, index) => (\n                                                            <tr>\n                                                                <td className='rp-app-table-key'>{item.header}</td>\n                                                                <td>\n                                                                    {\n                                                                        item.field === 'Domain' &&\n                                                                        <td className='rp-app-table-key'>{this.state.domainSelected}</td>\n                                                                    }\n                                                                    {\n                                                                        item.field !== 'Domain' &&\n                                                                        <Input\n                                                                            type=\"text\"\n                                                                            key={index}\n                                                                            onChange={(e) => this.setState({ addTC: { ...this.state.addTC, [item.field]: e.target.value } })}\n                                                                            placeholder={'Add ' + item.header}\n                                                                            value={this.state.addTC[item.field]}\n                                                                        />\n                                                                    }\n\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </tbody>\n                                            </Table>\n                                        </Col>\n                                        <Col xs=\"12\" sm=\"12\" md=\"5\" lg=\"5\">\n                                            <Table scroll responsive style={{ overflow: 'scroll', }}>\n                                                <tbody>\n                                                    {\n                                                        [\n\n                                                            { field: 'Description', header: 'Description', type: 'text' },\n                                                            { field: 'ExpectedBehaviour', header: 'Expected Behaviour', type: 'text' },\n                                                            { field: 'Notes', header: 'Notes', type: 'text' },\n\n                                                        ].map((item, index) => (\n                                                            <tr>\n                                                                <td className='rp-app-table-key'>{item.header}</td>\n                                                                <td>\n                                                                    <Input\n                                                                        type=\"textarea\"\n                                                                        key={index}\n                                                                        onChange={(e) => this.setState({ addTC: { ...this.state.addTC, [item.field]: e.target.value } })}\n                                                                        placeholder={'Add ' + item.header}\n                                                                        value={this.state.addTC[item.field]}\n                                                                    />\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </tbody>\n                                            </Table>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n                        </Collapse>\n                    </div>\n                } */}\n                {/* {\n                    this.state.domainSelected &&\n                    <Row>\n                        <Col xs=\"11\" sm=\"11\" md=\"11\" lg=\"11\" className=\"rp-summary-tables\" style={{ 'margin-left': '1.5rem' }}>\n\n                            <AppTable\n                                // onUpdate={(values) => this.updateTestCase(values)}\n                                // editOptions={this.props.currentUser && this.props.currentUser.isAdmin ? [TABLE_OPTIONS.ADD] : []}\n                                title={`Test cases`}\n                                currentUser={this.props.currentUser}\n                                fieldAndHeader={[\n\n                                    { field: 'TcID', header: 'Tc ID', type: 'text', },\n                                    { field: 'TcName', header: 'Tc Name', type: 'text', restrictWidth: false, },\n                                    { field: 'Build', header: 'Build', type: 'text' },\n                                    { field: 'Result', header: 'Result', type: 'text' },\n                                    // { field: 'Description', header: 'Description', type: 'text', restrictWidth: false },\n                                    // { field: 'ExpectedBehaviour', header: 'Expected Behaviour', type: 'text', restrictWidth: false },\n                                    // { field: 'Notes', header: 'Notes', type: 'text' },\n                                    { field: 'Date', header: 'Date', type: 'text' },\n                                    { field: 'Domain', header: 'Domain', type: 'text', },\n                                    { field: 'SubDomain', header: 'Sub Domain', type: 'text' },\n                                ]}\n                                data={\n                                    this.props.selectedTC\n                                }\n                                restrictHeight=\"rp-app-table-medium\"\n                                addOnTop={true}\n                            />\n\n                        </Col>\n                    </Row>\n\n                } */}\n\n\n                < Modal isOpen={this.state.modal} toggle={() => this.toggle()}>\n                    <ModalHeader toggle={() => this.toggle()}>Confirmation</ModalHeader>\n                    <ModalBody>\n                        Are you sure you want to make the changes?\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={() => this.save()}>Ok</Button>{' '}\n                        <Button color=\"secondary\" onClick={() => this.toggle()}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n            </div >)\n\n        // <Pagination>\n        //                         <PaginationItem disabled><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n        //                         <PaginationItem active>\n        //                             <PaginationLink tag=\"button\">1</PaginationLink>\n        //                         </PaginationItem>\n        //                         <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n        //                         <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n        //                         <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n        //                         <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n        //                     </Pagination>\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    currentUser: state.auth.currentUser,\n    selectedRelease: getCurrentRelease(state, state.release.current.id),\n    selectedTC: state.testcase.all[state.release.current.id],\n    // selectedTCStatus: state.testcase.status[state.release.current.id],\n    // doughnuts: getTCStatusForUIDomains(state, state.release.current.id)\n})\nexport default connect(mapStateToProps, { saveTestCase, saveTestCaseStatus, saveSingleTestCase })(ReleaseTestCase);\n\n\n\n\n\n\n\n\n\n\n\n\n/* <div className=\"ag-theme-balham\" style={{ height: '200px', width: '600px' }}>\n                            <AgGridReact\n                                columnDefs={[\n                                    { field: 'Domain', headerName: 'Domain', sortable: true, filter: true },\n                                    { field: 'SubDomain', headerName: 'Sub Domain', sortable: true, filter: true },\n                                    { field: 'Setup', headerName: 'Setup', sortable: true, filter: true },\n                                    { field: 'TcID', headerName: 'Name', sortable: true, filter: true },\n                                    { field: 'TcName', headerName: 'Tc Name', sortable: true, filter: true },\n                                    { field: 'Scenario', headerName: 'Scenario', sortable: true, filter: true },\n                                    { field: 'Description', headerName: 'Description', sortable: true, filter: true },\n                                    { field: 'ExpectedBehaviour', headerName: 'Expected Behaviour', sortable: true, filter: true },\n                                    { field: 'Notes', headerName: 'Notes', sortable: true, filter: true },\n                                    { field: 'OrchestrationPlatform', headerName: 'Orchestration Platform', sortable: true, filter: true },\n                                    { field: 'Status', headerName: 'Status', sortable: true, filter: true }]}\n                                rowData={this.props.testcases\n                                }\n                            >\n                            </AgGridReact>\n                        </div> */"],"sourceRoot":""}