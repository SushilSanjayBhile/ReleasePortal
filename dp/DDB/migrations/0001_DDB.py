# Generated by Django 2.2.7 on 2020-01-22 14:19

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AGGREGATE_TC_STATE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Domain', models.CharField(blank=True, max_length=50)),
                ('Total', models.IntegerField(default=0)),
                ('Automated', models.IntegerField(default=0)),
                ('Pass', models.IntegerField(default=0)),
                ('Fail', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DEFAULT_VALUES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CardType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), blank=True, size=None)),
                ('ServerType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), blank=True, size=None)),
                ('StatusValues', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), blank=True, size=None)),
                ('UserRoles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), blank=True, size=None)),
                ('UserPermission', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), blank=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='LOGS',
            fields=[
                ('logNo', models.AutoField(primary_key=True, serialize=False)),
                ('UserName', models.CharField(default='UNKNOWN', max_length=100)),
                ('Timestamp', models.DateTimeField(auto_now=True)),
                ('RequestType', models.CharField(max_length=10)),
                ('LogData', models.TextField()),
                ('URL', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RELEASES',
            fields=[
                ('ReleaseNumber', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('BuildNumberList', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), blank=True, size=None)),
                ('Engineers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, null=True), blank=True, null=True, size=None)),
                ('CardType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, size=None)),
                ('ServerType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, size=None)),
                ('SetupsUsed', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, size=None)),
                ('QAStartDate', models.DateTimeField(blank=True, null=True)),
                ('TargetedReleaseDate', models.DateTimeField(blank=True, null=True)),
                ('ActualReleaseDate', models.DateTimeField(blank=True, null=True)),
                ('TargetedCodeFreezeDate', models.DateTimeField(blank=True, null=True)),
                ('UpgradeTestingStartDate', models.DateTimeField(blank=True, null=True)),
                ('UpgradeMetrics', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None)),
                ('Customers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, size=None)),
                ('FinalBuild', models.CharField(blank=True, max_length=100)),
                ('FinalOS', models.CharField(blank=True, max_length=100)),
                ('FinalDockerCore', models.CharField(blank=True, max_length=100)),
                ('UbootVersion', models.CharField(blank=True, max_length=100)),
                ('RedFlagsRisks', models.TextField(blank=True)),
                ('AutomationSyncUp', models.TextField(blank=True)),
                ('QARateOfProgress', models.IntegerField(blank=True, default=-1)),
                ('Priority', models.CharField(blank=True, max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TC_INFO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TcID', models.CharField(max_length=200)),
                ('TcName', models.CharField(default='NOT AUTOMATED', max_length=2000)),
                ('Domain', models.CharField(default='UNKNOWN', max_length=50)),
                ('SubDomain', models.CharField(default='UNKNOWN', max_length=50)),
                ('Scenario', models.CharField(blank=True, default='UNKNOWN', max_length=200)),
                ('Description', models.TextField(blank=True)),
                ('ExpectedBehaviour', models.CharField(blank=True, max_length=5000)),
                ('Notes', models.CharField(blank=True, max_length=2000)),
                ('CardType', models.CharField(blank=True, default=None, max_length=100)),
                ('ServerType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default=None, max_length=10), blank=True, size=None)),
                ('OrchestrationPlatform', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default='UNKNOWN', max_length=10), blank=True, default=list, size=None)),
                ('Status', models.CharField(blank=True, default='CREATED', max_length=50)),
                ('Date', models.DateTimeField(auto_now=True)),
                ('Assignee', models.CharField(blank=True, default='UNKNOWN', max_length=50)),
                ('Creator', models.CharField(blank=True, default='ANONYMOUS', max_length=50)),
                ('Tag', models.CharField(blank=True, default='NO TAG', max_length=20)),
                ('Priority', models.CharField(blank=True, default='P4', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='TC_STATUS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TcID', models.CharField(max_length=200)),
                ('TcName', models.CharField(blank=True, max_length=2000)),
                ('Build', models.CharField(blank=True, max_length=1000)),
                ('Result', models.CharField(blank=True, max_length=14)),
                ('Bugs', models.CharField(blank=True, max_length=500)),
                ('Date', models.DateTimeField(auto_now=True)),
                ('Domain', models.CharField(blank=True, max_length=50)),
                ('SubDomain', models.CharField(blank=True, max_length=50)),
                ('CardType', models.CharField(default='BOS/NYNJ', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TC_STATUS_GUI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TcID', models.CharField(max_length=200)),
                ('BuildUbuntuChrome', models.CharField(blank=True, default='BLANK', max_length=20)),
                ('BuildUbuntuFirefox', models.CharField(blank=True, default='BLANK', max_length=20)),
                ('BuildWindowsChrome', models.CharField(blank=True, default='BLANK', max_length=20)),
                ('BuildWindowsFirefox', models.CharField(blank=True, default='BLANK', max_length=20)),
                ('BuildWindowsIE', models.CharField(blank=True, default='BLANK', max_length=20)),
                ('BuildMacSafari', models.CharField(blank=True, default='BLANK', max_length=20)),
                ('ResultUbuntuChrome', models.CharField(blank=True, default='NOT TESTED', max_length=20)),
                ('ResultUbuntuFirefox', models.CharField(blank=True, default='NOT TESTED', max_length=20)),
                ('ResultWindowsIE', models.CharField(blank=True, default='NOT TESTED', max_length=20)),
                ('ResultWindowsChrome', models.CharField(blank=True, default='NOT TESTED', max_length=20)),
                ('ResultWindowsFirefox', models.CharField(blank=True, default='NOT TESTED', max_length=20)),
                ('ResultMacSafari', models.CharField(blank=True, default='NOT TESTED', max_length=20)),
                ('Bug', models.CharField(blank=True, default='NO BUG', max_length=500)),
                ('Date', models.DateTimeField(blank=True)),
                ('Domain', models.CharField(blank=True, default='UNKNOWN', max_length=50)),
                ('SubDomain', models.CharField(blank=True, default='UNKNOWN', max_length=50)),
                ('CardType', models.CharField(blank=True, default='BLANK', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='USER_INFO',
            fields=[
                ('Name', models.CharField(blank=True, max_length=100)),
                ('UserName', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('Role', models.CharField(default='ENGG', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SETUP_INFO',
            fields=[
                ('SetupName', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('Inventory', models.CharField(max_length=5000)),
                ('ClusterState', models.CharField(choices=[('Failed', 'Failed'), ('Good', 'Good')], max_length=6)),
                ('ClusterStatus', models.CharField(choices=[('Idle', 'Idle'), ('In-use', 'In-Use')], max_length=6)),
                ('CurrentUserId', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='User', to='DDB.USER_INFO')),
                ('OwnerId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Owner', to='DDB.USER_INFO')),
            ],
        ),
        migrations.CreateModel(
            name='SANITY_RESULTS',
            fields=[
                ('SanityId', models.AutoField(primary_key=True, serialize=False)),
                ('Tag', models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Sanity', 'Sanity')], default='Daily', max_length=6)),
                ('Build', models.CharField(max_length=10)),
                ('Result', models.CharField(choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10)),
                ('Logs', models.TextField()),
                ('Timestamp', models.DateTimeField(blank=True)),
                ('Setup', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DDB.SETUP_INFO')),
            ],
        ),
    ]
