[
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "Basic steps for all the TCs : \n1) Need to create 2 clusters (PC & DRC) for these TCs. \nPC = Primary Cluster, DRC = Disaster Recovery Cluster\n2) Enable host network on both cluster. Just to make sure DRC has the capability to become PC in case of disaster\n3) Login to the DRC : dctl -s <DRC-cluster-vip> login. This will create the config in ~/.kube directory.\n4) Copy the above config from DRC to PC cluster at some location\nscp DRC:~/.kube/config  kubeconfig\n5) Create secret named \u201cremote-kubeconfig\u201d on PC.\nkubectl create secret -n diamanti-system generic remote-kubeconfig --from-file=kubeconfig\n6) Run the helm chart for volume replicator.\ncp /usr/share/diamanti/ui/helm/charts/volume-replicator-0.1.0.tgz .\ntar -xzf volume-replicator-0.1.0.tgz\ncd volume-replicator\nhelm install -n <random-name> . \n7) For manually created volumes, replication can't be run on raw device. You need to create fileSystem, mount the volume, create files, etc. checksum should be calculated for the files in the mounted directory and not nvme device",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.0",
        "Scenario / Category": "Restore Basic",
        "Test Description": "1) Create fio pods with local, remote and mirrored volumes using dynamic PVCs across a few namespaces. Use fsTypes ext3, ext4 and xfs.\n2) Create few PVCs & volumes manually (local, remote & mirrored). Attach them. Create file systems (ext3, ext4 and xfs). Mount the volumes. \n3) Allow the pods to run for few mins.\n4) Run fio manually on the manually created volumes (write to file inside the mounted directory). Add some other files and directories also in the mounted directory. Calculate checksum of some of the files (cksum1). Detach some manually created volumes. Don't detach some. \n5) Create Volume Replicator Config in each namespace and list the PVC names to be backedup in each namespace. Mention the storage classes that would be used in DRC for some PVCs. Don't mention it for some PVCs.\n6) PVCs with the same name should be created on the DRC using the given storage classes. If the storage class isn't mentioned or doesn't exist on DRC, default storage class will be used.\n7) Replicator will create a nfs server on the DRC which will attach the volumes.\n8) Replicator will create a kubernetes cronjob on the PC. \n9) Kubernetes cronjob will create a replication job periodically based on the given schedule.\n10) The replication job will create snapshot out of those PVCs and LCVs out of snapshots and create rsync agent pods.\n11) Volumes on DRC are mounted as NFS volume to rsync agent pod. \n12) These rsync agent pods will rsync the data from LCVs to the corresponding volumes on DRC.\n13) Wait for replication job to complete.\n14) After the replication job is complete, the cronjob will go in Suspended mode.\n15) Replicator will now create snapshots of all the volumes on the DRC. Snapshot should be in Available state. If there is any error during replication, snapshot won't be created.\n16) After creation of snapshots, the cronjob should resume. \n17) On the DRC side, attach the manually created volumes. Mount them. The files and directories created in step4 should appear. Calculate checksum of the files (cksum2). \n18) On the DRC side, create LCVs out of the snapshots of manually attached volumes. Mount them. The same files and directories created in step4 will appear. Calculate checksum of the files (cksum3)\n19) cksum1 should match with cksum2 and cksum3",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.1",
        "Scenario / Category": "",
        "Test Description": "Change the maxDuration and maxNumSnapshots values in VolumeReplicationConfig spec. Ensure that these values are obeyed. If a PVC replication is taking more than maxDuration, the replication job will fail and terminate. All PVCs for the VolumeReplicationConfig will fail",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": " "
    },
    {
        "TC ID": "S_Replicate-1.2",
        "Scenario / Category": "",
        "Test Description": "Repeat S_Replicate-1.0. While the replication cronjob is still running, edit the Volume Replicator Config and add some new PVCs and delete some old PVCs from the list.\nIn the next iteration of replication job, replication of the new PVCs should happen and old PVCs should be retained on both PC and DRC side",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": " "
    },
    {
        "TC ID": "S_Replicate-1.3",
        "Scenario / Category": "",
        "Test Description": "Run S_Replicate-1.0 with multiple DRC clusters. Will require multiple volume replicators on the PC ",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.4",
        "Scenario / Category": "",
        "Test Description": "Run replication job for large size PVCs. Set maxDuration accordingly in the VolumeReplicationConfig",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.5",
        "Scenario / Category": "",
        "Test Description": "Run replication job for PVC where no data is written on the volume. Should succeed and rsync pod should complete immediately.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.6",
        "Scenario / Category": "",
        "Test Description": "Run replication job for PVC where data is fully written on the volume (fill_device=1). Should succeed.\nCalculate cksum of the files on the volumes",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.7",
        "Scenario / Category": "",
        "Test Description": "On the DRC, attach the PVC to a pod after replication job is completed. Volume should mount and IOs should start. check iostat output",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-1.8",
        "Scenario / Category": "",
        "Test Description": "On the DRC, attach a mirrored PVC to a pod after replication job is completed. \nThis pod should write a different data on the PVC. Delete the pod. Create snapshot. Create LCV.\nRun the replication job again for this PVC. After replication completes and snapshot is created, create LCV of this PVC on DRC and its corresponding PVC on PC.\nCalculate cksum of the files on the LCV. Data should match for both these LCVs",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-2.0",
        "Scenario / Category": "Reboot Cases",
        "Test Description": "While the replication job is running, reboot the node where rsync agent pods are running. The pod should fail. Next iteration should succeed.\nVerify data after next iteration succeeds",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-2.1",
        "Scenario / Category": "",
        "Test Description": "While the replication job is running, reboot the node where Volume replicator is running. \nThe replicator should restart on another node. The rsync agent pods that are already running shouldn't fail (unless the agent pod is on the same node as that of replicator)",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-2.2",
        "Scenario / Category": "",
        "Test Description": "While the replication job is running, reboot the node where PVC exist while rsync pods are copying the data. Rync agent pods should report the failure. Verify data after next iteration succeeds",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-2.3",
        "Scenario / Category": "",
        "Test Description": "While the replication job is running, reboot the node where nfs server is running. The replication job should fail. rsync agent pods should report error. If the nfs server node is up before completion of job, rsync should restart again",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-3.0",
        "Scenario / Category": "Plex operations",
        "Test Description": "Run replication job for a mirrored PVC. While the data is being rsynced, delete a target plex of the PVC on the DRC side.\nPlex should get deleted. Verify data on all the other plexes.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-3.1",
        "Scenario / Category": "",
        "Test Description": "Run replication job for a mirrored PVC. While the data is being rsynced, reboot a node at DRC where one of the plex exists.\nReplication job should succeed. \nPlex should get resynced after the node is up. Verify data on all the plexes after reync completes.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-3.2",
        "Scenario / Category": "",
        "Test Description": "Run replication job for a single plex PVC. While the data is being rsynced, add a plex to the PVC on the DRC side.\nPlex should get added and start resyncing. Verify data on all the plexes after resync completes.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-3.3",
        "Scenario / Category": "",
        "Test Description": "Write data on large volume. Run replication job. Allow it to complete.\nWrite data such that it will modify only a few blocks on the volume on PC. Run replication job. \nVerify the data size written on PVC at DRC side",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.0",
        "Scenario / Category": "Negative Tests",
        "Test Description": "Give invalid details in the kubeconfig. Replicator should fail.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.1",
        "Scenario / Category": "",
        "Test Description": "Fail the nfs server such that it's IP address gets changed. Volume replicator should detect this change and update the cronjob. Next replication job should pick it up and work successfully.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.2",
        "Scenario / Category": "",
        "Test Description": "Expire the session on DRC (kubeconfig becomes invalid). Volume replicator should fail. Will have to create replicator with new kubeconfig.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.3",
        "Scenario / Category": "",
        "Test Description": "Expire the session on DRC. Login again and generate the new kubeconfig. Volume replicator should detect this and autoupdate the kubeconfig information.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.4",
        "Scenario / Category": "",
        "Test Description": "Bring down the management IP of DRC. Volume replicator will keep trying to establish a connection. \nEven after 15 mins if connection isn't established with the DRC, volume replicator pod will fail.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.5",
        "Scenario / Category": "",
        "Test Description": "Bring down the management IP of DRC. Volume replicator will keep trying to establish a connection. \nAfter 5 mins, bring up the management IP. Keep the data network up. Volume replicator should be able to establish connection with the DRC\nCronjob should succeed in next iteration",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.6",
        "Scenario / Category": "",
        "Test Description": "Run replication job for a single plex and mirrored PVC. Allow it to complete one iteration.\nBefore the next iteration starts, increase the size of the volume on PC side. Write data on the increased size. \nRun the replication job. Verify data on the PVCs at PC and DRC sides.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "This is not supported today. Manual resize is needed on both clusters for this to work",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-4.7",
        "Scenario / Category": "",
        "Test Description": "Run replication job for a single plex and mirrored PVC. Allow it to complete one iteration.\nBefore the next iteration starts, increase the size of the volume on DRC side. \nRun the replication job. Verify data on the PVCs at PC and DRC sides.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Manual resize is needed on both clusters for this to work",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-5.0",
        "Scenario / Category": "Stress Scenarios",
        "Test Description": "Create max number of PVCs. Run replication job for all the PVCs at the same time",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-5.1",
        "Scenario / Category": "",
        "Test Description": "Create a PVC. Create max snapshot for the PVC manually (16) on PC.\nRun replication job. It will fail to create snapshot for the volume. \nReplication job should fail.\nDelete one of the manually created snapshots. \nNext iteration of replication job should succeed",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-5.2",
        "Scenario / Category": "",
        "Test Description": "On the DRC, create 16 snapshots manually for a PVC. \nSchedule replication job for this PVC on PC side.\nThe replication job should fail.\nDelete one manually created snapshot. Next iteration should run the job successfully",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-6.0",
        "Scenario / Category": "General",
        "Test Description": "Ensure that the data transfer for volume replication is going through data network",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Replicate-7.0",
        "Scenario / Category": "Kubernetes Way",
        "Test Description": "Study how replication is done in Kubernetes way. Add test cases for it.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "There is no replication support in kubernetes yet",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Total",
        "Release": 25.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Ran",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "% Ran",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Pass",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "% Pass",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Automated",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Automated %",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    }
]