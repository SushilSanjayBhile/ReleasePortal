[
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "Host network needs to be created for all the following testcases",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.0",
        "Scenario / Category": "",
        "Test Description": "Create nfs server pod on the same cluster. Create multiple pods using static PVCs with different filesystems (ext3, ext4, xfs). Run backup controller job / cronjob. Check whether job gets created and it creates backup agent pods, snapshots, LCVs and copies the data from pod to the desired destination on nfs server. After backup completion, LCV will get deleted but snapshot will be retained.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.1",
        "Scenario / Category": "",
        "Test Description": "Create nfs server pod on the same cluster. Create multiple pods using dynamic PVCs with different filesystems (ext3, ext4, xfs). Run backup controller job / cronjob. Check whether job gets created and it creates backup agent pods, snapshots, LCVs and copies the data from pod to the desired destination on nfs server. After backup completion, LCV will get deleted but snapshot will be retained.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.2",
        "Scenario / Category": "",
        "Test Description": "Create nfs server pod on different cluster. Create multiple pods using static PVCs with different filesystems (ext3, ext4, xfs). Run backup controller job / cronjob. Check whether job gets created and it creates backup agent pods, snapshots, LCVs and copies the data from pod to the desired destination on nfs server. After backup completion, LCV will get deleted but snapshot will be retained.",
        "Automation TC Name": "BackupController.BasicStaticPvcWithLocalRemoteMirroredVols",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.3",
        "Scenario / Category": "",
        "Test Description": "Create nfs server pod on the different cluster. Create multiple pods using dynamic PVCs with different filesystems (ext3, ext4, xfs). Use default storage classes in PVC specs. Run backup controller job / cronjob. Check whether job gets created and it creates backup agent pods, snapshots, LCVs and copies the data from pod to the desired destination on nfs server. After backup completion, LCV will get deleted but snapshot will be retained.",
        "Automation TC Name": "BackupController.Basic",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.4",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.3 using manually created storage classes.",
        "Automation TC Name": "BackupController.BasicDynamicPvcWithLocalRemoteMirroredVols",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.5",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.2 using local, remote and mirrored pods",
        "Automation TC Name": "BackupController.BasicStaticPvcWithLocalRemoteMirroredVols",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.6",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.3 using local, remote and mirrored pods",
        "Automation TC Name": "BackupController.BasicDynamicPvcWithLocalRemoteMirroredVols",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.7",
        "Scenario / Category": "",
        "Test Description": "Create nfs server pod on the different cluster. Create multiple pods using dynamic PVCs with different filesystems (ext3, ext4, xfs). Copy some more files and directories to the location where the pods are mounted (eg /data directory in case of fio pods). Calculate cksum of some files. Run backup controller job / cronjob. Check whether job gets created and it creates backup agent pods, snapshots, LCVs and copies the data from pod to the desired destination on nfs server. The backup should contain all the files created by pod and manually copied by us. Check cksum of the files after backup on nfs server. The directory structure should also be maintained after the backup.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.8",
        "Scenario / Category": "",
        "Test Description": "Create nfs server pod on the different cluster. Create 15+ pods using dynamic PVCs with different filesystems (ext3, ext4, xfs). The pods should be on different namespaces (Atleast create in 8 namespaces including default, diamanti-system, kube-system). Copy some more files and directories to the location where the pods are mounted (eg /data directory in case of fio pods). Calculate cksum of some files. Run backup controller job / cronjob. Check whether job gets created and it creates backup agent pods, snapshots, LCVs and copies the data from pod to the desired destination on nfs server. The backup should contain all the files created by pod and manually copied by us. Check cksum of the files after backup on nfs server. The directory structure should also be maintained after the backup.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.9",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.8 by creating the cronjob in namespaces other than diamanti-system. Try in kube-system, default and some other user created namespaces",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.10",
        "Scenario / Category": "",
        "Test Description": "Create 8 backup controller cronjobs to take backup of pv associated with same pvc. And Schedule them at regular intervals of time. No 2 backup agents will run at the same time. It will remain in Pending state and will schedule after the previous one completes",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.11",
        "Scenario / Category": "",
        "Test Description": "Create pods with PV claim such a way that every node will have pod. Create 8 backup controller cronjob to take backup of pv associated with each PVC. And Schedule them at same time.  Need to change concurrencyPolicy in the backupjob spec file",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.12",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.2 by setting FQDN instead of IP for VIP in backupjob spec",
        "Automation TC Name": "BackupController.BasicDynamicPvcWithLocalRemoteMirroredVols",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.13",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.2 by setting FQDN instead of IP for nfs server IP in backupjob spec",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "email from Anmol : \nSteps to use fqdn with nfs plugin :\n\n    Create NFS server on autotb7. {eg. vip: 172.16.19.55 }\n    Add kube-dns nameserver of autotb7 to /etc/resolve.conf of all nodes in autotb10.\n        cat /etc/resolv.conf\n        ; generated by /usr/sbin/dhclient-script\n        nameserver 172.16.19.55     #kube-dns nameserver of cluster 'x' i.e. vip of cluster 'x'\n        search eng.diamanti.com.\n        nameserver 172.16.1.2\n        nameserver 8.8.8.8\n    Run Nfs client on autotb10 with spec.volumes.flexVolume.options.Server: fqdn\n\n    The fqdn of the nfs server is svc-name.svc-namespace.svc.pod-DNS-domain\n    example\n\n        [diamanti@appserv53 ~]$ kubectl create -f nfs-server-1.yaml \n        persistentvolume/nfs-server-pv-1 created\n        persistentvolumeclaim/nfs-server-pvc-1 created\n        replicationcontroller/nfs-server-1 created\n        service/nfs-server-1 created\n        [diamanti@appserv53 ~]$ kubectl get pods\n        NAME                 READY   STATUS    RESTARTS   AGE\n        nfs-server-1-w44jw   1/1     Running   0          12s\n        [diamanti@appserv53 ~]$ kubectl get svc\n        NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                      AGE\n        kubernetes     ClusterIP   10.0.0.1     <none>        443/TCP                      151m\n        nfs-server-1   ClusterIP   None         <none>        2049/TCP,20048/TCP,111/TCP   16s\n\n    For above svc the fqdn will be \"nfs-server-1.default.svc.test.eng.datawisesystems.com\"\n\n\n        [diamanti@appserv53 ~]$ podEnter nfs-server-1-w44jw\n        [root@nfs-server-1-w44jw /]# ping nfs-server-1.default.svc.test.eng.datawisesystems.com\n        PING nfs-server-1.default.svc.test.eng.datawisesystems.com (172.16.179.6) 56(84) bytes of data.\n        64 bytes from nfs-server-1-w44jw (172.16.179.6): icmp_seq=1 ttl=64 time=0.035 ms\n        64 bytes from nfs-server-1-w44jw (172.16.179.6): icmp_seq=2 ttl=64 time=0.040 ms\n        64 bytes from nfs-server-1-w44jw (172.16.179.6): icmp_seq=3 ttl=64 time=0.048 ms\n        64 bytes from nfs-server-1-w44jw (172.16.179.6): icmp_seq=4 ttl=64 time=0.034 ms\n        64 bytes from nfs-server-1-w44jw (172.16.179.6): icmp_seq=5 ttl=64 time=0.044 ms\n        64 bytes from nfs-server-1-w44jw (172.16.179.6): icmp_seq=6 ttl=64 time=0.033 ms\n        ^C\n        --- nfs-server-1.default.svc.test.eng.datawisesystems.com ping statistics ---\n        6 packets transmitted, 6 received, 0% packet loss, time 4999ms\n        rtt min/avg/max/mdev = 0.033/0.039/0.048/0.005 ms",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.14",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.2 by setting mountOptions as nfsvers=3 and nfsvers=4",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.15",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.2 by setting selinux in pluginOptions in cronjob spec. Make sure the file permissions including SELinux labels are maintained in backup",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.16",
        "Scenario / Category": "",
        "Test Description": "Create pods with pvcs. Create backup controller cronjob with maxNumSnapshots as 8 and schedule backup after every 10 / 15 mins. When the 9th backup controller agent pod gets created, it should delete the 1st snapshot that was created for the PVC and create new snapshot and lcv out of snapshot and trigger backup process from lcv to specified target. 10th agent will delete the 2nd snapshot and so on",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.17",
        "Scenario / Category": "",
        "Test Description": "Test the numDaysToKeep option in the job spec. The backups older than the set days should get deleted",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.18",
        "Scenario / Category": "",
        "Test Description": "Create pods with pvcs. Allow pods to run for some time. Delete some of the pods. There should be some pods which has PVCs in attached state and some PVCs in available state. Set the activeVolumesOnly parameter in job spec to false. Now run the backupcontroller. It should backup all the PVCs that are in attached as well as in available state",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.19",
        "Scenario / Category": "",
        "Test Description": "Vary the cpuResource and memoryResource parameters in the job spec and verify whether the appropriate reservations are made in the cluster for the backup agents. Also check the kubectl describe pod output for the reservations",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.20",
        "Scenario / Category": "",
        "Test Description": "Vary the maxConcurrentJobs parameter and verify whether the set number of jobs are running at given instant of time",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.21",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.8 with backup plugin as \"rsync\"",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.22",
        "Scenario / Category": "",
        "Test Description": "Create 8 fio pods, create backup controller cronjobs to take backup of all pv's associated with pvc's in specific namespace.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.23",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.8 with snapshotPromoter parameter as any value other than \"snapshot-promoter\". Use manually created storage class which will use perfTier as high and medium. (By default snapshot-promoter sc uses perfTier as best-effort)",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.24",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.8 with \"mountOptions\":\"soft\". Fail the nfs server during backup operation. If the soft option is specified, then the NFS client (backup agent) fails an NFS request after retransmissions have been sent, causing the NFS client to return an error to the calling application. So the backup agent will go in Error state if the nfs server doesn't respond.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.25",
        "Scenario / Category": "",
        "Test Description": "Ensure traffic from backup agent to nfs server goes through host-network interface.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.26",
        "Scenario / Category": "",
        "Test Description": "Make sure the backup create timestamps are close to the backup cron job schedule",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.27",
        "Scenario / Category": "",
        "Test Description": "Make sure at any point of time only one completed backup job is in \"kubectl get pods\" output unless configured otherwise.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.28",
        "Scenario / Category": "",
        "Test Description": "Create pods with PVCs such that most of the available storage space on node gets exhausted. There should be space only for creation of snapshots. LCVs shouldn't require any space (allocation ratio is 0). The backup job process should complete successfully.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.29",
        "Scenario / Category": "",
        "Test Description": "Create single pod with PVC big enough like 3TB to 6TB. Create cronjob such that backup is done after every few hours. Verify that backup completes successfully for large size volumes ",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.30",
        "Scenario / Category": "",
        "Test Description": "Verify users with volume-edit, volumeclaim-edit, container-edit has permission to create and execute backup jobs. Will not work in diamanti-system namespace. Should be tried in user's namespace",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.31",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.8 with 64 volumes per node. Stress across all nodes",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-1.32",
        "Scenario / Category": "",
        "Test Description": "Create a backup directory dir1 on nfs server. Repeat SS_BackupController-1.3 TC by creating pods in different namespaces and using dir1 as backup directory in cronjob. Now create a new directory dir2 on nfs server. Don't delete the previous dir1 on server. Edit the cronjob to use backup directory as dir2. Run the backup. Ensure that the new backup files are going to dir2 and not dir1",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-2.1",
        "Scenario / Category": "",
        "Test Description": "Test SS_BackupController-1.3 using helm chart for backup controller bundled with diamanti rpm",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-2.2",
        "Scenario / Category": "",
        "Test Description": "Test SS_BackupController-1.8 using helm chart for backup controller bundled with diamanti rpm",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-2.3",
        "Scenario / Category": "",
        "Test Description": "Test SS_BackupController-1.13 to SS_BackupController-1.20 using helm chart for backup controller bundled with diamanti rpm",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-2.4",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.2 by creating backup controller in a user\u2019s namespace, change \u201cserviceAccountName\" in values.yaml to \u201cdefault\u201d. And namespace in cronjob.yaml/job.yaml to user\u2019s namespace instead of diamanti-system.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-2.5",
        "Scenario / Category": "",
        "Test Description": "Concurrent backupcontroller cannot be run. We have anti affinity settings in the helm charts. Only one agent pod should run at any point in time. Others should remain in pending state.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-2.6",
        "Scenario / Category": "",
        "Test Description": "Repeat SS_BackupController-1.28 using helm chart for backup controller bundled with diamanti rpm",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.1",
        "Scenario / Category": "Negative tests",
        "Test Description": "Make nfs server unreachable. Try running backup now using cronjob / helm chart. Verify proper error messages are reported in pod logs",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.2",
        "Scenario / Category": "",
        "Test Description": "Make file system on nfs server unresponsive. Try running backup now using cronjob / helm chart. Verify proper error messages are reported in pod logs",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.3",
        "Scenario / Category": "",
        "Test Description": "Exhaust the space in backup directory on nfs server. Start the backup. Verify proper error messages are reported in pod logs",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.4",
        "Scenario / Category": "",
        "Test Description": "Exhaust complete space on node where PVs are scheduled. No space for snapshot. Now try running backup. Should fail",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.5",
        "Scenario / Category": "",
        "Test Description": "Start backup process. Make the nfs server unreachable when backup process is in progress. It should fail",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.6",
        "Scenario / Category": "",
        "Test Description": "Mention invalid VIP or nfs server IP or invalid PVC. Verify proper error messages in pod logs",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-3.7",
        "Scenario / Category": "",
        "Test Description": "Fail a backupjob due to any of the above reasons. Ensure that next iteration of job, replaces the old failed job",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-4.1",
        "Scenario / Category": "",
        "Test Description": "Restore the volumes backed-up by SS_BackupController-1.8 TC. Check whether the directory structure and files are restored correctly. Calculate cksum of files again",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-4.2",
        "Scenario / Category": "",
        "Test Description": "Restore the volumes backed-up by SS_BackupController-1.15 TC. Check whether the selinux labels are also restored",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SS_BackupController-5.1",
        "Scenario / Category": "",
        "Test Description": "Reboot node while running SS_BackupController-1.8 TC, while backup is in progress. Backup job should continue after the node comes up. Verify data",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Total",
        "Build No": 48.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Ran",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "%",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Pass",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "%",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated",
        "Build No": 6.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated %",
        "Build No": 12.5,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    }
]