[
    {
        "TC ID": "N_Basic-1.0",
        "Scenario / Category": "",
        "Test Description": "ping pod network from outside (Public nw)",
        "Automation TC Name": "Network.PingPodFromOutside",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Ping should Pass"
    },
    {
        "TC ID": "N_Basic-1.1",
        "Scenario / Category": "",
        "Test Description": "ping pod network from outside (Private nw)",
        "Automation TC Name": "Network.PingPodFromOutside",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Ping should fail"
    },
    {
        "TC ID": "N_Basic-1.2",
        "Scenario / Category": "",
        "Test Description": "ping pod network from outside (End point)",
        "Automation TC Name": "Network.PingPodFromOutside",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Ping should Pass"
    },
    {
        "TC ID": "N_Basic-1.3",
        "Scenario / Category": "",
        "Test Description": "ping pod network from outside (Invalid Vlan)",
        "Automation TC Name": "Network.PingPodFromOutside",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Ping should fail"
    },
    {
        "TC ID": "N_Basic-1.4",
        "Scenario / Category": "",
        "Test Description": "ping pod (without any network) from outside ",
        "Automation TC Name": "Network.PingPodFromOutside",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Mgmt IP for pod will need to be extracted and then pinged from outside\nPod IP is reachable from the node where it resides. Can not ping pod IP from testserver3/other nodes.\nUse : endpointt : \"none\" in spec file."
    },
    {
        "TC ID": "N_Basic-1.5",
        "Scenario / Category": "",
        "Test Description": "ping from pod to external ip (Public nw)\n1. Check default gw is for public nw\n2. Check ping is getting routed through public nw GW",
        "Automation TC Name": "Network.PingExternalIP",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "traceroute google.com\nroute -n"
    },
    {
        "TC ID": "N_Basic-1.6",
        "Scenario / Category": "",
        "Test Description": "ping from pod to external ip (Private nw)\n1. Check default gw is for mgmt interface\n2. Check ping is getting routed through mgmt interface GW",
        "Automation TC Name": "Network.PingExternalIP",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.7",
        "Scenario / Category": "",
        "Test Description": "ping from pod to external ip (End point)\n1. Check default gw is for public nw\n2. Check ping is getting routed through public nw GW",
        "Automation TC Name": "Network.PingExternalIP",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.8",
        "Scenario / Category": "",
        "Test Description": "ping from pod to external ip (Invalid Vlan)\n1. Check default gw is for public nw (Invalid vlan)\n",
        "Automation TC Name": "Network.PingExternalIP",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Ping should fail"
    },
    {
        "TC ID": "N_Basic-1.9",
        "Scenario / Category": "",
        "Test Description": "ping from pod to external ip without any nw/endpoint\n1. Check default gw is for mgmt interface",
        "Automation TC Name": "Network.PingExternalIP",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.10",
        "Scenario / Category": "",
        "Test Description": "ping pod to pod (Public nw)",
        "Automation TC Name": "Network.PingBetweenTwoPods ",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.11",
        "Scenario / Category": "",
        "Test Description": "ping pod to pod (Private nw)",
        "Automation TC Name": "Network.PingBetweenTwoPods ",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.12",
        "Scenario / Category": "",
        "Test Description": "ping pod to pod (End point)",
        "Automation TC Name": "Network.PingBetweenTwoPods ",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.13",
        "Scenario / Category": "",
        "Test Description": "ping pod to pod (Invalid Vlan)",
        "Automation TC Name": "Network.PingBetweenTwoPods ",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Ping should fail"
    },
    {
        "TC ID": "N_Basic-1.14",
        "Scenario / Category": "",
        "Test Description": "Ping pod to pod ( which are on different networks)",
        "Automation TC Name": "Network.PingBetweenTwoPods ",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Test with valid vlan and public network"
    },
    {
        "TC ID": "N_Basic-1.15",
        "Scenario / Category": "",
        "Test Description": "Ping gateway inside the pod ( Valid vlan)",
        "Automation TC Name": "Network.GatewayPing",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.16",
        "Scenario / Category": "",
        "Test Description": "Ping gateway inside the pod ( Invalid vlan)",
        "Automation TC Name": "Network.GatewayPing",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-1.17",
        "Scenario / Category": "",
        "Test Description": "1.Make sure that 'default' network is already created.\n2.Create a pod but don't mention any network inside podspec. \n3. Check if pod consumes ip from 'default' network.",
        "Automation TC Name": "Network.PodCreateWithoutNetworkInPodSpec",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Pod goes into running state and it takes IP from 'default' network if no network is mentioned."
    },
    {
        "TC ID": "N_Basic-1.18",
        "Scenario / Category": "",
        "Test Description": "1.Make sure that there is no 'default' network.\n2.Create a pod but don't mention any network inside podspec. \n3. Check if pod remains in pending state for default network.",
        "Automation TC Name": "Network.PodCreateWithoutNetworkInPodSpec",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Pod remained in Pending state for 'default' nw."
    },
    {
        "TC ID": "N_Basic-1.19",
        "Scenario / Category": "",
        "Test Description": "Ping iperf server name (dns name) from iperf client pod",
        "Automation TC Name": "Network.PingWithDnsName",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-2.0",
        "Scenario / Category": "",
        "Test Description": "traffic between two pods (iperf)",
        "Automation TC Name": "Network.BasicPod",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "This case is covered in Network.BasicPod\nSo can we remove it ?"
    },
    {
        "TC ID": "N_Basic-2.1",
        "Scenario / Category": "",
        "Test Description": "Create iperf server & client on same machine and verify whether they are able to communicate with each other",
        "Automation TC Name": "Network.ValidateTrafficAfterPodsOnSameNode",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-2.2",
        "Scenario / Category": "",
        "Test Description": "Create iperf server pod & client-rc pod. Both be on different nodes. Shutdown a node where client-rc is reside. After node shutdown, client rc pod will migrate to other node in cluster. Check whether tracffic is running between them.\nPower on the node.",
        "Automation TC Name": "Network.ValidateTrafficAfterIperfClientRcPodEvacuation",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "-Do not use ipmi tool to shutdown/reboot. \n-If we use ipmi tool for this test case, client pod does not go in to Running state\n-Use os_based commands to shutdown/reboot node to test this case."
    },
    {
        "TC ID": "N_Basic-2.3",
        "Scenario / Category": "",
        "Test Description": "Run multiple iperf server-client pairs with restart policy: 'Never'",
        "Automation TC Name": "Network.IperfPodsWithRestartPolicyNever",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-2.4",
        "Scenario / Category": "",
        "Test Description": "Create iperf server & client on diiferent machine and verify whether they are able to communicate with each other",
        "Automation TC Name": "Network.BasicPod",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-2.5",
        "Scenario / Category": "",
        "Test Description": "- Create 8 iperf servers using blue network\n- Create 8 iperf client using default network\n- Check whether they are in running state\n- Validate its throughtput.",
        "Automation TC Name": "TC needs improvement in automation code : Network.UseDefaultNonDefaultNetworkForPod",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-2.6",
        "Scenario / Category": "",
        "Test Description": "Create 64 pods using 64 vlan (need to create 64 networks) and check if they are in running state.",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Basic-2.7",
        "Scenario / Category": "",
        "Test Description": "1. Create some pods with private network.\n2. Create some pods with public network.\n3. Try to ping pods ( in step 2) from pods created in step 1.\n4. Vice versa",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "A) Private pod to Google.com (Public network), ping will work.\nB) Public pod to private pod, ping will not work."
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Negative-1.0",
        "Scenario / Category": "Negative",
        "Test Description": "Create network which has ClusterIp range (10.X.X.X)",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Network creation should fail",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Negative-1.1",
        "Scenario / Category": "",
        "Test Description": "Create network which has Management Ip range (172.16.6.X)",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Network creation should fail",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Negative-1.2",
        "Scenario / Category": "",
        "Test Description": "Create network which has Management0 Ip range (172.20.0.X)",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Network creation should fail",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "N_Negative-1.3",
        "Scenario / Category": "",
        "Test Description": "Create network which has Management Ip range (172.16.19.X)",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Network creation should fail",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Total",
        "Build No": 32.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Ran",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "%",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Pass",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "%",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated",
        "Build No": 26.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated %",
        "Build No": 81.25,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    }
]