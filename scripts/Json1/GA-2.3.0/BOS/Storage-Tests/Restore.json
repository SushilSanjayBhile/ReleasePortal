[
    {
        "TC ID": "S_Restore-1.0",
        "Scenario / Category": "Restore Basic",
        "Test Description": "1) Create a local, remote and mirrored volume. Run fio on the volumes with --size=size1. Calculate cksum of the volumes across all plexes (cksum1). \n2) Create snapshot of the volumes. \n3) Store the values of FBM and L1 usage of the node where the snapshot exists. (val1)\n4) Run more IOs on the volumes with different pattern and --size=size2. size2 should be greater than size1. Calculate cksum of the volumes across all plexes (cksum2). \n5) cksum2 should not be equal to cksum1. \n6) Calculate the values of FBM and L1 usage on the node where the snapshot exists (val2). val2 should be greater than val1.\n7) Detach the volumes. Restore the data from snapshot to the volumes. Attach the volumes. \n8) Allow all plexes to complete resync. \n9) Calculate cksum of the volumes across all plexes (cksum3). \n10) cksum3 should match with cksum1\n11) Calculate the values of FBM and L1 usage on the node where the snapshot exists. (val3)\n12) val1 should match with val3\n13) Add a plex to all the volumes. Allow the plexes to resync.\n14) After resync completes, calculate cksum across all plexes (cksum4)\n15) cksum4 should match with cksum3",
        "Automation TC Name": "VolumeRestore.Basic",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-86",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-1.1",
        "Scenario / Category": "Restore from any random snapshot",
        "Test Description": "1) Create local, remote and mirrored volumes. \n2) Run IOs on the volume. Calculate cksum of the volume (cksum1). \n3) Create snapshot (snap1) of the volume. Run more IOs on the volume with different pattern. Calculate cksum of the volume (cksum2). \n4) cksum2 should not be equal to cksum1. \n5) Repeat the steps 2) to 4) thrice to get snap2, snap3 and cksum3, cksum4, cksum5, etc.\n6) Try restoring the volumes multiple times in random order of snapshot creation i.e from snap2, then snap4, then snap1, etc. \n7) At every restore, calculate the cksum and validate it against the corresponding cksum calculated initially after running IOs. They should match.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "Not supported in 2.2.0. command should fail while trying to restore from older snapshot",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": " "
    },
    {
        "TC ID": "S_Restore-1.2",
        "Scenario / Category": "Restore after creating LCV",
        "Test Description": "1) Create local, remote and mirrored volumes. Run IOs on the volumes. Calculate cksum of the volumes (cksum1). \n2) Create snapshot of the volumes. Create LCV out of the snapshot. Attach it. Calculate cksum (cksum2). \n3) cksum2 should match cksum1. \n4) Run IOs on the LCVs with different pattern. Calculate cksum of LCVs (cksum3). \n5) cksum3 should not match cksum2.\n6) Calculate FBM and L1 usage of the nodes where snapshot exists (val1)\n7) Run more IOs on the volumes with different pattern. Calculate cksum of the volumes (cksum4). cksum4 should not be equal to cksum1. \n8) Detach the volumes. Restore the data from snapshots to the volumes. Attach the volumes. Calculate cksum of the volumes (cksum5). \n9) Calculate cksum of the LCVs again (cksum6)\n10) cksum5 should match with cksum1. \n11) cksum6 should match with cksum3.\n12) Calculate FBM and L1 usage of the nodes where snapshot exists (val2). val2 should match with val1\n13) Run IOs on the LCVs with different pattern and size. \n14) Calculate cksum of the restored volumes again (cksum7).\n15) cksum7 should match with cksum5. (Ensuring that writing on LCVs doesn't affect data on restored volumes)",
        "Automation TC Name": "VolumeRestore.VerifyingDataOnParentVolumeAfterWritingOnLcv",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": " "
    },
    {
        "TC ID": "S_Restore-1.3",
        "Scenario / Category": "Restoring data on LCV from it's snapshot",
        "Test Description": "1) Create local, remote and mirrored volumes. Run IOs on the volumes. Calculate cksum of the volumes (cksum1). \n2) Create snapshot of the volumes (snap1). \n3) Create LCVs out of the snapshot (lcv1). Attach it. Calculate cksum (cksum2). cksum2 should match cksum1. \n4) Calculate the FBM and L1 usage on the nodes where the snapshot exists. (val1)\n5) Run IOs on the LCV (lcv1) with different pattern. Calculate cksum of LCV (cksum3). cksum3 should not match cksum2.\n6) Create snapshot out of LCV (snap2). Create LCV (lcv2) out of the snapshot (snap2). Attach the LCV. Calculate cksum of the LCV (cksum4). cksum4 should match with cksum3.\n7) Create snapshot out of lcv2 (snap3).\n8) Calculate the FBM and L1 usage on the nodes where the snapshot exists. (val2)\n9) Run IOs on the LCV (lcv2) with different pattern. Calculate cksum of LCV (cksum5). cksum5 should not match cksum4.\n10) Detach the LCV (lcv2). Restore data on lcv2 using the snapshot snap3. Attach the lcv2. Calculate cksum of lcv2 (cksum6). cksum6 should match with cksum4.\n11) Calculate the FBM and L1 usage on the nodes where the snapshot exists. (val3)\n12) val3 should match with val2.\n13) Detach and delete lcv2 and snap3. Calculate cksum again on lcv1 (cksum7). cksum7 should match with cksum3.\n14) Detach lcv1. Restore data on lcv1 using snap2. Attach lcv1 again. \n15) Calculate cksum again on lcv1 (cksum8). cksum8 should match with cksum3.\n16) Calculate the FBM and L1 usage on the nodes where the snapshot exists. (val4)\n17) val4 should match with val2",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-165",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-1.4",
        "Scenario / Category": "Restore using pod",
        "Test Description": "1) Create local, remote and mirrored fio pods using fsTypes as ext3, ext4 and xfs. Allow it to run for few mins.\n2) Create snapshots of all the volumes. Allow the pods to run for few more mins after snapshot creation.\n3) Delete the pods. All the volumes should be in Available state. \n4) Restore the volumes using the respective snapshots.\n5) Run the fio pods again\n6) Ensure that the pods go into running state. No mount failures. iostat shows some data",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-29",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-1.5",
        "Scenario / Category": "Restore with resize",
        "Test Description": " \n1.  Create local, remote and mirrored volumes.\n2.  Write known pattern [e.g. \"abcd\"]on whole [use --file_device=1] device. Do sequential writes.  [Note: store state files. we need state files in step 10.]\n3.  Verify pattern.\n4. Take snapshot of volume the volume.\n5.  Resize volume.\n6.  Verify pattern.\n7.  Write new pattern [e.g. \"pqrs\"] on resized volume.\n8.  Verify pattern.\n9.  restore volume from snapshot created in step 4.\n10. Verify pattern. Volume should contain pattern \"abcd\".",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-165",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-1.6",
        "Scenario / Category": "Restoring empty volume",
        "Test Description": "1) Create local, remote and mirrored volumes and attach them.\n2) Don't run any IOs. Create snapshots of all volumes (snap1)\n3) Calculate cksum of all volumes across all plexes (cksum1)\n4) Calculate FBM and L1 usage of the node where snapshot exists. It should be 0.\n5) Run IOs on all the volumes with --fill_device=1. \n6) Detach all the volumes. Restore data on all the volumes from snapshots snap1\n7) Attach all the volumes again. Allow resync to complete on the plexes.\n7) Calculate cksum of all volumes across all plexes (cksum2)\n8) cksum2 should match with cksum1\n9) Calculate FBM and L1 usage of the node where snapshot exists. It should be 0.",
        "Automation TC Name": "VolumeRestore.EmptyVolumes",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-1.7",
        "Scenario / Category": "Restoring volume when its full",
        "Test Description": "1) Create local, remote and mirrored volumes and attach them.\n2) Run IOs on all volumes with --fill_device=1. Create snapshots of all volumes (snap1)\n3) Calculate cksum of all volumes across all plexes (cksum1)\n4) Calculate FBM and L1 usage of the node where snapshot exists (val1)\n5) Run IOs on all the volumes with different pattern and --fill_device=1. \n6) Detach all the volumes. Restore data on all the volumes from snapshots snap1\n7) Attach all the volumes again. Allow resync to complete on the plexes.\n7) Calculate cksum of all volumes across all plexes (cksum2)\n8) cksum2 should match with cksum1\n9) Calculate FBM and L1 usage of the node where snapshot exists (val2)\n10) val1 should be equal to val2",
        "Automation TC Name": "VolumeRestore.WithNoSpaceLeftOnVolumes",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-2.0",
        "Scenario / Category": "Reboot Cases",
        "Test Description": "1) Create local, remote and mirrored volumes. Run IOs on the volumes with size=size1. Calculate cksum of the volumes across all plexes (cksum1). Create snapshots of the volumes.\n2) Calculate the FBM and L1 usage of the node where snapshot exists (val1). \n3) Run more IOs on the volume with different pattern and size=size2. size2 should be greater than size1. Calculate cksum of the volumes across all plexes (cksum2). cksum2 should not be equal to cksum1. \n4) Detach the volumes. Run restore command from snapshots to the volumes. \n5) While the restore is in progress, ipmi power cycle the node where the volumes were created. (Having size2 greater than size1 ensures that restore takes longer time, allowing to test reboot) \n6) After the node comes up, ensure that the restore process continues. \n7) After restore completes, attach the volumes. Allow all plexes to resync. Calculate cksum of the volume across all plexes (cksum3). cksum3 should match with cksum1\n8) Calculate the FBM and L1 usage of the node where snapshot exists (val2).\n9) val1 should match with val2 ",
        "Automation TC Name": "VolumeRestore.RebootTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-2.1",
        "Scenario / Category": "",
        "Test Description": "Repeat S_Restore-2.0. After step 6 when the restore is still in progress, reboot the node again",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-8",
        "Results": "Failed",
        "Bug no ": "DWS-6085",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-2.2",
        "Scenario / Category": "",
        "Test Description": "Repeat S_Restore-2.0. Reboot any 2 random nodes during step 5 instead of just initiator node",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-9",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.0",
        "Scenario / Category": "Negative Tests",
        "Test Description": "Try to restore the volume while the volume is still in Attached state. The command should fail.",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.1",
        "Scenario / Category": "",
        "Test Description": "Try to restore a volume with volume name that doesn't exist. Correct error msg should be displayed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.2",
        "Scenario / Category": "",
        "Test Description": "Try to restore a volume with snapshot name that doesn't exist. Correct error msg should be displayed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.3",
        "Scenario / Category": "",
        "Test Description": "Try to restore a volume when restore on that volume is already in progress. Error msg should say that restore is in progress. \nEnsure that restore doesn't kick-in again after the previous restore completes.",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.4",
        "Scenario / Category": "",
        "Test Description": "Repeat S_Restore-1.3. Restart bosun process at random intervals of time during the entire test",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-165",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.5",
        "Scenario / Category": "",
        "Test Description": "Repeat S_Restore-1.3. Restart etcd process at random intervals of time during the entire test",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-165",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.6",
        "Scenario / Category": "",
        "Test Description": "without calculating cksums. Create snapshot while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.7",
        "Scenario / Category": "",
        "Test Description": " without calculating cksums. Delete snapshot while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-165",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.8",
        "Scenario / Category": "",
        "Test Description": "without calculating cksums. Delete volume while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.9",
        "Scenario / Category": "",
        "Test Description": " without calculating cksums. Attach a volume while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.10",
        "Scenario / Category": "",
        "Test Description": "without calculating cksums. Delete local and remote plex while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.11",
        "Scenario / Category": "",
        "Test Description": "without calculating cksums. Add a plex while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.12",
        "Scenario / Category": "",
        "Test Description": " without calculating cksums. Try to resize the volume while the restore operation is in progress. Shouldn't be allowed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.13",
        "Scenario / Category": "",
        "Test Description": "Try to restore parent volume from snapshot of it's LCV. Shouldn't be allowed",
        "Automation TC Name": "VolumeRestore.NegativeTests",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-177",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.14",
        "Scenario / Category": "Restore from any snapshot.",
        "Test Description": "1. Create 8 volumes (local, remote and mirrored). \n2. Attach these volumes to cluster nodes . \n3. Do write IOs on volumes.  Use pattern=\"abcd\" and size=x\n4. Calculate checksum of volumes. (cksum1).\n5. Create 5 snapshots of each volume.\n6. Dump FBM and L1 usage (value1).\n7. Do write IOs on volumes. Use pattern=\"pqrs\" and size=y.\n8. Calculate checksum of volumes. (cksum2). Checksum calculated in step 4 should not match with this checksum. \n9. Detach volumes.\n10. Restore volumes from their respective 3rd snapshot.  After restore 4th and 5th snapshots of each volume should get deleted.\n11. Attach volumes. \n12. Calculate checksum (checksum3). Checksum calculated in step5 should macth with this checksum.\n13. Dump FBM and L1 usage. (value2). FBM & L1 dump taken in step 6 should match with this FBM & L1 dump.\n14. Delete snapshots.\n15. Detach volumes.\n16. Delete volumes.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0 (7)",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.15",
        "Scenario / Category": "",
        "Test Description": "1. Create 8 volumes (local, remote and mirrored). \n2. Attach these volumes to cluster nodes . \n3. Do write IOs for 4-5 min on volumes in background.  Use pattern=\"abcd\" and size=x\n4. While fio is running in background, at specific intervals, create 5 snapshots of each volume.\n5. Dump FBM and L1 usage (value1).\n6. Do write IOs on volumes. Use pattern=\"pqrs\" and size=y.\n7. Create LCVs out of 3rd snapshot for each volume. Attach LCV and calculate checksum of each LCV.\n8. Detach volumes.\n10. Restore volumes from their respective 3rd snapshot.  After restore 4th and 5th snapshots of each volume should get deleted.\n11. Attach volumes. \n12. Calculate checksum of volumes. Checksum calculated in step7 (of lcvs) should match with this checksums.\n13. Dump FBM and L1 usage. (value2). FBM & L1 dump taken in step 5 should match with this FBM & L1 dump.\n14. Delete LCVs & snapshots.\n15. Detach volumes.\n16. Delete volumes.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0 (7)",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Can not compare FBM L1 usage as snapshots are taken at regulare interval of time, so FBM L1 usage at the time when snap3 is taken will be different than FBM L1 dump at step 5\n\nBut the check of volume LCV and volume after resore is matching  \n\nSo marking this TC as pass",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.16",
        "Scenario / Category": "",
        "Test Description": "1. Create 8 volumes (local, remote and mirrored). \n2. Attach these volumes to cluster nodes . \n3. Do write IOs on volumes.  Use pattern=\"abcd\" and size=x\n4. Create 3 snapshots of each volume.\n5. Create lcv out first & second snapshot.\n6. Calculate checksum of volumes. (cksum1).\n7. Attach LCVs. \n8. Calcluate checksum of LCVs (checksum2). Checksum of LCVs should match with checksum of their respective volumes.\n9. Do write IOs on Volumes. Use pattern=\"pqrs\" and size=y.\n10. Calculate checksum of volume (checksum3). Checsum of volumes should not match with checksum of volumes calculated in step 6.\n11. Do write IOs on LCVs. Use pattern=\"wxyz\" an size=z\n12. Detach volumes.\n13. Restore volumes from their respective 2nd snapshot.  After restore 3rd snapshot of each volume should get deleted.\n14. Attach volumes. \n15. Calculate checksum (checksum4). Checksum calculated in step6 should macth with this checksum.\n16. Delete snapshots.\n17. Detach volumes.\n18. Delete volumes.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0 (7)",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.17",
        "Scenario / Category": "Negative",
        "Test Description": "1. Create 8 volumes \n2. Attach these volumes to cluster nodes . \n3. Do write IOs on volumes.  Use pattern=\"abcd\" and size=x\n4. Create 16 snapshots of each volume.\n5. Calculate checksum of volumes. (cksum1).\n6. Do write IOs on volumes. Use pattern=\"pqrs\" and size=y.\n7. Calculate checksum of volumes. (cksum2). Checksum calculated in step 5 should not match with this checksum. \n8. Detach volumes.\n9. Delete 11th to 16th snapshots of each volumes.\n10. While snapshots are in pendingDelete state, trigger restore volumes from their respective 10th snapshot.   Restore operation should be complete. \n11. Attach volumes. \n12. Calculate checksum (checksum3). Checksum calculated in step5 should macth with this checksum.\n13. Delete snapshots.\n14. Detach volumes.\n15. Delete volumes.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-3",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.18",
        "Scenario / Category": "",
        "Test Description": "1. Create a 3-way mirorred volume having plexes on node0, node1 and node2. \n2. Attach mirrored volume to the cluster node. \n3. Do write IOs on volume.\n4. Create 5 snapshots on node0, five on node1 and five on node2.\n5. Do IOs on volume with different pattern and size.\n6. Detach volume.\n7. Power-off node2.\n8. Restore volumes from snapshot on node0 or node1. ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-8",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.19",
        "Scenario / Category": "",
        "Test Description": "1. Create a volume. \n2. Atatch volume to cluster node and do IOs on volume.\n3. Create 5 snapshots of the volume. \n4. Create lcv out of 5th snapshot.\n5. Try to restore volumes from 4th snapshots. It should Fail.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.20",
        "Scenario / Category": "",
        "Test Description": "Restore volume twice from same snapshot (non-latest snapshot). Both restore should be successful.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-3",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.21",
        "Scenario / Category": "",
        "Test Description": "While write IOs are happening on volume, at speciifc interval, create N snapshots from the volume. Create LVC out of 1 to (N-1) th snapshot. Restore volume from (N-1) th snapshot. Compare checksum of volume with checksum of lcv created out of (N-1)th snapshot. Restore volume again from (N-2). Compare checksum of volume with checksum of lcv created out of (N-2)th snapshot. ...... Restore volume again from 1st snapshot. Compare checksum of volume with checksum of lcv created out of 1st snapshot.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-3",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-3.22",
        "Scenario / Category": "",
        "Test Description": "Restore volume from non-latest snapshot while IOs are happening on LCVs.  Restore should be successfull. ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-3",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-4.0",
        "Scenario / Category": "Stress",
        "Test Description": "Repeat S_Restore-1.0 by creating max possible local, remote and mirrored volumes in the cluster and restoring all the volumes simultaneously",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-52",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-4.1",
        "Scenario / Category": "",
        "Test Description": "Repeat S_Restore-4.0 and reboot one of the nodes while the restore / resync process is in progress",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-52",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-5.0",
        "Scenario / Category": "General",
        "Test Description": "During each of the test cases, ensure the states of volumes and plexes is in consistent with the expected values Available, Insync, Attached, Resyncing, Restoring, etc",
        "Automation TC Name": "VolumeRestore.Basic",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-86",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-6.0",
        "Scenario / Category": "Volume Restore Solution",
        "Test Description": "Restore volume associated with PVC from a specific VolumeSnapshot using snapshot-restore helm chart. Restore operation should be successful",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-58",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-6.1",
        "Scenario / Category": "",
        "Test Description": "Verify the data by creating LCV from snapshot and restored volume. Data should be consistent on both LCV and volume",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-52",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-6.2",
        "Scenario / Category": "",
        "Test Description": "Restore the same volume to a different snapshot. Verify data",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-58",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "S_Restore-7.0",
        "Scenario / Category": "Kubernetes Way",
        "Test Description": "Restoring volumes using kubernetes way. Need to find out how kubernetes does it and add TCs accordingly",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Total",
        "Release": 38.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Ran",
        "Release": 38.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "% Ran",
        "Release": 100.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Pass",
        "Release": 37.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "% Pass",
        "Release": 97.37,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Automated",
        "Release": 16.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Automated %",
        "Release": 42.11,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "",
        "": ""
    }
]