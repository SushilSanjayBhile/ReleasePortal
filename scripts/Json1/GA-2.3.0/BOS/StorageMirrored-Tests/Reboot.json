[
    {
        "TC ID": "SM_Reboot-2.0",
        "Scenario / Category": "Reboot_FBM/L1 Usage",
        "Test Description": "1) Create mirrored volumes. Attach them to a node. \n2) Run IOs on them, Stop IOs. \n3) Check FBM and L1 usage\n4) Power cycle the node.\n5) Check FBM and L1 usage again\n6) FBM and L1 usage should be same before and after reboot",
        "Automation TC Name": "Mirroring.RebootTestSHA512Check",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-86",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "FBM, L1 usage count should be same before and after reboot",
        "Notes / Detailed Description": "tried rebooting target node"
    },
    {
        "TC ID": "SM_Reboot-2.1",
        "Scenario / Category": "RebootMD5",
        "Test Description": "1) Create mirrored volumes. Attach them to a node. \n2) Run IOs on them, Stop IOs. \n3) Calculate sha512sum of all the volumes across all the plexes.\n4) Power cycle the node. \n5) Wait for resync to complete after node is up\n6) Calculate sha512sum on each plex across all volumes.\n7) sha512sum of volumes must be same before and after reboot.",
        "Automation TC Name": "Mirroring.RebootTestSHA512Check",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-86",
        "Results": "Pass",
        "Bug no ": " ",
        "Expected Behaviour": "",
        "Notes / Detailed Description": " "
    },
    {
        "TC ID": "SM_Reboot-2.2",
        "Scenario / Category": "RebootVerifyPattern",
        "Test Description": "1) Create mirrored volumes. Attach them to a node.\n2) Run fio with rw=randwrite with random but known pattern, different on each block. Allow fio job to complete.\n3) Verify data using rw=randread across all the plexes of all the volumes.\n4) Power cycle the node. Allow the resync to complete for all plexes.\n5) Verify pattern must succeed before and after reboot across all the plexes.\n6) Each TC run must select new random pattern.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-141",
        "Results": "Pass",
        "Bug no ": " ",
        "Expected Behaviour": "",
        "Notes / Detailed Description": " "
    },
    {
        "TC ID": "SM_Reboot-2.3",
        "Scenario / Category": "RebootWithoutStoppingIOsAndFsck",
        "Test Description": "1) Create mirrored volumes. Attach them to a node.\n2) Create file system on all the volumes using ext3, ext4 and xfs (mkfs -t ext4)\n3) Mount all the volumes to different directories.\n4) Run fio on files inside the mounted directories.\n5) While the fio job is still running, power cycle the node.\n6) After reboot, wait for plex resync to complete. FBM and L1 should be consistent.\n7) Run fsck command across all the volumes (fsck -a /dev/nvme1n1). It shouldn't throw any error.\n8) Try mounting all the volumes to corresponding directories. File system should be mountable. ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-141",
        "Results": "Pass",
        "Bug no ": " ",
        "Expected Behaviour": "",
        "Notes / Detailed Description": " "
    },
    {
        "TC ID": "SM_Reboot-2.4",
        "Scenario / Category": "MirrorResyncInitiatorReboot",
        "Test Description": "1) Create 3-way mirrored volumes and attach them to a node.\n2) Run fio on all the volumes simultaneously. \n3) Reboot iniatior (where volume is attached) during IOs.\n4) After initiator comes up, wait for plexes to get resync. \n5) Compare data across all plexes which must be same.",
        "Automation TC Name": "Mirroring.ResyncInitiatorReboot",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-40",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": " "
    },
    {
        "TC ID": "SM_Reboot-2.5",
        "Scenario / Category": "MirrorResyncTargetReboot",
        "Test Description": "1) Create 3-way mirrored volumes and attach them to a node.\n2) Run fio on all the volumes simultaneously.\n3) Reboot any target node during IOs. IOs should continue (i.e. no IO errors).\n4) The rebooted node plex should be seen Detached/OutOfSync.\n5) After the target node comes up, wait for its plex to get resynced.\n6) Compare data across all plexes which must be same.",
        "Automation TC Name": "Mirroring.ResyncSingleTargetReboot",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-51",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Scenario 1: rw=randwrite \nScenario 2 : rw=randread \nScenario 3 : rw=randrw\n\nFailed with 1 target node reboot during IOs"
    },
    {
        "TC ID": "SM_Reboot-2.6",
        "Scenario / Category": "MirrorResyncTargetShutDown",
        "Test Description": "1) Create several mirrored volumes. Attach them to a node.\n2) Shutdown one of target node. \n3) Run fio on all the volumes.\n4) After IOs, power on target node. Let resync complete.\n5) Verifiy data across all plexes for all volumes.",
        "Automation TC Name": "Mirroring.MirrorResyncSingleTargetShutDown ",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-86",
        "Results": "Pass",
        "Bug no ": " ",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Scenario 1# shutdown one target node.\nScenario 2# shutodwn all target nodes."
    },
    {
        "TC ID": "SM_Reboot-2.7",
        "Scenario / Category": "MirrorResyncAllTargetShutDown",
        "Test Description": "1) Create several mirrored volumes. Attach them to a node.\n2) Shutdown all target nodes. \n3) Run fio on all the volumes.\n4) After IOs, power on target nodes. Let resync complete.\n5) Verifiy data across all plexes for all volumes.",
        "Automation TC Name": "Mirroring.MirrorResyncAllTargetShutDown",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-52",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.8",
        "Scenario / Category": "MirrorTargetNodesConitnueOnInitiatorReboot",
        "Test Description": "1) Create 12 3-way mirrored volumes using 3 nodes\n2) Attach 4 volumes to each node.\n3) Run fio with NJ=16, QD=16 and runtime=600 on all the nodes simultaneously.\n4) After 3-4 mins, shutdown one of the nodes.\n5) FIO jobs on other nodes should complete without any error",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-141",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Scenario 1: rw=randwrite \nScenario 2 : rw=randread \nScenario 3 : rw=randrw"
    },
    {
        "TC ID": "SM_Reboot-2.9",
        "Scenario / Category": "MirrorInitiatorChangeScenario2",
        "Test Description": "1) Create a mirrored volume and attach it to nodeA (initiator)\n2) Start fio on the volume on nodeA.\n3) Shutdown initiator nodeA.\n4) Issue volume force detach from nodeB.\n5) Attach volume to nodeB (new initiator).\n6) Start fio on the volume from nodeB\n7) PowerUp old initiator (nodeA), it will resync its plex.\n8) Verify sha512sum across all plexes ",
        "Automation TC Name": "Mirroring.ForceDetachInitiatorChange",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-40",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.10",
        "Scenario / Category": "2NodeFailure",
        "Test Description": "1) Create 3-way mirrored volumes.\n2) Run IOs on all the volumes.\n3) While the IOs are still running, reboot initiatior (where volume is attached) and 1 target node.\n4) After both the nodes comes up, wait for plexes to get resync.\n5) Calculate sha512sum across all the plexes. It should be same.",
        "Automation TC Name": "Mirroring.ResyncInitiatorAndTargetReboot",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-40",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.11",
        "Scenario / Category": "2NodeFailure",
        "Test Description": "1) Create 3-way mirrored volumes.\n2) Run IOs on all the volumes.\n3) While the IOs are still running, reboot 2 target nodes\n4) IOs should continue without any errrors (If both the nodes were etcd nodes and bringing them down disturbs the etcd majority, split brain scenario will be hit and IOs will fail. This test should be run on non etcd nodes or cluster with 5 etcd nodes)\n5) After the target nodes come up, wait for the plexes to complete resync.\n6) Calculate sha512sum across all the plexes. It should be same.",
        "Automation TC Name": "Mirroring.ResyncTwoTargetReboot",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-58",
        "Results": "Pass",
        "Bug no ": "Will be fixed in 2.1.0",
        "Expected Behaviour": "Passes if run on non quorum nodes",
        "Notes / Detailed Description": "Scenario #1:  Reboot 2 nodes.\n\nScenario #2: Flap stoarge links for 2 nodes.\n\nTry with rw=randwrite, rw=randread, rw=randrw"
    },
    {
        "TC ID": "SM_Reboot-2.12",
        "Scenario / Category": "AllNodeFailure",
        "Test Description": "1) Create 3-way mirrored volumes and attach them to a node.\n2) Start fio on all volumes from the initiator node.\n3) IPMI power cycle all nodes simultaneously.\n4) After all the nodes come up, wait for resync to complete.\n5) Calculate sha512sum across all the plexes. It should be same",
        "Automation TC Name": "Mirroring.ResyncAllNodeReboot",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-43",
        "Results": "Pass",
        "Bug no ": "DWS-2067",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Scenario #1: IPMIReboot all nodes during IOs. Run IOs again after reboot. Again IPMIReboot\n\nScenario #2: IPMIReboot all nodes after IO completion."
    },
    {
        "TC ID": "SM_Reboot-2.13",
        "Scenario / Category": "RebootSrcNodeDuringResync",
        "Test Description": "1) Create mirrored volumes and attach them to nodeA (initiator).\n2) Run IOs on all the volumes. \n3) Reboot any of the target nodes.\n4) After the plex starts resyncing, reboot the source node (initiator nodeA).\n5) After node comes up, the plexes should resync again.\n6) After resync completes, data on all plexes should be same.",
        "Automation TC Name": "Mirroring.RebootSourceNodeDuringResync",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-151",
        "Results": "Pass",
        "Bug no ": "Blocked by DWS-3810. Will be fixed in 2.1.0",
        "Expected Behaviour": "",
        "Notes / Detailed Description": " Scenario 1#  Reboot src during resync only once.\n Scenario 2# Rebott src node twice during resync."
    },
    {
        "TC ID": "SM_Reboot-2.14",
        "Scenario / Category": "RebootDestNodeDuringResync",
        "Test Description": "1) Create mirrored volumes and attach them to nodeA (initiator).\n2) Run IOs on all the volumes. \n3) Reboot any of the target nodes.\n4) After the plex starts resyncing, reboot any of the target node\n5) After node comes up, the plexes should resync again.\n6) After resync completes, data on all plexes should be same.",
        "Automation TC Name": "Mirroring.RebootDestinationNodeDuringResync",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-151",
        "Results": "Pass",
        "Bug no ": "Blocked by DWS-3810. Will be fixed in 2.1.0",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "\nTry with rw=randwrite, rw=randread, rw=randrw"
    },
    {
        "TC ID": "SM_Reboot-2.15",
        "Scenario / Category": "[NS] Plex recovery after volume detach",
        "Test Description": "1) Create a 2 way mirrored volume. Plexes will be p0 and p1\n2) Run IOs on the volume. \n3) Verify sha512sum on both the plexes.\n4) Detach the volume\n5) Shutdown node with plex P1. Node will move to NotReady state.\n6) Attach the volume.\n7) Do IOs on the volume \n8) Power ON the node with plex P1\n9) Attach-plex FSM should kick in and P0, P1 should get back in-sync\n10) Verify sha512sum across both the plexes",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-141",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.16",
        "Scenario / Category": "MirrorInitiatorReboot",
        "Test Description": "1) Create 16 3-way mirrored volumes\n2) Attach 8 volumes to node1 and 8 volumes to node2.\n3) Start fio jobs on both the nodes simultaneously.\n4) While fio is still running, reboot node1.\n5) The fio on node2 should continue while the node1 reboots.\n6) After the node is up, plexes should resync and data should match across all plexes",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-141",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.17",
        "Scenario / Category": "MirrorTargetReboot",
        "Test Description": "1) Create 16 3-way mirrored volumes.\n2) Attach all the volumes to node1 (initiator).\n3) For all the volumes, detach plexes that are attached to nodes node2 and node3 (target nodes)\n4) Run fio job on node1 for 5 mins on all volumes.\n5) Detach all the volumes. \n6) Re-attach all the volumes again to node1.\n7) While the plexes are Resyncing, reboot either node2 or node3 (target node).\n8) After plexes resync, verify data across all plexes for all volumes.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-141",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.18",
        "Scenario / Category": "RebootTestLargeSizeMirroredVolumesLongWithVerification",
        "Test Description": "1) Create large size mirrored volumes on the nodes.\n2) Run fio simultaneously on all the volumes.\n3) Calculate sha512sum of all volumes across all plexes.\n4) Reboot all the nodes.\n5) Calculate sha512sum across all plexes on all the volumes.\n6) Run fio again.\nRepeat this 5 times.   ",
        "Automation TC Name": "Mirroring.LargeSizeVolumesRebootTestWithVerification",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-51",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.19",
        "Scenario / Category": "MaxSizeVolumeDataVerification",
        "Test Description": "1) Create one mirrorred volume of max allowed size (8TB / available space on drive). \n2) Run fio on the volume.\n3) Calculate sha512sum on the volume.\n4) Reboot the initiator node.\n5) After resync completes, calculate sha512sum across all plexes. They should match",
        "Automation TC Name": "Mirroring.MaxSizeVolumeDataVerificationAcrossReboot",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-43",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.20",
        "Scenario / Category": "MaxSizeVolumeDataVerification",
        "Test Description": "1) Create one mirrorred volume of max allowed size (8TB / available space on drive). \n2) Run fio on the volume.\n3) Calculate sha512sum on the volume.\n4) Reboot a target node.\n5) After node comes up and resync triggers, reboot the same node again.\n6) After resync completes, calculate sha512sum across all plexes. They should match",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-146",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.21",
        "Scenario / Category": "MaxSizeVolumeDataVerification",
        "Test Description": "1) Create one mirrorred volume of max allowed size (8TB / available space on drive). \n2) Run fio on the volume such that it writes a few blocks at the start and the end of the volume (extreme ends). \n3) Calculate cksum / Verify IO\n4) Reboot the initiator node\n5) Calculate cksum / Verify IO",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-36",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Reboot-2.22",
        "Scenario / Category": "ApplicationFailOverAndDataIntegrity",
        "Test Description": "1) Create a mirrored volume and attach it to a fio replication controller on nodeA (initiator). Pass env variable NJ=1 from RC spec (Because we are going to do data verification)\n2) Let the RC run for few mins.\n3) Shutdown initiator nodeA.\n4) After a few mins, the RC should create a new pod on other node (nodeB) and the pod should go into running state and volume in Attached state. iostat output should show some transactions. nodeB is now the new initiator.\n5) PowerUp old initiator (nodeA), it will resync its plex.\n6) Delete the pod after resync is complete\n7) Verify sha512sum across all plexes. It should match",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-36",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Verify-2.0",
        "Scenario / Category": "WriteAndVerifyDuringResync",
        "Test Description": "1) Create mirrored volumes\n2) Run write IOs on all the volumes.\n3) Run fio verify command across all plexes and check that it passes.\n4) Reboot any node containing plexes.\n5) While the plexes are still resyncing, run the fio verify command again. It should pass\n(Read is done from InSync plex. So even if other plexes are resyncing, read should pass)\n6) After all the plexes have resynced, run the fio verify command across all plexes and ensure that it passes.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-146",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_Verify-2.1",
        "Scenario / Category": "WriteDuringResyncVerifyAfterResync",
        "Test Description": "1) Create mirrored volumes\n2) Run write IOs on all the volumes.\n3) Reboot one of the nodes.\n4) While the plexes are getting resynced, run IOs again on volumes with different pattern\n5) Allow plexes to complete resync.\n6) Calculate sha512sum across all plexes. They should be same.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-146",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.0",
        "Scenario / Category": "MirrorResyncLinkFlap",
        "Test Description": "1) Create 3-way mirrored volumes.\n2) Run IOs on it. \n3) Flap storage link of any 2 target nodes while the IOs are running (down for 5 seconds and up).\n4) IOs should continue (i.e. no IO errors).\n5) The target plexes should not get Detached\n6) After IO completes, calculate sha512sum across all plexes. It must be same.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.1",
        "Scenario / Category": "",
        "Test Description": "1) Create 3-way mirrored volumes.\n2) Run IOs on it. \n3) Flap one storage link of any 2 target nodes while the IOs are running (down for 60 seconds and up).\n4) IOs should continue (i.e. no IO errors).\n5) The target plexes should not go to Detached/OutOfSync state.\n6) After IO completes, calculate sha512sum across all plexes. It must be same.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.2",
        "Scenario / Category": "",
        "Test Description": " \n1) Create 3-way mirrored volumes.\n2) Run IOs on it. \n3) Flap both storage links of any 2 target nodes while the IOs are running (down for 60 seconds and up).\n4) IOs should continue (i.e. no IO errors).\n5) The target plexes should go to Detached/OutOfSync state. Volume should be in Degraded state\n6) After the link comes up, plex should get attached automatically. If the plex doesn't attach in 3 retries, next retry will be done after the time set in DIAMANTI_PLEX_AUTO_ATTACH_INTERVAL flag in convoy.conf. Wait for plexes to get resynced.\n7) Calculate sha512sum across all plexes. It must be same.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.3",
        "Scenario / Category": "",
        "Test Description": "\n1) Create 3-way mirrored volumes.\n2) Run IOs on it. \n3) Flap both storage links of a target node while the IOs are running (down for 60 seconds and up).\n4) IOs should continue (i.e. no IO errors).\n5) The target plexes should go to Detached/OutOfSync state.\n6) After the link comes up, immediately issue plex detach command manually on the same plex. Plex should not get attached.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.4",
        "Scenario / Category": "",
        "Test Description": "1) Create 3-way mirrored volumes.\n2) Run IOs on it. \n3) Reboot one of the nodes. \n4) While the plexes are resyncing, flap one of the storage links of rebooted target node. (down for 60 seconds and up).\n4) IOs should continue (i.e. no IO errors).\n5) The target plexes should not get Detached. Plexes should continue resyncing.\n6) After resync completes, calculate sha512sum across all plexes. It must be same.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.5",
        "Scenario / Category": "",
        "Test Description": " \n1) Create 3-way mirrored volumes.\n2) Run IOs on it. \n3) Reboot one of the nodes. \n4) While the plexes are resyncing, flap both the storage links of rebooted target node. (down for 60 seconds and up).\n5) IOs should continue (i.e. no IO errors).\n6) The target plexes should get Detached.\n7) After the link comes up, plex should get attached automatically. Wait for plexes to get resync.\n8) After resync completes, calculate sha512sum across all plexes. It must be same.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Fail",
        "Bug no ": "DWS-5876",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "SM_LinkFlap-1.6",
        "Scenario / Category": "",
        "Test Description": " \n1) Create mirrored volumes\n2) Attach the volumes\n3) Run IOs on it.\n4) Detach some of the volumes. Others will remain attached\n5) Flap down both the storage links of one of the target node. (Offline volume's plex won't be detached with link flap.)\n6) Flap up both the storage links\n7) Wait for 3+ mins after bringing up the link, the detached plexes of the attached volumes should get attached back and resync.\n8) Shouldn't affect the plexes of detached volumes. Try re-attaching these volumes. All plexes should get attached (InSync) ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-148",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Total",
        "Build No": 32.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": 0.0,
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Ran",
        "Build No": 32.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "% Ran",
        "Build No": 100.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": " ",
        "Automation TC Name": "",
        "Release": "Pass",
        "Build No": 31.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "% Passed",
        "Build No": 96.88,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated",
        "Build No": 14.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated %",
        "Build No": 43.75,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    }
]