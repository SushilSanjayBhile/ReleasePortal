[
    {
        "TC ID": "AT_ChaosMonkey-1.0",
        "Scenario / Category": "Networking",
        "Test Description": "Iperf test with high QoS class \nSteps :-\n1) Launch 8 pair of server-client using helm chart or deployment\n2) Make sure all pods are in running state\n3) Validate throughput \n4) Validate resources (qos, VNICS)\n5) Launch Chaos Monkey (With interval between pod terminations is 5m) with helm chart called chaoskube in kube-system namespace\n6) After termination of each pod validate (2, 3, 4) \n7) Wait (Minimum :- It completes 2 iteration in 120 minutes)\n8) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-24",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": "Helm charts missing in 2.3.0 that are being used for this DWS-6136\nTested this TC using cherts from previous build."
    },
    {
        "TC ID": "AT_ChaosMonkey-1.1",
        "Scenario / Category": "Networking",
        "Test Description": "Iperf test with medium QoS class \nSteps :-\n1) Launch 8 pair of server-client using helm chart or deployment\n2) Make sure all pods are in running state\n3) Validate throughput \n4) Validate resources (qos, VNICS)\n5) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n6) After termination of each pod validate (2, 3, 4) \n7) Wait iterations\n8) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-35",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-1.2",
        "Scenario / Category": "Networking",
        "Test Description": "Iperf test with best-effort QoS class \nSteps :-\n1) Launch 8 pair of server-client using helm chart\n2) Make sure all pods are in running state\n3) Validate throughput \n4) Validate resources (qos, VNICS)\n5) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n6) After termination of each pod validate (2, 3, 4) \n7) Wait iterations\n8) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-24",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-1.3",
        "Scenario / Category": "Networking",
        "Test Description": "Iperf test with (high, medium, best-effort) QoS class \nSteps :-\n1) Launch 6 pair (2 of each qos) of server-client using helm chart or deployment\n2) Make sure all pods are in running state\n3) Validate throught \n4) Validate resources (qos, VNICS)\n5) Launch Chaos Monkey (With interval between pod terminations is 10m)\n6) After termination of each pod validate (2, 3, 4) \n7) Wait iterations\n8) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-24",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-2.0",
        "Scenario / Category": "Local Storage",
        "Test Description": "Reads, 1 pod, 1 volume\n1)  Launch 4 pods with helm chart or deployment\n2)  Make sure all pods are in running state\n3) Validate Read IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m)\n5) After termination of each pod validate (2, 3) \n7) Wait for iterations\n8) Delete all helm charts",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-24",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-2.1",
        "Scenario / Category": "Local Storage",
        "Test Description": "Writes, 1 pod, 1 volume\n1)  Launch 4 pods with helm chart or deployment\n2)  Make sure all pods are in running state\n3) Validate Write IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m)\n5) After termination of each pod validate (2, 3) \n7) Wait for iterations\n8) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-35",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-2.3",
        "Scenario / Category": "Local Storage",
        "Test Description": "Reads, 1 pod, 4 volume\n1)  Launch 4 pods with helm chart or deployment\n2)  Make sure all pods are in running state\n3) Validate Read IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n5) After termination of each pod validate (2, 3) \n7) Wait for iterations\n8) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-56",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-2.4",
        "Scenario / Category": "Local Storage",
        "Test Description": "Writes, 1 pod, 4 volume\n1)  Launch 4 pods with helm chart or deployment\n2)  Make sure all pods are in running state\n3) Validate Write IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n5) After termination of each pod validate (2, 3) \n6)\n7) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-56",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-3.0",
        "Scenario / Category": "Remote Storage",
        "Test Description": "Reads, 1 pod, 1 volume\n1)  Launch 4 pods with helm chart\n2)  Make sure all pods are in running state\n3) Validate Read IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n5) After termination of each pod validate (2, 3) \n6) Wait for iterations\n7) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-35",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-3.1",
        "Scenario / Category": "Remote Storage",
        "Test Description": "Writes, 1 pod, 1 volume\n1)  Launch 4 pods with helm chart or deployment\n2)  Make sure all pods are in running state\n3) Validate Write IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n5) After termination of each pod validate (2, 3) \n6) Wait for iterations\n7) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-35",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-3.3",
        "Scenario / Category": "Remote Storage",
        "Test Description": "Reads, 1 pod, 4 volume\n1)  Launch 4 pods with helm chart\n2)  Make sure all pods are in running state\n3) Validate Read IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n5) After termination of each pod validate (2, 3) \n6) Wait for iterations\n7) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-56",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "AT_ChaosMonkey-3.4",
        "Scenario / Category": "Remote Storage",
        "Test Description": "Writes, 1 pod, 4 volume\n1)  Launch 4 pods with helm chart or deployment\n2)  Make sure all pods are in running state\n3) Validate Write IOPs\n4) Launch Chaos Monkey (With interval between pod terminations is 10m) with helm chart called chaoskube in kube-system namespace\n5) After termination of each pod validate (2, 3) \n6) Wait for iterations\n7) Delete all helm charts or deployment",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-56",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Total",
        "Build No": 12.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Ran",
        "Build No": 12.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Ran %",
        "Build No": 100.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Pass",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Pass %",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "Automated %",
        "Build No": 0.0,
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    }
]