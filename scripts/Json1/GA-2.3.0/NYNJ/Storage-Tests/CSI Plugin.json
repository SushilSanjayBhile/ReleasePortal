[
    {
        "TC ID": "S_CSI_Basic-1.0",
        "Scenario / Category": "volumeMode: RawBlockDevice",
        "Test Description": "Create pods with dynamically provisioned volumes with different perf-tiers, mirror count and volumeMode as FileSystem.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-198",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Basic-1.1",
        "Scenario / Category": "",
        "Test Description": "Create pods with statically provisioned volumes with different perf-tiers, fstypes and mirror count and volumeMode as FileSystem.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-199",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Basic-1.2",
        "Scenario / Category": "volumeMode: RawBlockDevice",
        "Test Description": "Create pods with dynamically provisioned volumes with different perf-tiers, mirror count and volumeMode as RawBlockDevice.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-199",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Basic-1.3",
        "Scenario / Category": "",
        "Test Description": "Create pods with statically provisioned volumes with different perf-tiers, fstypes and mirror count and volumeMode as RawBlockDevice.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-198",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Reboot-2.0",
        "Scenario / Category": "Node reboot/shutdown",
        "Test Description": "Reboot node running external-provisioner pod. Try to create volumes using csi plugin. Volumes should be provisioned eventually.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-199",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Reboot-2.1",
        "Scenario / Category": "",
        "Test Description": "Shutdown node running external-provisioner pod. Create volumes using csi plugin. External-provisioner pod should be evacuated to another node.  Volumes should be provisioned.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-199",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Reboot-2.2",
        "Scenario / Category": "",
        "Test Description": "Create pods using csi plugin. Reboot nodes having pods. Once node rejoins cluster, pods must go into running state.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "9.9.1-199",
        "Results": "Fail",
        "Bug no ": "DWS-5928",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Flex-3.0",
        "Scenario / Category": "Mix of CSI & flexvolume plugin   (Note: This is temporary test case. Once we remove support for flexvolume, this test case will be removed).",
        "Test Description": "Create fio pods with dynamically provisioned volumes using flexvolume plugin. ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-12",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Flex-3.1",
        "Scenario / Category": "",
        "Test Description": "Create some fio pods with dynamically provisioned volumes (use flexvolume plugin). Create another set of fio pods with dynamically provisioned volumes (Use csi plugin). ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-12",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Flex-3.2",
        "Scenario / Category": "",
        "Test Description": "Create a fio pod with two volumes. First volume should be provioned by flexvolume plugin and second volume should be provisoned by csi plugin.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-12",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.0",
        "Scenario / Category": "",
        "Test Description": "Create a volume using dctl. It should get csi driver by default.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.1",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored static volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n7) PV, PVC and volume should show the updated csi provisioner.\n8) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.2",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n7) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n8) PV, PVC and volume should show the updated csi provisioner.\n9) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.3",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored volumes using dctl command with flex driver.\n2) Attach the volume \n3) Run fio on the volume\n4) Calculate sha512sum of the volume\n5) Detach the volume\n6) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n7) Attach the volume again\n8) Calculate sha512sum of the volumes.\n9) The sha512sum calculated at step 4 should match with step 8",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.4",
        "Scenario / Category": "",
        "Test Description": "1) Create multiple storage class using flex plugin.\n2) Run diamanti-storage-class-driver-migration.sh script with \"-a\" option\n3) All storage classes using flex plugin should get upgraded to csi ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.5",
        "Scenario / Category": "",
        "Test Description": "1) Create dctl volume using flex driver.\n2) Create dctl snapshot and then LCV from the snapshot.\n3) Check the driver for LCV. It will be CSI",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.6",
        "Scenario / Category": "",
        "Test Description": "1) Create dynamic volume using flex driver.\n2) Create snapshot using kubernetes command \n3) Create LCV from the snapshot using kubernetes command.\n4) Check the driver for LCV. It will be CSI",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.7",
        "Scenario / Category": "",
        "Test Description": "1) Create dctl volume using flex driver.\n2) Create dctl snapshot\n3) Create LCV from the snapshot using flex by using \"-d\" option.\n4) Check the driver for LCV. It should be flex",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate-1.8",
        "Scenario / Category": "",
        "Test Description": "1) Create dynamic volume using flex driver.\n2) Create snapshot using kubernetes command \n3) Create LCV from the snapshot using kubernetes command by using flex driver.\n4) Check the driver for LCV. It should be flex",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.0",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Run a loop to restart api server on the master node at random times in the background (3-4 times)\n7) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n8) Verify whether storage classes are migrated successfully.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Fail",
        "Bug no ": "DWS-6323",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.1",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n7) Run a loop to restart convoy on the master node at random times in the background (3-4 times)\n8) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n9) PV, PVC and volume should show the updated csi provisioner.\n10) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.2",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Run a loop to restart bosun on the nodes where plexes are scheduled at random times in the background (8-10 times)\n7) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n8) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n9) PV, PVC and volume should show the updated csi provisioner.\n10) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.3",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Run a loop to restart kubelet on the nodes where plexes are scheduled at random times in the background (8-10 times)\n7) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n8) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n9) PV, PVC and volume should show the updated csi provisioner.\n10) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.4",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Run a loop to restart etcd on the master (leader) at random times in the background (8-10 times)\n7) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n8) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n9) PV, PVC and volume should show the updated csi provisioner.\n10) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Tested on Boston",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.5",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs.\n5) Delete the pods.\n6) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script.\n7) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n8) While the volume driver migration script is running, reboot the node where volume / plex is scheduled\n9) After reboot, PV, PVC and volume should show the updated csi provisioner.\n10) Re-create the pods. Pods should go into Running state and transfer data.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.6",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs. Volumes are in Attached state.\n5) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script. This should succeed.\n6) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script. This should fail saying migration failed, volume should be in Available state.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.7",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs. \n5) Delete the pods.\n6) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script. This should succeed.\n7) Shutdown the node where volumes are scheduled. Volumes will move to Down state.\n8) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script. This should succeed",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.8",
        "Scenario / Category": "",
        "Test Description": "1) Create mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs. \n5) Delete the pods.\n6) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script. This should succeed.\n7) Detach one of the plexes from each volume. Volumes will move to Degraded state.\n8) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script. This should succeed. ",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.9",
        "Scenario / Category": "",
        "Test Description": "1) Create a local volume. Will be created with CSI driver by default.\n2) Update the volume using \"dctl volume update <vol-name> -d flex\".\n3) Shouldn't be allowed.",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.10",
        "Scenario / Category": "",
        "Test Description": "1) Create a storage class with CSI.\n2) Upgrade the storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script\n3) It should throw an error that the storage class is already using CSI",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.11",
        "Scenario / Category": "",
        "Test Description": "1) Create a local volume. Will be created with CSI driver by default.\n2) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script.\n3) Should throw an error that volume is already using CSI driver",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.12",
        "Scenario / Category": "",
        "Test Description": "Try migrating a storage class which doesn't exist. The script should throw an error",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.13",
        "Scenario / Category": "",
        "Test Description": "Try migrating a volume which doesn't exist. The script should throw an error",
        "Automation TC Name": "",
        "Release": "GA-2.3.0",
        "Build No": "2.3.0-82",
        "Results": "Pass",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "S_CSI_Migrate_Negative-1.14",
        "Scenario / Category": "",
        "Test Description": "1) Create local and mirrored dynamic volumes with flex volume storage class.\n2) Create PV and PVC which will use these volumes.\n3) Create fio pods which will use these PVCs.\n4) Allow the pods to run for a few secs. \n5) Delete the pods.\n6) Upgrade storage class to use CSI driver using diamanti-storage-class-driver-migration.sh script. \n7) While the script is running, shutdown the management IP of the master node for few mins (Testing loss of connectivity)\n8) Switch up the management IP. The system should be recoverable. Script should succeed later or throw an error that migration failed, please run the script again. \n9) Migrate the volumes to CSI using diamanti-volume-driver-migration.sh script. \n10) While the script is running, shutdown the management IP of the master node for few mins (Testing loss of connectivity)\n11) Switch up the management IP. The system should be recoverable. Script should succeed later or throw an error that migration failed, please run the script again.\n12) The scripts should succeed in the end",
        "Automation TC Name": "",
        "Release": "NA",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "Tested on Boston",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "",
        "Release": "",
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Total",
        "Release": 32.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Ran",
        "Release": 32.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "% Ran",
        "Release": 100.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Pass",
        "Release": 30.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "% Pass",
        "Release": 93.75,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Automated",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    },
    {
        "TC ID": "",
        "Scenario / Category": "",
        "Test Description": "",
        "Automation TC Name": "Automated %",
        "Release": 0.0,
        "Build No": "",
        "Results": "",
        "Bug no ": "",
        "Expected Behaviour": "",
        "Notes / Detailed Description": ""
    }
]